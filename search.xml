<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>学习随想&amp;重新学习</title>
      <link href="/2024/04/08/20240408%E5%AD%A6%E4%B9%A0%E9%9A%8F%E6%83%B3/"/>
      <url>/2024/04/08/20240408%E5%AD%A6%E4%B9%A0%E9%9A%8F%E6%83%B3/</url>
      
        <content type="html"><![CDATA[<h1 id="学习随想"><a href="#学习随想" class="headerlink" title="学习随想"></a>学习随想</h1><p>感觉复盘自己的学习后最大的问题还是专注度以及认真程度</p><p>选择去德国的时候，其实就应该抛开普通的学习思考模式，而是去认真确定如何更加效率的去学习。而不是浮于表面，看似有成果，实则侃侃而谈，变成自己最讨厌的样子。</p><p>就怕知识落入理论化与形式化的窠臼，让课堂成为定理结论的堆砌，而无法深刻把握理论的本质，进而造成学了就背，考了就忘的怪圈。</p><p>有种虽说拿了奖学金看似光鲜亮丽，实则毫无知识体系的怪状萦绕。</p><p>大概也是时候不是为了表象的我学了什么，我要表现自己学了什么。</p><p>而是我今天收获了什么，我怎么去理解了这些知识，我这些知识怎么运用，可以有哪些提升……</p><p>感觉是时候回首看看自己的知识体系，并打散了重新学习。</p><p>时候不晚。</p><p>那么就从核心课中的核心课 数据结构与算法 Data Structures and Algorithms和众所周知的高等数学学习的开端 Calculus 开始叭。</p><p>希望这段思考是有意义的，改变性的存在。</p><p>自德语学习也开始半年，所谓的自学CS的内容也已经1年半有余。愿自己的时间能够更加高效，收获可以和努力成正比。也相信未来会更好。</p><p>那么也是时候多输出自己的思考与想法到自己的博客上了。</p><p>CloudH2O Blazblade</p><p>2024.4.8 写</p>]]></content>
      
      
      <categories>
          
          <category> 杂谈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习随想 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>M1打印进程树 (pstree)</title>
      <link href="/2024/03/15/NJUOS-M1-pstree/"/>
      <url>/2024/03/15/NJUOS-M1-pstree/</url>
      
        <content type="html"><![CDATA[<h1 id="M1-打印进程树-pstree"><a href="#M1-打印进程树-pstree" class="headerlink" title="M1: 打印进程树 (pstree)"></a>M1: 打印进程树 (pstree)</h1><p>实验指向：</p><p><a href="https://jyywiki.cn/OS/2024/labs/M1.md">https://jyywiki.cn/OS/2024/labs/M1.md</a> </p><p>感谢jyy老师开源的OS课程，受益匪浅。<br>同时根据《操作系统》实验须知 与 Academic Integrity ，故不直接提供代码（水平也有限）<br><strong>介绍：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">计算机世界有趣的地方在于，你可以动手构建任何你认为应该可以实现的东西。我们的热身实验是一个很简单的代码练习——但我们并不是实现类似于排序、最短路径这样的算法习题，而是一个真正有意义的 “实用工具”：了解操作系统中运行的程序 (进程) 之间的层级关系，并打印进程树。如果你觉得打印进程树这个问题比较困难，我们也把问题分解一下：</span><br></pre></td></tr></table></figure><ol><li>得到命令行的参数，根据要求设置标志变量的数值；</li><li>得到系统中所有进程的编号 (每个进程都会有唯一的编号) 保存到列表里；</li><li>对列表里的每个编号，得到它的的父亲是谁；</li><li>在内存中把树建好，按命令行参数要求排序；</li><li>把树打印到终端上。</li></ol><h3 id="实验要求：实现-pstree-打印进程之间的树状的父子关系"><a href="#实验要求：实现-pstree-打印进程之间的树状的父子关系" class="headerlink" title="实验要求：实现 pstree 打印进程之间的树状的父子关系"></a><strong>实验要求：实现 pstree 打印进程之间的树状的父子关系</strong></h3><p>Linux 系统中可以同时运行多个程序。运行的程序称为<strong>进程</strong>。除了所有进程的根之外，每个进程都有它唯一的父进程，你的任务就是把这棵树在命令行中输出。你可以自由选择展示树的方式 (例如使用缩进表示父子关系)。</p><h2 id="实验流程-所思"><a href="#实验流程-所思" class="headerlink" title="实验流程 + 所思"></a>实验流程 + 所思</h2><p>☕️<strong>解决问题</strong></p><p><strong>我们把问题分解一下：</strong></p><ol><li>得到命令行的参数，根据要求设置标志变量的数值；</li><li>得到系统中所有进程的编号 (每个进程都会有唯一的编号) 保存到列表里；</li><li>对列表里的每个编号，得到它的的父亲是谁；</li><li>在内存中把树建好，按命令行参数要求排序；</li><li>把树打印到终端上。</li></ol><h4 id="万物之始，开始去做"><a href="#万物之始，开始去做" class="headerlink" title="万物之始，开始去做"></a>万物之始，开始去做</h4><p>功能实现:</p><p>实现在<code>pstree</code>命令中，<code>-p</code>、<code>-n</code>和<code>-V</code>是可选参数的作用，具体情况如下：</p><ol><li><code>-p</code>：此选项用于显示进程的PID（进程ID）。当使用<code>-p</code>选项时，<code>pstree</code>会在输出中显示每个进程的PID。</li><li><code>-n</code>：此选项用于以数值排序的方式显示进程。通常情况下，<code>pstree</code>会按照字母顺序对进程进行排序，但使用了<code>-n</code>选项后，它会以数值的方式进行排序。</li><li><code>-V</code>：此选项用于显示<code>pstree</code>命令的版本信息。当使用了<code>-V</code>选项时，<code>pstree</code>会显示版本信息并退出，不会执行其他操作。</li></ol><p>这些选项可以根据需要单独使用，也可以组合使用，例如<code>-pn</code>、<code>-np</code>等。每个选项都可以根据具体需求来选择是否使用，以满足用户的特定要求。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> *argv[])</span> &#123;</span><br><span class="line">  </span><br><span class="line">  <span class="type">char</span> *ops = readcmdops(argc, argv);<span class="comment">// 获取命令行参数</span></span><br><span class="line">  <span class="keyword">if</span> (!ops)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="comment">//default</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="built_in">strcmp</span>(ops,<span class="string">&quot;p&quot;</span>))</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="comment">// -p：此选项用于显示进程的PID（进程ID）。</span></span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(!<span class="built_in">strcmp</span>(ops,<span class="string">&quot;n&quot;</span>))</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="comment">// -n：此选项用于以数值排序的方式显示进程。</span></span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(!<span class="built_in">strcmp</span>(ops,<span class="string">&quot;V&quot;</span>))</span><br><span class="line">    &#123;</span><br><span class="line">     <span class="comment">// -V：此选项用于显示pstree命令的版本信息。</span></span><br><span class="line">     <span class="built_in">printf</span>(<span class="string">&quot;stree (PSmisc) Cloudh2o \nCopyright (C) 1993-2019 Werner Almesberger and Craig Small\nPSmisc comes with ABSOLUTELY NO WARRANTY.\nThis is free software, and you are welcome to redistribute it under\nthe terms of the GNU General Public License.\nFor more information about these matters, see the files named COPYING.\n Klone by Cloudh2o for NJUOS M1.&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;This ops is: %s\n  &quot;</span>,<span class="string">&quot;Wrong ops&quot;</span>);</span><br><span class="line">      <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="进程"><a href="#进程" class="headerlink" title="进程"></a>进程</h4><p>进程是操作系统中的对象，因此操作系统一定提供了 API 访问它们。已经剧透过，系统里的<strong>每个进程都有唯一的编号</strong>，它在 C 语言中的类型是 <code>pid_t</code>。</p><p>有关Linux使用C语言获取进程信息的内容借鉴了</p><p><a href="https://blog.csdn.net/Once_day/article/details/136245660">https://blog.csdn.net/Once_day/article/details/136245660</a></p><h5 id="前情"><a href="#前情" class="headerlink" title="前情"></a><strong>前情</strong></h5><p>在计算机的世界里，Linux进程是一个非常基础而且关键的概念。它可以被理解为正在执行的一个程序的实例。每个进程都有自己独特的身份，我们称之为进程<strong>ID（PID）</strong>，就像每个人都有自己的身份证号码一样。</p><p>进程有不同的状态，包括运行（正在使用CPU）、等待（等待资源可用）、停止（被挂起）和僵尸（已完成执行但等待父进程读取状态的进程）。进程的终止可以通过多种方式，如正常退出、被其他进程杀死（通过发送信号）、或系统强制终止。进程结束后，其资源会被回收，但进程的退出状态（exit status）会被保存，这对于调试和错误处理非常重要。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Linux系统还支持进程的层级关系，也就是父子进程关系。当一个进程创建一个新进程时，原来的进程就是父进程，新创建的就是子进程。</span><br></pre></td></tr></table></figure><h5 id="介绍-proc目录信息"><a href="#介绍-proc目录信息" class="headerlink" title="介绍/proc目录信息"></a><strong>介绍/proc目录信息</strong></h5><p>在Linux操作系统中，<code>/proc</code>目录是一个非常特殊和有趣的存在，它实际上并不是存储在硬盘上的真实文件系统，而是一个虚拟文件系统，通常被称为进程信息伪文件系统（Process Information Pseudo-File System）。<code>/proc</code>提供了一个窗口，通过它可以窥见内核中的世界，包括系统信息及正在运行的进程详情。</p><p><code>/proc</code>目录中的文件和子目录大都以数字命名，这些数字对应着系统中的进程ID（PID）。每一个这样的目录里面，包含了与该PID相关的信息，例如进程的内存映射<code>(/proc/&lt;pid&gt;/maps)</code>、环境变量<code>(/proc/&lt;pid&gt;/environ)</code>、可执行文件的链接<code>(/proc/&lt;pid&gt;/exe)</code>等等。这些文件为系统管理员和程序员提供了一种简便的方式来监控进程和系统的内部状态。</p><p>除了进程相关信息，<code>/proc</code>目录还包含了许多全系统范围的信息。例如，<code>/proc/meminfo</code>文件包含了内存使用情况的详细信息，<code>/proc/cpuinfo</code>提供了CPU的相关信息，<code>/proc/net</code>目录包含了网络协议和配置的信息，等等。</p><p>值得一提的是，<code>/proc</code>目录下的文件大多是可读的文本文件，可以直接使用常用的文本工具查看，如<code>cat</code>、<code>less</code>等。但也有一些文件是可写的，通过对这些文件写入特定的值，用户或程序员可以调整或配置内核参数，这是实现内核动态调优的一种方式。</p><p>一个常见的应用场景是，当系统管理员想要快速检查系统的运行状态，或者程序员在开发过程中需要获取系统或进程的某些信息时，他们就会查阅<code>/proc</code>目录下的文件。例如，通过读取<code>/proc/uptime</code>文件，可以获取系统已经运行了多长时间；通过查看<code>/proc/loadavg</code>文件，可以了解系统的平均负载情况。</p><p><strong>常见的子目录和文件及其功能:</strong></p><div class="table-container"><table><thead><tr><th>路径</th><th>功能</th></tr></thead><tbody><tr><td>/proc/[pid]</td><td>包含每个进程的信息</td></tr><tr><td>/proc/cpuinfo</td><td>包含有关CPU的信息</td></tr><tr><td>/proc/meminfo</td><td>包含有关内存的信息</td></tr><tr><td>/proc/net</td><td>包含有关网络的信息</td></tr><tr><td>/proc/filesystems</td><td>包含当前系统支持的文件系统类型列表</td></tr><tr><td>/proc/loadavg</td><td>包含系统平均负载的信息</td></tr><tr><td>/proc/sys/kernel</td><td>包含内核参数的目录，可用于设置和查询内核参数</td></tr><tr><td>/proc/sys/fs</td><td>包含文件系统参数的目录，可用于设置和查询文件系统参数</td></tr><tr><td>/proc/sys/net</td><td>包含网络参数的目录，可用于设置和查询网络参数</td></tr><tr><td>/proc/sys/vm</td><td>包含虚拟内存参数的目录，可用于设置和查询虚拟内存参数</td></tr><tr><td>/proc/version</td><td>包含有关内核版本的信息</td></tr><tr><td>/proc/cmdline</td><td>包含启动时内核的命令行参数</td></tr><tr><td>/proc/self</td><td>一个指向当前进程自身的符号链接</td></tr><tr><td>/proc/sysinfo</td><td>包含系统信息的文件，如架构、主机名等</td></tr></tbody></table></div><h5 id="大思路"><a href="#大思路" class="headerlink" title="大思路"></a>大思路</h5><p>1.遍历<code>/proc</code>目录下的数字开头的目录(数字即进程pid)</p><p>2.建树和打印</p><p><strong>伪代码：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">函数 readcmdops(argc, argv):</span><br><span class="line">    如果 argc 等于 1:</span><br><span class="line">        返回空指针</span><br><span class="line">    否则:</span><br><span class="line">        从第二个参数开始的字符串去除 &#x27;-&#x27; 符号，得到指令参数 ops</span><br><span class="line">        返回 ops</span><br><span class="line"></span><br><span class="line">函数 readprocessname_ppid(pid, name[]):</span><br><span class="line">    从 /proc/pid/stat 文件中读取进程名称和父进程ID</span><br><span class="line">    将读取的进程名称和父进程ID存储到 name 数组中</span><br><span class="line">    返回父进程ID</span><br><span class="line"></span><br><span class="line">函数 setProcessInfo():</span><br><span class="line">    打开 /proc 目录</span><br><span class="line">    遍历目录下的文件，解析文件名为进程ID</span><br><span class="line">    读取每个进程的名称和父进程ID，并存储到数组 pidinfos 中</span><br><span class="line"></span><br><span class="line">函数 findallchildrens(pid, index[]):</span><br><span class="line">    根据给定的父进程ID pid，在 pidinfos 数组中查找所有子进程的索引，并存储到 index 数组中</span><br><span class="line"></span><br><span class="line">函数 creat_tree(root, tab_length):</span><br><span class="line">    根据给定的根节点 root 和 tab_length，递归地创建进程树</span><br><span class="line">    遍历根节点的子节点，并根据 tab_length 控制缩进</span><br><span class="line">    打印每个节点的名称和进程ID</span><br><span class="line">    递归地对每个子节点调用 creat_tree</span><br><span class="line"></span><br><span class="line">函数 creat_tree_nopid(root, tab_length):</span><br><span class="line">    与 creat_tree 类似，但不打印进程ID，只打印名称</span><br><span class="line"></span><br><span class="line">主函数 main(argc, argv):</span><br><span class="line">    读取命令行参数 ops</span><br><span class="line">    如果 ops 为空:</span><br><span class="line">        调用 setProcessInfo() 读取进程信息</span><br><span class="line">        创建根节点 root</span><br><span class="line">        调用 creat_tree_nopid(root, 0) 打印进程树</span><br><span class="line">    否则:</span><br><span class="line">        根据 ops 的值选择不同的操作：</span><br><span class="line">        如果 ops 为 &#x27;p&#x27;:</span><br><span class="line">            调用 setProcessInfo() 读取进程信息</span><br><span class="line">            创建根节点 root</span><br><span class="line">            调用 creat_tree(root, 0) 打印进程树（包含进程ID）</span><br><span class="line">        如果 ops 为 &#x27;n&#x27;:</span><br><span class="line">            调用 setProcessInfo() 读取进程信息</span><br><span class="line">            创建根节点 root</span><br><span class="line">            调用 creat_tree_nopid(root, 0) 打印进程树（不包含进程ID）</span><br><span class="line">        如果 ops 为 &#x27;V&#x27;:</span><br><span class="line">            打印版本信息</span><br><span class="line">        否则:</span><br><span class="line">            输出错误提示信息</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CS计算机科学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> OS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Detusch A1 Grammatik</title>
      <link href="/2023/11/07/%E5%BE%B7%E8%AF%ADA1Grammar/"/>
      <url>/2023/11/07/%E5%BE%B7%E8%AF%ADA1Grammar/</url>
      
        <content type="html"><![CDATA[<h2 id="1-人称代词-Personalpronomen"><a href="#1-人称代词-Personalpronomen" class="headerlink" title="1 人称代词 Personalpronomen"></a>1 人称代词 Personalpronomen</h2><div class="table-container"><table><thead><tr><th></th><th>Nominativ (主格)</th><th>Akkusativ (宾格)</th><th>Dativ (与格)</th></tr></thead><tbody><tr><td>我</td><td>ich</td><td>mich</td><td>mir</td></tr><tr><td>你</td><td>du</td><td>dich</td><td>dir</td></tr><tr><td>您</td><td>Sie</td><td>Sie</td><td>Ihnen</td></tr><tr><td>他</td><td>er</td><td>ihn</td><td>ihm</td></tr><tr><td>她</td><td>sie</td><td>sie</td><td>ihr</td></tr><tr><td>它</td><td>es</td><td>es</td><td>ihm</td></tr><tr><td>我们</td><td>wir</td><td>uns</td><td>uns</td></tr><tr><td>你们</td><td>ihr</td><td>euch</td><td>euch</td></tr><tr><td>您们</td><td>Sie</td><td>Sie</td><td>Ihnen</td></tr><tr><td>TA们</td><td>sie</td><td>sie</td><td>ihnen</td></tr></tbody></table></div><h2 id="2-所有格代词-Possessivpronomen"><a href="#2-所有格代词-Possessivpronomen" class="headerlink" title="2 所有格代词 Possessivpronomen"></a>2 所有格代词 Possessivpronomen</h2><h3 id="2-1-所有格代词的主格"><a href="#2-1-所有格代词的主格" class="headerlink" title="2.1 所有格代词的主格"></a>2.1 所有格代词的主格</h3><div class="table-container"><table><thead><tr><th></th><th>MASK.阳性 (der)</th><th>FEM.阴性 (die)</th><th>NEUT.中性 (das)</th><th>PL.复数 (die)</th></tr></thead><tbody><tr><td>ich 我</td><td>mein</td><td>meine</td><td>mein</td><td>meine</td></tr><tr><td>du 你（非正式）</td><td>dein</td><td>deine</td><td>dein</td><td>deine</td></tr><tr><td>er/es 他/它</td><td>sein</td><td>seine</td><td>sein</td><td>seine</td></tr><tr><td>sie 她</td><td>ihr</td><td>ihre</td><td>ihr</td><td>ihre</td></tr><tr><td>wir 我们</td><td>unser</td><td>unsere</td><td>unser</td><td>unsere</td></tr><tr><td>ihr 你们</td><td>euer</td><td>eure</td><td>euer</td><td>eure</td></tr><tr><td>Sie/Sie 你/你们（正式）</td><td>Ihr</td><td>Ihre</td><td>Ihr</td><td>Ihre</td></tr><tr><td>sie TA们</td><td>ihr</td><td>ihre</td><td>ihr</td><td>ihre</td></tr></tbody></table></div><h3 id="2-2-所有格代词的宾格"><a href="#2-2-所有格代词的宾格" class="headerlink" title="2.2 所有格代词的宾格"></a>2.2 所有格代词的宾格</h3><div class="table-container"><table><thead><tr><th></th><th>MASK. 阳性</th><th>FEM. 阴性</th><th>NEUT. 中性</th><th>PL. 复数</th></tr></thead><tbody><tr><td>ich 我</td><td>meinen</td><td>meine</td><td>mein</td><td>meine</td></tr><tr><td>du 你（非正式）</td><td>deinen</td><td>deine</td><td>dein</td><td>deine</td></tr><tr><td>er/es 他/它</td><td>seinen</td><td>seine</td><td>sein</td><td>seine</td></tr><tr><td>sie 她</td><td>ihren</td><td>ihre</td><td>ihr</td><td>ihre</td></tr><tr><td>wir 我们</td><td>unseren</td><td>unsere</td><td>unser</td><td>unsere</td></tr><tr><td>ihr 你们</td><td>euren</td><td>eure</td><td>euer</td><td>eure</td></tr><tr><td>Sie/Sie 你/你们（正式）</td><td>Ihren</td><td>Ihre</td><td>Ihr</td><td>Ihre</td></tr><tr><td>sie TA们</td><td>ihren</td><td>ihre</td><td>ihr</td><td>ihre</td></tr></tbody></table></div><h3 id="2-3-所有格代词的与格"><a href="#2-3-所有格代词的与格" class="headerlink" title="2.3 所有格代词的与格"></a>2.3 所有格代词的与格</h3><div class="table-container"><table><thead><tr><th></th><th>MASK.</th><th>FEM.</th><th>NEUT.</th><th>PL.</th></tr></thead><tbody><tr><td>ich 我</td><td>meinem</td><td>meiner</td><td>meinem</td><td>meinen+n</td></tr><tr><td>du 你</td><td>deinem</td><td>deiner</td><td>deinem</td><td>deinen+n</td></tr><tr><td>er/es 他/它</td><td>seinem</td><td>seiner</td><td>seinem</td><td>seinen+n</td></tr><tr><td>sie 她</td><td>ihrem</td><td>ihrer</td><td>ihrem</td><td>ihren+n</td></tr><tr><td>wir 我们</td><td>unserem</td><td>unserer</td><td>unserem</td><td>unseren+n</td></tr><tr><td>ihr 你们</td><td>eurem</td><td>eurer</td><td>eurem</td><td>euren+n</td></tr><tr><td>Sie/Sie 你/你们 （正式）</td><td>Ihrem</td><td>Ihrer</td><td>Ihrem</td><td>Ihren+n</td></tr><tr><td>sie TA们</td><td>ihrem</td><td>ihrer</td><td>ihrem</td><td>ihren+n</td></tr></tbody></table></div><h2 id="3-冠词-Artikel"><a href="#3-冠词-Artikel" class="headerlink" title="3 冠词 Artikel"></a>3 冠词 Artikel</h2><h3 id="3-1-冠词的主格"><a href="#3-1-冠词的主格" class="headerlink" title="3.1 冠词的主格"></a>3.1 冠词的主格</h3><div class="table-container"><table><thead><tr><th></th><th>bestimmt 定冠词</th><th>unbestimmt 不定冠词</th><th>negativ 否定冠词</th></tr></thead><tbody><tr><td>maskulin 阳性单数</td><td>der</td><td>ein</td><td>kein</td></tr><tr><td>feminin 阴性单数</td><td>die</td><td>eine</td><td>keine</td></tr><tr><td>neutrum 中性单数</td><td>das</td><td>ein</td><td>kein</td></tr><tr><td>Plural 复数</td><td>die</td><td>-</td><td>keine</td></tr></tbody></table></div><h3 id="3-2-冠词的宾格"><a href="#3-2-冠词的宾格" class="headerlink" title="3.2 冠词的宾格"></a>3.2 冠词的宾格</h3><div class="table-container"><table><thead><tr><th></th><th>bestimmt</th><th>unbestimmt</th><th>negativ</th></tr></thead><tbody><tr><td>Maskulin</td><td>den</td><td>einen</td><td>keinen</td></tr><tr><td>Feminin</td><td>die</td><td>eine</td><td>keine</td></tr><tr><td>Neutral</td><td>das</td><td>ein</td><td>kein</td></tr><tr><td>Plural</td><td>die</td><td>-</td><td>keine</td></tr></tbody></table></div><h3 id="3-3-冠词的与格"><a href="#3-3-冠词的与格" class="headerlink" title="3.3 冠词的与格"></a>3.3 冠词的与格</h3><div class="table-container"><table><thead><tr><th></th><th>bestimmt</th><th>unbestimmt</th><th>negativ</th></tr></thead><tbody><tr><td>Maskulin</td><td>dem</td><td>einem</td><td>keinem</td></tr><tr><td>Feminin</td><td>der</td><td>einer</td><td>keiner</td></tr><tr><td>Neutral</td><td>dem</td><td>einem</td><td>keinem</td></tr><tr><td>Plural</td><td>den+n (den kindern)</td><td>-+n (kindern)</td><td>keinen+n (keinen kindern)</td></tr></tbody></table></div><h2 id="4-动词"><a href="#4-动词" class="headerlink" title="4 动词"></a>4 动词</h2><h3 id="4-1-不规则动词的变形规则-regelmasige-verben"><a href="#4-1-不规则动词的变形规则-regelmasige-verben" class="headerlink" title="4.1 不规则动词的变形规则 regelmäßige verben"></a>4.1 不规则动词的变形规则 regelmäßige verben</h3><p><strong>一般规则：</strong>不改变词根,，改变词尾。</p><div class="table-container"><table><thead><tr><th>ich</th><th>verbstamm+e</th><th>wir</th><th>verbstamm+en</th></tr></thead><tbody><tr><td>du</td><td>verbstamm+st</td><td>ihr</td><td>verbstamm+t</td></tr><tr><td>Sie</td><td>verbstamm+en</td><td>Sie</td><td>verbstamm+en</td></tr><tr><td>er/sie/es</td><td>verbstamm+t</td><td>sie</td><td>verbstamm+en</td></tr></tbody></table></div><p><strong>特殊情况1：</strong>如果词根有-s，-ß，或者-z结尾，比如heißen, tanzen，那么词缀中的-st变成-t。</p><p>以heißen (to be called)为例：</p><div class="table-container"><table><thead><tr><th>ich</th><th>heiße</th><th>wir</th><th>heißen</th></tr></thead><tbody><tr><td>du</td><td>heißt (!)</td><td>ihr</td><td>heißt</td></tr><tr><td>Sie</td><td>heißen</td><td>Sie</td><td>heißen</td></tr><tr><td>er/sie/es</td><td>heißt</td><td>sie</td><td>heißen</td></tr></tbody></table></div><p><strong>特殊情况2：</strong>如果词根有-d或者-t结尾，比如arbeiten, warten，antworten，那么词缀中的-st变成-est，-t变成-et。</p><p>以arbeiten (to work)为例：</p><div class="table-container"><table><thead><tr><th>ich</th><th>arbeite</th><th>wir</th><th>arbeiten</th></tr></thead><tbody><tr><td>du</td><td>arbeitest (!)</td><td>ihr</td><td>arbeitet (!)</td></tr><tr><td>Sie</td><td>arbeiten</td><td>Sie</td><td>arbeiten</td></tr><tr><td>er/sie/es</td><td>arbeitet (!)</td><td>sie</td><td>arbeiten</td></tr></tbody></table></div><h3 id="4-2-不规则动词的变形规则-unregelmasige"><a href="#4-2-不规则动词的变形规则-unregelmasige" class="headerlink" title="4.2 不规则动词的变形规则 unregelmäßige"></a>4.2 不规则动词的变形规则 unregelmäßige</h3><p><strong>一般规则：</strong>在接du和er/sie/es的时候改变词根，同时也改变词尾，分为以下五种情况。</p><p><strong>情况1：e—&gt;i</strong></p><p>以spr<strong>e</strong>chen (to speak)为例</p><div class="table-container"><table><thead><tr><th>ich</th><th>spreche</th><th>wir</th><th>sprechen</th></tr></thead><tbody><tr><td>du</td><td>sprichst (!)</td><td>ihr</td><td>sprecht</td></tr><tr><td>Sie</td><td>sprechen</td><td>Sie</td><td>sprechen</td></tr><tr><td>er/sie/es</td><td>spricht (!)</td><td>sie</td><td>sprechen</td></tr></tbody></table></div><p><strong>情况2：e—&gt;ie</strong></p><p>以l<strong>e</strong>sen (to read)为例</p><div class="table-container"><table><thead><tr><th>ich</th><th>lese</th><th>wir</th><th>lesen</th></tr></thead><tbody><tr><td>du</td><td>liest (!)</td><td>ihr</td><td>lest</td></tr><tr><td>Sie</td><td>lesen</td><td>Sie</td><td>lesen</td></tr><tr><td>er/sie/es</td><td>liest (!)</td><td>sie</td><td>lesen</td></tr></tbody></table></div><p><strong>情况3：au—&gt;äu</strong></p><p>以l<strong>au</strong>fen (to walk)为例</p><div class="table-container"><table><thead><tr><th>ich</th><th>laufe</th><th>wir</th><th>laufen</th></tr></thead><tbody><tr><td>du</td><td>läufst (!)</td><td>ihr</td><td>lauft</td></tr><tr><td>Sie</td><td>laufen</td><td>Sie</td><td>laufen</td></tr><tr><td>er/sie/es</td><td>läuft (!)</td><td>sie</td><td>laufen</td></tr></tbody></table></div><p><strong>情况4：a—&gt;ä</strong></p><p>以f<strong>a</strong>hren (to drive)为例</p><div class="table-container"><table><thead><tr><th>ich</th><th>fahre</th><th>wir</th><th>fahre</th></tr></thead><tbody><tr><td>du</td><td>fährst (!)</td><td>ihr</td><td>fahrt</td></tr><tr><td>Sie</td><td>fahren</td><td>Sie</td><td>fahren</td></tr><tr><td>er/sie/es</td><td>fährt (!)</td><td>sie</td><td>fahren</td></tr></tbody></table></div><p><strong>情况5：i—&gt;ei</strong></p><p>以w<strong>i</strong>ssen (to know)为例，注意wissen接ich后面也有变化！</p><div class="table-container"><table><thead><tr><th>ich</th><th>weiß (!)</th><th>wir</th><th>wissen</th></tr></thead><tbody><tr><td>du</td><td>weißt</td><td>ihr</td><td>wisst</td></tr><tr><td>Sie</td><td>wissen (!)</td><td>Sie</td><td>wissen</td></tr><tr><td>er/sie/es</td><td>weiß (!)</td><td>sie</td><td>wissen</td></tr></tbody></table></div><h3 id="4-3-可分动词-Trennbare-Verben"><a href="#4-3-可分动词-Trennbare-Verben" class="headerlink" title="4.3 可分动词 Trennbare Verben"></a>4.3 可分动词 Trennbare Verben</h3><p><strong>可分动词在不同类型句子中的位置</strong></p><div class="table-container"><table><thead><tr><th>Ich stehe um 6 Uhr auf. I get up at 6 o’clock.</th><th>陈述句中，可分动词的词尾放在句子第二个位置，前缀放在句末。</th></tr></thead><tbody><tr><td>Wann stehst du auf? When do you get up?</td><td>W-Frage中，可分动词的位置跟陈述句一样。</td></tr><tr><td>Stehst du um 6 Uhr auf? Do you get up at 6 o’clock?</td><td>Ja-Nein-Frage中，可分动词的词尾放在句首，前缀放在句末。</td></tr><tr><td>Wann willst du aufstehen？ When do you want to get up？</td><td>疑问句中跟情态动词连用时，情态动词放在第二位，可分动词放在句末。</td></tr></tbody></table></div><p><strong>常见的可分动词</strong></p><div class="table-container"><table><thead><tr><th>losgehen to set off</th><th>Peter geht um 9 Uhr los. Peter sets off at 9 o’clock.</th></tr></thead><tbody><tr><td>mitkommen to come along</td><td>wir gehen zur Schule. Kommst du mit? We are going to the school. Are you coming with us?</td></tr><tr><td>abholen to pick something or someone up?</td><td>Kannst du mich um 18 Uhr abholen? Can you pick me up at 6 p.m.?</td></tr><tr><td>abfahren to leave/to depart</td><td>Der Zug fährt um 7 Uhr ab. The train leaves at 7 o’clock.</td></tr><tr><td>ankommen to arrive</td><td>Der Bus kommt um 7 Uhr an. The bus arrives at 7 o’clock.</td></tr><tr><td>anfangen to begin</td><td>Der Unterricht fängt um 13 Uhr an. The class begins at 1 o’clock.</td></tr><tr><td>einkaufen to shop</td><td>Am Wochenende kaufen wir in der Stadt ein. On the weekend we will shop in the city.</td></tr><tr><td>fernsehen to watch TV</td><td>Peter und Maria sehen am Abend immer fern. Peter and Maria always watch TV in the evening.</td></tr><tr><td>anrufen to phone in / to call</td><td>Kannst du mich heute Abend anrufen? Can you call me today evening?</td></tr><tr><td>einladen to invite</td><td>Lädst du mich zu deiner Hochzeit ein？ Will you invite me to your wedding?</td></tr><tr><td>zumachen to close</td><td>Mir ist kalt. Kannst du bitte das Fenster zumachen? I am feeling cold. Can you please close the window?</td></tr></tbody></table></div><h3 id="4-4-不可分动词-Untrennbare-Verben"><a href="#4-4-不可分动词-Untrennbare-Verben" class="headerlink" title="4.4 不可分动词 Untrennbare Verben"></a>4.4 不可分动词 Untrennbare Verben</h3><p><strong>不可分动词的位置</strong></p><div class="table-container"><table><thead><tr><th>作为主要动词Als Vollverb (as main verb) 使用时，放在句子第二位。</th><th>Er versteht mich gut. He understands me well.</th></tr></thead><tbody><tr><td>在W-Frage疑问句中，放在句子第二位。</td><td>Warum verstehst du mich nicht? Why don’t you understand me?</td></tr><tr><td>在Ja-Nein-Frage句子中，放在句首。</td><td>Verstehst du mich? Do you understand me?</td></tr><tr><td></td><td>Ich kann dich verstehen. I can understand you.</td></tr></tbody></table></div><p>be-开头的不可分动词</p><div class="table-container"><table><thead><tr><th>be kommen</th><th>to get</th></tr></thead><tbody><tr><td>Wir bekommen bald eine neue Lehrerin.</td><td>Soon we will get a new teacher.</td></tr><tr><td>bezahlen</td><td>to pay</td></tr><tr><td>Kannst du bitte heute bezahlen? Ich habe kein Geld.</td><td>Can you pay today please? I have no money.</td></tr></tbody></table></div><p><strong>emp-开头的不可分动词</strong></p><div class="table-container"><table><thead><tr><th>empfehlen</th><th>to recommend</th></tr></thead><tbody><tr><td>Herr Ober, was empfehlen Sie mir heute?</td><td>Waiter, what would you recommend me today?</td></tr><tr><td>empfangen</td><td>to receive</td></tr><tr><td>Der Schulleiter empfängt seine Gäste herzlich.</td><td>The school principal receives his guests warmly.</td></tr></tbody></table></div><p><strong>ent-开头的不可分动词</strong></p><div class="table-container"><table><thead><tr><th>entdecken</th><th>to discover</th></tr></thead><tbody><tr><td>Mein Sohn entdeckt jeden Tag etwas Neues.</td><td>My son discovers something new everyday.</td></tr><tr><td>entleeren</td><td>to empty</td></tr><tr><td>Am Montag müssen wir die Mülltonne entleeren.</td><td>On Monday we have to empty the garbage bin.</td></tr></tbody></table></div><p><strong>er-开头的不可分动词</strong></p><div class="table-container"><table><thead><tr><th>erzählen</th><th>to narrate/ to tell</th></tr></thead><tbody><tr><td>Mein Großvater erzählt interessante Geschichten.</td><td>My grandfather tell interesting stories.</td></tr><tr><td>erkennen</td><td>to recognise</td></tr><tr><td>Kannst du mich auf diesem Foto erkennen?</td><td>Can you recognise me in this photo?</td></tr></tbody></table></div><p><strong>ge-开头的不可分动词</strong></p><div class="table-container"><table><thead><tr><th>gehören</th><th>to belong</th></tr></thead><tbody><tr><td>Die Uhr gehört mir.</td><td>The watch belongs to me.</td></tr><tr><td>gefallen</td><td>to please/ to appeal</td></tr><tr><td>Mir gefällt dein neues Haus.</td><td>I like your new house.</td></tr></tbody></table></div><p><strong>miss-开头的不可分动词</strong></p><div class="table-container"><table><thead><tr><th>missbrauchen</th><th>to misuse</th></tr></thead><tbody><tr><td>Tom kann nie mein Vertrauen missbrauchen.</td><td>Tom can never betray my trust.</td></tr><tr><td>missverstehen</td><td>to misunderstand</td></tr><tr><td>Im Unterricht kann man die Anweisungen manchmal missverstehen.</td><td>Sometimes one can misunderstand the instructions in the class.</td></tr></tbody></table></div><p><strong>ver-开头的不可分动词</strong></p><div class="table-container"><table><thead><tr><th>verkaufen</th><th>to sell</th></tr></thead><tbody><tr><td>Er verkauft sein altes Haus.</td><td>He is selling his old house.</td></tr><tr><td>verlieren</td><td>to lose</td></tr><tr><td>Wenn ich Schach spiele, verliere ich immer.</td><td>I always lose, when I play chess.</td></tr></tbody></table></div><p><strong>zer-开头的不可分动词</strong></p><div class="table-container"><table><thead><tr><th>zerstören</th><th>to destroy</th></tr></thead><tbody><tr><td>Ein erdbeben kann manchmal viele Häuser zerstören.</td><td>An earthquake can sometimes destroy many houses.</td></tr><tr><td>zerkleinern</td><td>to crush/ chop/ shred</td></tr><tr><td>Mein Mixer zerkleinert alle Gemüsesorten.</td><td>My blender shreds all sorts of vegetables.</td></tr></tbody></table></div><h3 id="4-5-情态动词-Mochten"><a href="#4-5-情态动词-Mochten" class="headerlink" title="4.5 情态动词 Möchten"></a>4.5 情态动词 Möchten</h3><p><strong>使用规则：</strong>在使用Möchten时，放在第二位，连接的动词放在句子最后。但是在是否类问题中，Möchten放在句首。</p><div class="table-container"><table><thead><tr><th>Ich möchte Ärztin werden.</th><th>I would like to be a doctor.</th></tr></thead><tbody><tr><td>Peter möchte in England studieren.</td><td>Peter would like to study in England.</td></tr><tr><td>Was möchtest du essen?</td><td>What would you like to eat?</td></tr><tr><td>Möchtest du ins Kino gehen?</td><td>Would you like to go to cinema?</td></tr><tr><td>Ich möchte eine Cola. (!)</td><td>I would like a cola.</td></tr></tbody></table></div><p><strong>变化规则：</strong></p><div class="table-container"><table><thead><tr><th></th><th>Singular</th><th></th><th>Plural</th></tr></thead><tbody><tr><td>ich</td><td>möchte</td><td>wir</td><td>möchten</td></tr><tr><td>du</td><td>möchtest</td><td>ihr</td><td>möchtet</td></tr><tr><td>Sie</td><td>möchten</td><td>Sie</td><td>möchten</td></tr><tr><td>er/sie/es</td><td>möchte (!)</td><td>sie</td><td>möchten</td></tr></tbody></table></div><h2 id="5-Haben和sein-Verbkonjugation"><a href="#5-Haben和sein-Verbkonjugation" class="headerlink" title="5 Haben和sein Verbkonjugation"></a>5 Haben和sein Verbkonjugation</h2><h3 id="5-1-一般现在时"><a href="#5-1-一般现在时" class="headerlink" title="5.1 一般现在时"></a>5.1 一般现在时</h3><p><strong>haben (to have)</strong></p><div class="table-container"><table><thead><tr><th>Singular</th><th>单数</th><th>Plural</th><th>复数</th></tr></thead><tbody><tr><td>ich</td><td>habe</td><td>wir</td><td>haben</td></tr><tr><td>du</td><td>hast</td><td>ihr</td><td>habt</td></tr><tr><td>Sie</td><td>haben</td><td>Sie</td><td>haben</td></tr><tr><td>er/sie/es</td><td>hat</td><td>sie</td><td>haben</td></tr></tbody></table></div><p><strong>sein (to be )</strong></p><div class="table-container"><table><thead><tr><th>Singular</th><th>单数</th><th>Plural</th><th>复数</th></tr></thead><tbody><tr><td>ich</td><td>bin</td><td>wir</td><td>sind</td></tr><tr><td>du</td><td>bist</td><td>ihr</td><td>seid</td></tr><tr><td>Sie</td><td>sind</td><td>Sie</td><td>sind</td></tr><tr><td>er/sie/es</td><td>ist</td><td>sie</td><td>sind</td></tr></tbody></table></div><h3 id="5-2-过去时"><a href="#5-2-过去时" class="headerlink" title="5.2 过去时"></a>5.2 过去时</h3><p><strong>sein—&gt;waren (be—&gt;was)</strong></p><div class="table-container"><table><thead><tr><th>Singular</th><th>单数</th><th>Plural</th><th>复数</th></tr></thead><tbody><tr><td>ich</td><td>war</td><td>wir</td><td>waren</td></tr><tr><td>du</td><td>warst</td><td>ihr</td><td>wart</td></tr><tr><td>Sie</td><td>waren</td><td>Sie</td><td>waren</td></tr><tr><td>er/sie/es</td><td>war</td><td>sie</td><td>waren</td></tr></tbody></table></div><p><strong>03 haben—&gt;hatten (have—&gt;had)</strong></p><div class="table-container"><table><thead><tr><th>Singular</th><th>单数</th><th>Plural</th><th>复数</th></tr></thead><tbody><tr><td>ich</td><td>hatte (!)</td><td>wir</td><td>hatten</td></tr><tr><td>du</td><td>hattest</td><td>ihr</td><td>hattet</td></tr><tr><td>Sie</td><td>hatten</td><td>Sie</td><td>hatten</td></tr><tr><td>er/sie/es</td><td>hatte (!)</td><td>sie</td><td>hatten</td></tr></tbody></table></div><h3 id="5-3-现在完成时"><a href="#5-3-现在完成时" class="headerlink" title="5.3 现在完成时"></a>5.3 现在完成时</h3><p><strong>Haben：大多数动词的现在完成时用haben为助动词。</strong></p><div class="table-container"><table><thead><tr><th>kaufen (to buy)</th><th>hat gekauft</th></tr></thead><tbody><tr><td>Er hat ein neues Auto gekauft.</td><td>He has bought a new car.</td></tr><tr><td>Trinken (to drink)</td><td>hat getrunken</td></tr><tr><td>Sabine hat heute viel Kaffee getrunken.</td><td>Sabine has drunk a lot of coffee today.</td></tr><tr><td>regnen (to rain)</td><td>hat geregnet</td></tr><tr><td>Es hat wieder geregnet.</td><td>It has rained again.</td></tr></tbody></table></div><div class="table-container"><table><thead><tr><th>Essen (to eat)</th><th>hat gegessen</th></tr></thead><tbody><tr><td>machen (to do)</td><td>hat gemacht</td></tr><tr><td>spielen (to play)</td><td>hat gespielt</td></tr><tr><td>schreiben (to write)</td><td>hat geschrieben</td></tr><tr><td>studieren (to study)</td><td>hat studiert</td></tr><tr><td>sprechen (to speak)</td><td>hat gesprochen</td></tr><tr><td>anrufen (to call)</td><td>hat angerufen</td></tr><tr><td>kochen (to cook)</td><td>hat gekocht</td></tr></tbody></table></div><p><strong>Sein：表示地点，状态变化的动词以及一些特殊动词，在现在完成时中使用sein为助动词。</strong></p><p>表示地点变化的动词</p><div class="table-container"><table><thead><tr><th>Fliegen (to fly)</th><th>ist geflogen</th></tr></thead><tbody><tr><td>Meine Eltern sind gestern nach London geflogen.</td><td>My parents flew to London yesterday.</td></tr><tr><td>gehen (to walk)</td><td>ist gegangen</td></tr><tr><td>Er ist mit Miriam ins Kino gegangen.</td></tr></tbody></table></div><div class="table-container"><table><thead><tr><th>fahren (to drive)</th><th>ist gefahren</th></tr></thead><tbody><tr><td>kommen (to come)</td><td>ist gekommen</td></tr><tr><td>springen (to jump)</td><td>ist gesprungen</td></tr><tr><td>reisen (to travel)</td><td>ist gereist</td></tr><tr><td>schwimmen (to swim)</td><td>ist geschwommen</td></tr><tr><td>losgehen (to set off)</td><td>ist losgegangen</td></tr><tr><td>laufen (to run)</td><td>ist gelaufen</td></tr></tbody></table></div><p>表示状态变化的动词</p><div class="table-container"><table><thead><tr><th>sterben (to die)</th><th>ist gestorben</th></tr></thead><tbody><tr><td>Letzte Woche ist sein Vater gestorben.</td><td>His father died last week.</td></tr><tr><td>einschlafen (to fall asleep)</td><td>ist eingeschlafen</td></tr></tbody></table></div><div class="table-container"><table><thead><tr><th>aufwachen (to wake up)</th><th>ist aufgewacht</th></tr></thead><tbody><tr><td>wachsen (to grow)</td><td>ist gewachsen</td></tr><tr><td>aufstehen (to get up)</td><td>ist aufgestanden</td></tr></tbody></table></div><p>其他特殊动词</p><div class="table-container"><table><thead><tr><th>bleiben (to stay)</th><th>ist geblieben</th></tr></thead><tbody><tr><td>Ich bin letze Woche in Spanien geblieben.</td><td>Last week I stayed in Spain.</td></tr><tr><td>sein (to be)</td><td>ist gewesen (been)</td></tr><tr><td>Wo bist du gestern gewesen?</td><td>Where were you yesterday?</td></tr><tr><td>passieren (to happen)</td><td>ist passiert</td></tr><tr><td>Was ist passiert?</td><td>What happened?</td></tr><tr><td>werden (to become)</td><td>ist geworden</td></tr><tr><td>Oma ist heute 70 geworden.</td><td>Grandma turned 70 today.</td></tr></tbody></table></div><p><strong>现在完成时中可同时使用haben和sein的动词</strong></p><div class="table-container"><table><thead><tr><th>fahren</th><th>ist/hat gefahren</th></tr></thead><tbody><tr><td>Ich bin nach Köln gefahren.</td><td>I drove to Cologne. 句子表示地点的变化时使用sein</td></tr><tr><td>Ich habe mein neues Auto gefahren.</td><td>I drove my new car. 句子没有表示地点的变化时使用haben</td></tr></tbody></table></div><h2 id="6-疑问代词-Fragepronomen"><a href="#6-疑问代词-Fragepronomen" class="headerlink" title="6 疑问代词 Fragepronomen"></a>6 疑问代词 Fragepronomen</h2><p><strong>welch- (which)</strong></p><div class="table-container"><table><thead><tr><th></th><th>Nominativ</th><th>Akkusativ</th><th>Dativ</th></tr></thead><tbody><tr><td>Maskulin</td><td>Welcher</td><td>Welchen</td><td>Welchem</td></tr><tr><td>Feminin</td><td>Welche</td><td>Welche</td><td>Welcher</td></tr><tr><td>Neutrum</td><td>Welches</td><td>Welches</td><td>Welchem</td></tr><tr><td>Plural</td><td>Welche</td><td>Welche</td><td>Welchen+(e)n</td></tr></tbody></table></div><h2 id="7-指示代词-Demonstrativpronomen"><a href="#7-指示代词-Demonstrativpronomen" class="headerlink" title="7 指示代词 Demonstrativpronomen"></a>7 指示代词 Demonstrativpronomen</h2><p><strong>dies- (this)</strong></p><div class="table-container"><table><thead><tr><th></th><th>Nominativ</th><th>Akkusativ</th><th>Dativ</th></tr></thead><tbody><tr><td>Maskulin</td><td>dieser</td><td>diesen</td><td>diesem</td></tr><tr><td>Feminin</td><td>diese</td><td>diese</td><td>dieser</td></tr><tr><td>Neutrum</td><td>dieses</td><td>dieses</td><td>diesem</td></tr><tr><td>Plural</td><td>diese</td><td>diese</td><td>diesen+(e)n</td></tr></tbody></table></div><h2 id="8-句式"><a href="#8-句式" class="headerlink" title="8 句式"></a>8 句式</h2><h3 id="8-1-W型问题-W-Fragen"><a href="#8-1-W型问题-W-Fragen" class="headerlink" title="8.1 W型问题 W-Fragen"></a>8.1 W型问题 W-Fragen</h3><div class="table-container"><table><thead><tr><th>Was (sind Sie von Beruf?)</th><th>What (do you do professionally?)</th></tr></thead><tbody><tr><td>Warum (bist du traurig?)</td><td>Why (are you sad?)</td></tr><tr><td>Wann (heiratet ihr?)</td><td>When (are you getting married?)</td></tr><tr><td>Wer (spricht gut Deutsch?)</td><td>Who (speaks good German?)</td></tr><tr><td>Wen (liebst du?)</td><td>Whom (do you love?)</td></tr><tr><td>Wie (alt bist du?)</td><td>How (old are you?)</td></tr><tr><td>Wo (wohnst du?)</td><td>Where (do you live?)</td></tr><tr><td>Woher (kommst du?)</td><td>Where (are you) from?</td></tr><tr><td>Wohin (fahrt ihr im Urlaub?)</td><td>Where (are you going) to (on vacation)?</td></tr><tr><td>Wie viel (kostet ein Fahrrad?）</td><td>How much (does a bicycle cost?)</td></tr><tr><td>Wie viele (kinder hast du?)</td><td>How many (children do you have?)</td></tr><tr><td>Wie oft (spielst du Fußball?)</td><td>How often (do you play football?)</td></tr><tr><td>Welche (Sprachen sprichst du?)</td><td>Which (language do you speak?)</td></tr></tbody></table></div><h3 id="8-2-祈使句-Imperativ"><a href="#8-2-祈使句-Imperativ" class="headerlink" title="8.2 祈使句 Imperativ"></a>8.2 祈使句 Imperativ</h3><p><strong>请求 Bitte</strong></p><div class="table-container"><table><thead><tr><th>Haben Sie bitte Geduld!</th><th>Please have some patience!</th></tr></thead><tbody><tr><td>Seien Sie bitte leise!</td><td>Please be quiet!</td></tr></tbody></table></div><p><strong>命令 Befehl oder Aufforderung</strong></p><div class="table-container"><table><thead><tr><th>Fahr doch jetzt!</th><th>Drive now!</th></tr></thead><tbody><tr><td>Geh sofort nach Hause!</td><td>Go home immediately!</td></tr></tbody></table></div><p><strong>建议 Rat</strong></p><div class="table-container"><table><thead><tr><th>Bitte trinken Sie mehr Wasser!</th><th>Please drink more water!</th></tr></thead><tbody><tr><td>Mach (bitte) regelmäßig die Hausaufgabe!</td><td>Do the homework regularly!</td></tr></tbody></table></div><p><strong>Du，Ihr，Sie后的规则动词在祈使句中的变化</strong></p><p>du后的规则动词在祈使句中去掉词缀st</p><div class="table-container"><table><thead><tr><th>du gibst</th><th>Gib!</th></tr></thead><tbody><tr><td>du kommst</td><td>Komm!</td></tr><tr><td>du lernst</td><td>Lern!</td></tr><tr><td>du fährst (!)</td><td>Fahr!</td></tr><tr><td>du isst (!)</td><td>Iss!</td></tr><tr><td>du liest (!)</td><td>Lies!</td></tr></tbody></table></div><p>ihr后的规则动词在祈使句中保持原样</p><div class="table-container"><table><thead><tr><th>ihr gebt</th><th>Gebt!</th></tr></thead><tbody><tr><td>ihr kommt</td><td>Kommt!</td></tr><tr><td>ihr lernt</td><td>Lernt!</td></tr><tr><td>ihr fahrt</td><td>Fahrt!</td></tr></tbody></table></div><p>Sie后的规则动词在祈使句中保持原样，并跟上Sie</p><div class="table-container"><table><thead><tr><th>Sie geben</th><th>Geben Sie!</th></tr></thead><tbody><tr><td>Sie kommen</td><td>Kommen Sie!</td></tr><tr><td>Sie lernen</td><td>Lernen Sie!</td></tr><tr><td>Sie fahren</td><td>Fahren Sie!</td></tr></tbody></table></div><p><strong>特殊动词的祈使句形式：Haben, sein, werden (have, be, become)</strong></p><p>Haben</p><div class="table-container"><table><thead><tr><th>du (hast)</th><th>Hab Geduld! (have patience)</th></tr></thead><tbody><tr><td>ihr (habt)</td><td>Habt Geduld!</td></tr><tr><td>Sie (haben)</td><td>Haben Sie Geduld!</td></tr></tbody></table></div><p>Sein</p><div class="table-container"><table><thead><tr><th>du (bist)</th><th>Sei froh! (be happy!)</th></tr></thead><tbody><tr><td>ihr (seid)</td><td>seid froh!</td></tr><tr><td>Sie (sind)</td><td>Seien Sie froh!</td></tr></tbody></table></div><p>Werden</p><div class="table-container"><table><thead><tr><th>du (wirst)</th><th>werden gesund! (become healthy!)</th></tr></thead><tbody><tr><td>ihr (weidet)</td><td>werdet gesund!</td></tr><tr><td>Sie (werden)</td><td>Werden Sie gesund!</td></tr></tbody></table></div><h3 id="8-3-现在完成时"><a href="#8-3-现在完成时" class="headerlink" title="8.3 现在完成时"></a>8.3 现在完成时</h3><p>现在完成时的句子结构</p><div class="table-container"><table><thead><tr><th>陈述句中：Perfekt (现在完成时)= haben/sein (助动词放在第二位)+ Partizip (分词放在句末)</th><th>Ich habe seine Salat gegessen. I have eaten a salad.</th></tr></thead><tbody><tr><td>W-Fragen (W-问题)：同陈述句</td><td>Was hast du gestern gemacht? What did you do yesterday?</td></tr><tr><td>Ja-Nein-Frage (是否问题)：助动词放在句首，分词放在句末</td><td>Hast du gestern etwas gegessen? Did you eat something yesterday?</td></tr><tr><td>Mit trennbaren Verben (可分动词的现在完成时)：助动词放在第二位，可分动词的分词形式放在句末</td><td>Tanja hat ihren Freund angerufen. Tanja called up her boyfriend.</td></tr><tr><td>Mit Modalverben (与情态动词一起使用)：情态动词的过去式放在第二位，可分动词的分词形式放在句末</td><td>Ich war krank. Ich musste zum Arzt gehen. I was sick. I had to go to the doctor.</td></tr></tbody></table></div>]]></content>
      
      
      <categories>
          
          <category> 杂谈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Deutsch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSAPP_DIY 第一章</title>
      <link href="/2023/06/30/CSAPP-1/"/>
      <url>/2023/06/30/CSAPP-1/</url>
      
        <content type="html"><![CDATA[<h1 id="第01章：计算机系统漫游"><a href="#第01章：计算机系统漫游" class="headerlink" title="第01章：计算机系统漫游"></a>第01章：计算机系统漫游</h1><p><a href="http://csapp.cs.cmu.edu/">CS:APP3e</a> 是 Computer Systems: A Programmer’s Perspective的缩写，是卡内基梅隆大学（简称 CMU） 的ICS，也就是计算机导论课程的教材 ，已被全世界范围内的200多所大学用作教材，两位教授分别是 <a href="https://en.wikipedia.org/wiki/Randal_Bryant">Randal E. Bryant</a> 和 <a href="https://www.cs.cmu.edu/~droh/">David R. O’Hallaron</a>，该书的简体中文版名称是《深入理解计算机系統》，<a href="https://book.douban.com/subject/26912767/">豆瓣</a>的评分高达9.8分，其实直译为《从程序员的角度来理解计算机系统》也许更加贴切，因为该书虽然涉及的范围很广但是讲解的内容其实并不算特别深入。</p><p>它糅合了计算机组成与体系结构，操作系统，链接与装载，程序优化，现代存储器，网络等基础知识，大部分时候，其中的每一章（甚至是一小节）都可以再次扩展成一本书来讲授，因此对于计算机初学者或者非CS专业出身的人来说，它会告诉你，要想成为一名优秀的程序员，你必须理解哪些计算机底层原理，或者说在你今后的自学过程中，应该重点学习哪些课程。</p><p>书内利用一个Hello World程序这个程序的生命周期，展开阐述了计算机系统的主要概念和主题。</p><p>感谢学习过程中 <a href="https://fengmuzi2003.gitbook.io/csapp3e/">https://fengmuzi2003.gitbook.io/csapp3e/</a> CSAPP重点导读对于本人的知识点整理辅助。</p><p><img src="https://1484576603-files.gitbook.io/~/files/v0/b/gitbook-legacy-files/o/assets%2F-MV9vJFv4kmvRLgEog6g%2F-MVEig2rka3-_xDOdpIF%2F-MVEnth5MNG-UEpGGxBT%2F%E6%8D%95%E8%8E%B7.PNG?alt=media&amp;token=df4b53fa-e0c6-476f-aff5-462e27c20fac" alt=""></p><p>后续接着更新对于CSAPP的个人理解。</p>]]></content>
      
      
      <categories>
          
          <category> CS计算机科学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机体系结构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LinearAlgebra</title>
      <link href="/2023/06/30/LinearAlgebra/"/>
      <url>/2023/06/30/LinearAlgebra/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 线性代数 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LinearAlgebra </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Calculus</title>
      <link href="/2023/06/30/Calculus/"/>
      <url>/2023/06/30/Calculus/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 微积分 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Calculus </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>机器人及人工智能大赛 探索者全地形小车项目</title>
      <link href="/2023/06/27/%E6%9C%BA%E5%99%A8%E4%BA%BA%E5%8F%8A%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%A4%A7%E8%B5%9B/"/>
      <url>/2023/06/27/%E6%9C%BA%E5%99%A8%E4%BA%BA%E5%8F%8A%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%A4%A7%E8%B5%9B/</url>
      
        <content type="html"><![CDATA[<h1 id="机器人及人工智能大赛"><a href="#机器人及人工智能大赛" class="headerlink" title="机器人及人工智能大赛"></a>机器人及人工智能大赛</h1><p><strong>站长参加的是探索者全地形小车项目，基本设计源于前几届学长的小车。</strong></p><p>整体是一个六轮驱动的智能小车，同时需要有良好的力线使得不循迹也可以走较直的路线。车头部分的四轮为一体式结构，前轮需良好的攀爬能力——履带金属轮，前轮套上履带履片，扩大轮子直径，增强爬坡和越障能力的同时提高了移动速度。<br>有需要可以点击右边联络我捏～</p><h2 id="整体实现代码"><a href="#整体实现代码" class="headerlink" title="整体实现代码"></a>整体实现代码</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*灰度传感器说明：左：中间值为750，小黑大白</span></span><br><span class="line"><span class="comment">                 右：中间值为750，小黑大白*/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ServoPin 12        <span class="comment">//舵机引脚</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> s0 4               <span class="comment">//定义颜色传感器引脚</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> s1 11              <span class="comment">//定义颜色传感器引脚</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> s2 3               <span class="comment">//定义颜色传感器引脚</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> s3 7               <span class="comment">//定义颜色传感器引脚</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> outPin 8           <span class="comment">//定义颜色传感器输出脚</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PIN_x 2</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PIN_y A3</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> colorflag=<span class="number">0</span>;           <span class="comment">//颜色传感器返回值：红1绿2蓝3</span></span><br><span class="line"><span class="type">int</span> leftmotor1=<span class="number">5</span>;          <span class="comment">//左正转</span></span><br><span class="line"><span class="type">int</span> leftmotor2=<span class="number">6</span>;         <span class="comment">//左反转</span></span><br><span class="line"><span class="type">int</span> rightmotor1=<span class="number">9</span>;         <span class="comment">//右正转</span></span><br><span class="line"><span class="type">int</span> rightmotor2=<span class="number">10</span>;         <span class="comment">//右反转        `</span></span><br><span class="line"><span class="type">int</span> sensor1=<span class="number">14</span>;             <span class="comment">//左传感器</span></span><br><span class="line"><span class="type">int</span> sensor2=<span class="number">16</span>;             <span class="comment">//右传感器</span></span><br><span class="line"><span class="type">int</span> sensor3=<span class="number">17</span>;             <span class="comment">//加减速传感器</span></span><br><span class="line"><span class="type">int</span> leftread=<span class="number">0</span>;            <span class="comment">//左传感器读出数值</span></span><br><span class="line"><span class="type">int</span> rightread=<span class="number">0</span>;           <span class="comment">//右传感器读出数值</span></span><br><span class="line"><span class="type">int</span> middleleft=<span class="number">800</span>;        <span class="comment">//左传感器中间值</span></span><br><span class="line"><span class="type">int</span> middleright=<span class="number">800</span>;       <span class="comment">//右传感器中间值</span></span><br><span class="line"><span class="comment">//颜色传感器参数：</span></span><br><span class="line"><span class="type">int</span> pulseWidth;  </span><br><span class="line"><span class="comment">//读取参数</span></span><br><span class="line"><span class="type">double</span> r_ratio = <span class="number">3.45</span>, g_ratio = <span class="number">2.62</span>, b_ratio = <span class="number">2.98</span>;</span><br><span class="line"><span class="type">int</span> card=<span class="number">0</span>;                <span class="comment">//色卡值:红1绿2蓝3</span></span><br><span class="line"><span class="type">int</span> balloon=<span class="number">0</span>;             <span class="comment">//气球值：红1绿2蓝3</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> red=<span class="number">0</span>,green=<span class="number">0</span>,blue=<span class="number">0</span>;  <span class="comment">//执行气球打击的相应标志位</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">setup</span><span class="params">()</span> &#123;</span><br><span class="line">  pinMode(leftmotor1,OUTPUT);</span><br><span class="line">  pinMode(leftmotor2,OUTPUT);</span><br><span class="line">  pinMode(rightmotor1,OUTPUT);</span><br><span class="line">  pinMode(rightmotor2,OUTPUT);</span><br><span class="line">  pinMode(ServoPin,OUTPUT);</span><br><span class="line">  pinMode(sensor1,INPUT);</span><br><span class="line">  pinMode(sensor2,INPUT);</span><br><span class="line">  pinMode(sensor3,INPUT);</span><br><span class="line">  xy_Init();</span><br><span class="line">  Serial.begin(<span class="number">9600</span>);</span><br><span class="line"></span><br><span class="line">  digitalWrite(ServoPin, LOW);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/***************************************主循环函数****************************************************/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">loop</span><span class="params">()</span> &#123;</span><br><span class="line">  walk_to_cross();</span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">  <span class="comment">//串口实时显示左右传感器灰度值</span></span><br><span class="line">  Serial.print(leftread);</span><br><span class="line">  Serial.print(<span class="string">&quot;\t&quot;</span>);</span><br><span class="line">  Serial.print(rightread);</span><br><span class="line">  Serial.print(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">  colorflag=color_analyse();</span><br><span class="line">  </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/******************************************************************************************************/</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">walk_to_cross</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="comment">//读出灰度值</span></span><br><span class="line">  leftread=Good_read(sensor1,<span class="number">51</span>);</span><br><span class="line">  rightread=Good_read(sensor2,<span class="number">51</span>);</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">if</span>(leftread&lt;=middleleft &amp;&amp; rightread&lt;=middleright)<span class="comment">//全黑：爬坡以及爬台阶</span></span><br><span class="line">  &#123;</span><br><span class="line">    delay(<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span>(leftread&lt;=middleleft &amp;&amp; rightread&lt;=middleright)<span class="comment">//全黑：爬坡以及爬台阶</span></span><br><span class="line">    &#123;</span><br><span class="line">      STOP();</span><br><span class="line">      colorflag=color_analyse();</span><br><span class="line">      <span class="keyword">if</span>(colorflag)</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">if</span>(card==<span class="number">0</span>)<span class="comment">//仍未读取色卡颜色值</span></span><br><span class="line">        &#123;</span><br><span class="line">          deal_card();<span class="comment">//色卡处理函数</span></span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//若已经读取色卡值则进入气球颜色读取函数</span></span><br><span class="line">        <span class="keyword">if</span>(card)</span><br><span class="line">        &#123;</span><br><span class="line">          delay(<span class="number">1</span>);</span><br><span class="line">          <span class="keyword">if</span>(card)<span class="comment">//确认色卡值已读</span></span><br><span class="line">          servo();</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span> </span><br><span class="line">      &#123;</span><br><span class="line">        RUN();</span><br><span class="line">        delay(<span class="number">2000</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span>(leftread&gt;middleleft &amp;&amp; rightread&gt;middleright)<span class="comment">//全白：普通直行</span></span><br><span class="line">  &#123;</span><br><span class="line">    delay(<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span>(leftread&gt;middleleft &amp;&amp; rightread&gt;middleright)<span class="comment">//全白：普通直行</span></span><br><span class="line">    &#123;</span><br><span class="line">      forward();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span>(leftread&gt;middleleft &amp;&amp; rightread&lt;=middleright)<span class="comment">//左转</span></span><br><span class="line">  &#123;</span><br><span class="line">    delay(<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span>(leftread&gt;middleleft &amp;&amp; rightread&lt;=middleright)<span class="comment">//左转</span></span><br><span class="line">    &#123;</span><br><span class="line">      turn_left();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span>(leftread&lt;=middleleft &amp;&amp; rightread&gt;middleright)<span class="comment">//右转</span></span><br><span class="line">  &#123;</span><br><span class="line">    delay(<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span>(leftread&lt;=middleleft &amp;&amp; rightread&gt;middleright)<span class="comment">//右转</span></span><br><span class="line">    &#123;</span><br><span class="line">      turn_right();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> forward();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//色卡处理函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">deal_card</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">if</span>(colorflag)<span class="comment">//读取到色卡颜色</span></span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">if</span>(colorflag==<span class="string">&#x27;R&#x27;</span>)card=<span class="number">1</span>;</span><br><span class="line">      <span class="keyword">if</span>(colorflag==<span class="string">&#x27;G&#x27;</span>)card=<span class="number">2</span>;</span><br><span class="line">      <span class="keyword">if</span>(colorflag==<span class="string">&#x27;B&#x27;</span>)card=<span class="number">3</span>;</span><br><span class="line">      colorflag=<span class="number">0</span>;<span class="comment">//复位，以便下一次检测颜色</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//舵机控制击打气球</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">servo</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">if</span>(colorflag==<span class="string">&#x27;R&#x27;</span>)balloon=<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span>(colorflag==<span class="string">&#x27;G&#x27;</span>)balloon=<span class="number">2</span>;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span>(colorflag==<span class="string">&#x27;B&#x27;</span>)balloon=<span class="number">3</span>;</span><br><span class="line">  <span class="keyword">if</span>(balloon==card)</span><br><span class="line">  &#123;</span><br><span class="line">    STOP();</span><br><span class="line">    ServoControl(<span class="number">180</span>);</span><br><span class="line">    delay(<span class="number">1500</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/****滤波算法*************/</span></span><br><span class="line"><span class="type">double</span>  <span class="title function_">StandardDeviation</span><span class="params">(<span class="type">int</span> a[], <span class="type">int</span> cnt)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">double</span> sum = <span class="number">0</span>;</span><br><span class="line">  <span class="type">double</span> ave = average(a, cnt);</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; cnt; i++)</span><br><span class="line">    sum += (<span class="number">1.0</span> * a[i] - ave) * (a[i] - ave);</span><br><span class="line">  sum /= cnt;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">sqrt</span>(sum);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">double</span>  <span class="title function_">average</span><span class="params">(<span class="type">int</span> a[], <span class="type">int</span> cnt)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">double</span> sum = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; cnt; i++)     sum += <span class="number">1.0</span> * a[i];</span><br><span class="line">  sum /= cnt;</span><br><span class="line">  <span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">judge_point</span><span class="params">(<span class="type">int</span> a[], <span class="type">int</span> cnt)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">double</span> ave = average(a, cnt);</span><br><span class="line">  <span class="type">double</span> stand = StandardDeviation(a, cnt);</span><br><span class="line">  <span class="type">int</span> cntt = cnt;</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; cnt; i++)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> (!(a[i] &gt;= ave - <span class="number">2</span> * stand &amp;&amp; a[i] &lt;= ave + <span class="number">2</span> * stand))</span><br><span class="line">    &#123;</span><br><span class="line">      cntt--;</span><br><span class="line">      a[i] = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> average(a, cntt);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">Good_read</span><span class="params">(<span class="type">int</span> PIN, <span class="type">int</span> cnt)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">int</span> a[cnt];</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; cnt; i++) a[i] = analogRead (PIN);</span><br><span class="line">  <span class="keyword">return</span> judge_point(a, cnt);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">float</span> <span class="title function_">min1</span><span class="params">(<span class="type">float</span> a, <span class="type">float</span> b)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">return</span> a &lt;= b ? a : b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取颜色标志位</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">color</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">if</span>(color_analyse()==<span class="string">&#x27;R&#x27;</span>)colorflag=<span class="number">1</span>;<span class="comment">//红</span></span><br><span class="line">  <span class="keyword">if</span>(color_analyse()==<span class="string">&#x27;G&#x27;</span>)colorflag=<span class="number">2</span>;<span class="comment">//绿</span></span><br><span class="line">  <span class="keyword">if</span>(color_analyse()==<span class="string">&#x27;B&#x27;</span>)colorflag=<span class="number">3</span>;<span class="comment">//蓝</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//颜色识别</span></span><br><span class="line"><span class="type">char</span> <span class="title function_">color_analyse</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">int</span> cnt = <span class="number">50</span>;</span><br><span class="line">  <span class="type">int</span> rColor1[cnt] ; <span class="comment">//设置读取的red数值</span></span><br><span class="line">  <span class="type">int</span> gColor1[cnt] ; <span class="comment">//设置读取的green数值</span></span><br><span class="line">  <span class="type">int</span> bColor1[cnt] ; <span class="comment">//设置读取的blue数值</span></span><br><span class="line">  <span class="type">int</span> rColor ;  <span class="comment">//设置读取的red数值</span></span><br><span class="line">  <span class="type">int</span> gColor ; <span class="comment">//设置读取的green数值</span></span><br><span class="line">  <span class="type">int</span> bColor ; <span class="comment">//设置读取的blue数值</span></span><br><span class="line">  <span class="type">double</span> r_ratio = <span class="number">3.45</span>, g_ratio = <span class="number">2.62</span>, b_ratio = <span class="number">2.98</span>;</span><br><span class="line">  <span class="comment">/*3.45  2.62  2.98 */</span></span><br><span class="line">  <span class="type">double</span> r_sum = <span class="number">0</span>, g_sum = <span class="number">0</span>, b_sum = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; cnt; i++)</span><br><span class="line">  &#123;</span><br><span class="line">    read_color(&amp;rColor1[i], &amp;gColor1[i], &amp;bColor1[i]);</span><br><span class="line">  &#125;</span><br><span class="line">  rColor = judge_point(rColor1, cnt);</span><br><span class="line">  gColor = judge_point(gColor1, cnt);</span><br><span class="line">  bColor = judge_point(bColor1, cnt);</span><br><span class="line">  Serial.print(rColor * r_ratio);</span><br><span class="line">  Serial.print(<span class="string">&quot;  &quot;</span>);</span><br><span class="line">  Serial.print(gColor * g_ratio);</span><br><span class="line">  Serial.print(<span class="string">&quot;  &quot;</span>);</span><br><span class="line">  Serial.print(bColor * b_ratio);</span><br><span class="line">  Serial.print(<span class="string">&quot;  &quot;</span>);</span><br><span class="line">  <span class="keyword">if</span> ( rColor * r_ratio &lt; gColor * g_ratio &amp;&amp; rColor * r_ratio &lt; bColor * b_ratio)</span><br><span class="line">  &#123; Serial.println(<span class="string">&quot;R&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;R&#x27;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> (gColor * g_ratio &lt; rColor * r_ratio &amp;&amp; gColor * g_ratio &lt; bColor * b_ratio)</span><br><span class="line">  &#123; Serial.println(<span class="string">&quot;G&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;G&#x27;</span>;</span><br><span class="line"></span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (bColor * b_ratio &lt; rColor * r_ratio &amp;&amp; bColor * b_ratio &lt; gColor * g_ratio)</span><br><span class="line">  &#123; Serial.println(<span class="string">&quot;B&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;B&#x27;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//颜色读取</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">read_color</span><span class="params">(<span class="type">int</span> *rColor, <span class="type">int</span> *gColor, <span class="type">int</span>  *bColor)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">int</span> cnt = <span class="number">1</span>;</span><br><span class="line">  <span class="type">int</span> tmp_r = <span class="number">0</span>, tmp_g = <span class="number">0</span>, tmp_b = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; cnt; i++)</span><br><span class="line">  &#123;</span><br><span class="line">    digitalWrite(<span class="number">13</span>, <span class="number">1</span>);</span><br><span class="line">    delay(<span class="number">3</span>);</span><br><span class="line">    <span class="comment">//红色读取</span></span><br><span class="line">    digitalWrite(s2, LOW);</span><br><span class="line">    digitalWrite(s3, LOW);</span><br><span class="line">    pulseWidth = pulseIn(outPin, LOW);</span><br><span class="line">    tmp_r += pulseWidth;</span><br><span class="line">    delay(<span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//绿色读取</span></span><br><span class="line">    digitalWrite(s2, HIGH);</span><br><span class="line">    digitalWrite(s3, HIGH);</span><br><span class="line">    pulseWidth = pulseIn(outPin, LOW);</span><br><span class="line">    tmp_g += pulseWidth;</span><br><span class="line">    delay(<span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//蓝色读取</span></span><br><span class="line">    digitalWrite(s2, LOW);</span><br><span class="line">    digitalWrite(s3, HIGH);</span><br><span class="line">    pulseWidth = pulseIn(outPin, LOW);</span><br><span class="line">    <span class="comment">// Serial.println(pulseWidth);</span></span><br><span class="line">    tmp_b += pulseWidth;</span><br><span class="line">    digitalWrite(<span class="number">13</span>, <span class="number">0</span>);</span><br><span class="line">    delay(<span class="number">3</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  *rColor = tmp_r / cnt;</span><br><span class="line">  *gColor = tmp_g / cnt;</span><br><span class="line">  *bColor = tmp_b / cnt;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//普通直行函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">forward</span><span class="params">(<span class="type">void</span>)</span>&#123;</span><br><span class="line">  analogWrite(leftmotor1,<span class="number">210</span>);</span><br><span class="line">  analogWrite(leftmotor2,<span class="number">0</span>);</span><br><span class="line">  analogWrite(rightmotor1,<span class="number">210</span>);</span><br><span class="line">  analogWrite(rightmotor2,<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//右转函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">turn_right</span><span class="params">(<span class="type">void</span>)</span>&#123;</span><br><span class="line">  analogWrite(leftmotor1,<span class="number">0</span>);</span><br><span class="line">  analogWrite(leftmotor2,<span class="number">200</span>);</span><br><span class="line">  analogWrite(rightmotor1,<span class="number">255</span>);</span><br><span class="line">  analogWrite(rightmotor2,<span class="number">0</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line"><span class="comment">//左转函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">turn_left</span><span class="params">(<span class="type">void</span>)</span>&#123;</span><br><span class="line">  analogWrite(leftmotor1,<span class="number">255</span>);</span><br><span class="line">  analogWrite(leftmotor2,<span class="number">0</span>);</span><br><span class="line">  analogWrite(rightmotor1,<span class="number">0</span>);</span><br><span class="line">  analogWrite(rightmotor2,<span class="number">200</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//冲刺函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">RUN</span><span class="params">(<span class="type">void</span>)</span>&#123;</span><br><span class="line">  analogWrite(leftmotor1,<span class="number">255</span>);</span><br><span class="line">  analogWrite(leftmotor2,<span class="number">0</span>);</span><br><span class="line">  analogWrite(rightmotor1,<span class="number">255</span>);</span><br><span class="line">  analogWrite(rightmotor2,<span class="number">0</span>);</span><br><span class="line">  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//停车函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">STOP</span><span class="params">(<span class="type">void</span>)</span>&#123;</span><br><span class="line">  analogWrite(leftmotor1,<span class="number">0</span>);</span><br><span class="line">  analogWrite(leftmotor2,<span class="number">0</span>);</span><br><span class="line">  analogWrite(rightmotor1,<span class="number">0</span>);</span><br><span class="line">  analogWrite(rightmotor2,<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//加速度读取</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">xy_Read</span><span class="params">()</span>   <span class="comment">//长时间大于200说明上不去楼梯</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">int</span> cnt = <span class="number">50</span>;</span><br><span class="line">  <span class="type">int</span> a[cnt];</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; cnt; i++) a[i] = Good_read(PIN_y, cnt);</span><br><span class="line">  <span class="keyword">return</span> StandardDeviation(a, cnt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//加速度传感器初始化</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">xy_Init</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  pinMode(PIN_x, INPUT);</span><br><span class="line">  pinMode(PIN_y, INPUT);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//舵机控制函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">ServoControl</span><span class="params">(<span class="type">int</span> servoAngle)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">double</span> thisAngle = <span class="built_in">map</span>(servoAngle, <span class="number">0</span>, <span class="number">270</span>, <span class="number">500</span>, <span class="number">2500</span>);<span class="comment">//等比例角度值范围转换高电平持续时间范围</span></span><br><span class="line">  <span class="type">unsigned</span> <span class="type">char</span> i = <span class="number">50</span>;<span class="comment">//50Hz 每秒的周期次数(周期/秒) 即1S 50 个周期 每个周期20ms</span></span><br><span class="line">  <span class="keyword">while</span> (i--)</span><br><span class="line">  &#123;</span><br><span class="line">    digitalWrite(ServoPin, HIGH); </span><br><span class="line">    delayMicroseconds(thisAngle); <span class="comment">//高电平时间</span></span><br><span class="line">    digitalWrite(ServoPin, LOW); </span><br><span class="line">    delayMicroseconds(<span class="number">20000</span> - thisAngle);<span class="comment">//每个周期20ms减去高电平持续时间</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">long</span> <span class="title function_">map</span><span class="params">(<span class="type">long</span> x,<span class="type">long</span> in_min,<span class="type">long</span> in_max,<span class="type">long</span> out_min,<span class="type">long</span> out_max)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">return</span> (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="滤波算法"><a href="#滤波算法" class="headerlink" title="滤波算法"></a>滤波算法</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/****滤波算法*************/</span></span><br><span class="line"><span class="type">double</span>  <span class="title function_">StandardDeviation</span><span class="params">(<span class="type">int</span> a[], <span class="type">int</span> cnt)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">double</span> sum = <span class="number">0</span>;</span><br><span class="line">  <span class="type">double</span> ave = average(a, cnt);</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; cnt; i++)</span><br><span class="line">    sum += (<span class="number">1.0</span> * a[i] - ave) * (a[i] - ave);</span><br><span class="line">  sum /= cnt;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">sqrt</span>(sum);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">double</span>  <span class="title function_">average</span><span class="params">(<span class="type">int</span> a[], <span class="type">int</span> cnt)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">double</span> sum = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; cnt; i++)     sum += <span class="number">1.0</span> * a[i];</span><br><span class="line">  sum /= cnt;</span><br><span class="line">  <span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">judge_point</span><span class="params">(<span class="type">int</span> a[], <span class="type">int</span> cnt)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">double</span> ave = average(a, cnt);</span><br><span class="line">  <span class="type">double</span> stand = StandardDeviation(a, cnt);</span><br><span class="line">  <span class="type">int</span> cntt = cnt;</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; cnt; i++)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> (!(a[i] &gt;= ave - <span class="number">2</span> * stand &amp;&amp; a[i] &lt;= ave + <span class="number">2</span> * stand))</span><br><span class="line">    &#123;</span><br><span class="line">      cntt--;</span><br><span class="line">      a[i] = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> average(a, cntt);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">Good_read</span><span class="params">(<span class="type">int</span> PIN, <span class="type">int</span> cnt)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">int</span> a[cnt];</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; cnt; i++) a[i] = analogRead (PIN);</span><br><span class="line">  <span class="keyword">return</span> judge_point(a, cnt);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">float</span> <span class="title function_">min1</span><span class="params">(<span class="type">float</span> a, <span class="type">float</span> b)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">return</span> a &lt;= b ? a : b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="对应讲解"><a href="#对应讲解" class="headerlink" title="对应讲解"></a>对应讲解</h4><p>滤波算法的核心函数是 StandardDeviation 和 average。<br>average 函数用于计算给定数组 a 中元素的平均值。它首先对数组中的所有元素求和，然后将总和除以数组的长度，得到平均值。<br>StandardDeviation 函数用于计算给定数组 a 中元素的标准差。它首先调用 average 函数计算数组的平均值 ave。然后通过遍历数组，计算每个元素与平均值的差的平方，并累加到 sum 变量中。最后，将 sum 除以数组的长度，得到方差。然后使用 sqrt 函数对方差进行平方根运算，得到标准差，即传感器读数的波动程度。<br>judge_point 函数使用了滤波算法对传感器读数进行处理，并剔除超出平均值加减两倍标准差范围之外的数据。它首先调用 average 和 StandardDeviation 函数计算数组的平均值和标准差。然后遍历数组，判断每个元素是否在平均值加减两倍标准差范围之内。如果不在范围内，将该元素置为0，并将有效元素的数量减1。最后，计算剔除异常数据后的数组的平均值，并返回该平均值。<br>在 Good_read 函数中，首先创建了一个数组 a，用于存储传感器的读数。然后使用循环读取传感器的值，并将其存储到数组中。最后调用 judge_point 函数对读数进行滤波处理，并返回滤波后的平均值。<br>这样，在主程序的 run 函数中，就可以使用滤波后的传感器读数来判断小车的行驶方向，提高对地形变化的适应能力。<br>通过应用滤波算法，可以有效地减少传感器读数中的噪声和波动，提高系统的稳定性和可靠性，使小车能够更准确地感知和应对各种地形条件。</p>]]></content>
      
      
      <categories>
          
          <category> C / C++ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 嵌入式开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>艾尔登法环武器数据分析+预测</title>
      <link href="/2023/06/14/EldenRing/"/>
      <url>/2023/06/14/EldenRing/</url>
      
        <content type="html"><![CDATA[<h1 id="EldenRing-DataAnalsis"><a href="#EldenRing-DataAnalsis" class="headerlink" title="EldenRing DataAnalsis "></a><font color =#d5e5f5>EldenRing DataAnalsis </font></h1><h2 id="By-CloudH2O-Lv"><a href="#By-CloudH2O-Lv" class="headerlink" title="By CloudH2O  Lv"></a><font color =#dqb0c0>By CloudH2O  Lv</font></h2><h2 id="研究目标和主要内容"><a href="#研究目标和主要内容" class="headerlink" title="研究目标和主要内容:"></a>研究目标和主要内容:</h2><p>项目的主要内容包括以下几个方面：</p><p>数据收集与清洗：收集《Elden Ring》游戏中的角色属性和装备数据，并对数据进行清洗和预处理，确保数据的质量和可用性。</p><p>属性评级分析：对各属性（如力气、灵巧、智力等）的评级频数和占比进行分析，了解不同评级的分布情况，发现评级偏好和趋势。</p><p>属性关联分析：探索属性之间的相关性，使用统计方法和可视化工具分析属性之间的关系，如力气与灵巧的关联性、智力与信仰的关联性等。</p><p>属性对角色类型的影响：通过建立模型（如决策树、随机森林等），分析属性对角色类型的影响程度，揭示不同属性在角色分类中的重要性和权重。</p><p>装备属性分析：分析装备属性的分布情况和对角色战斗能力的影响，通过统计和可视化方法，了解装备属性的重要性和选择策略。</p><p>模型评估与性能指标分析：对建立的模型进行评估，计算准确率等性能指标，评估模型的预测能力和泛化能力，为玩家提供准确的决策支持。</p><p>数据源: </p><p><a href="https://eldenring.wiki.fextralife.com/Weapons+Comparison+Tables">https://eldenring.wiki.fextralife.com/Weapons+Comparison+Tables</a></p><h2 id="文件读取"><a href="#文件读取" class="headerlink" title="文件读取"></a>文件读取</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取csv文件</span></span><br><span class="line">data = pd.read_csv(<span class="string">&#x27;ElderRingData.csv&#x27;</span>)</span><br><span class="line">data</span><br></pre></td></tr></table></figure><h2 id="查询数据类别"><a href="#查询数据类别" class="headerlink" title="查询数据类别"></a>查询数据类别</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(data.info())</span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;class &#x27;pandas.core.frame.DataFrame&#x27;&gt;</span><br><span class="line">RangeIndex: 307 entries, 0 to 306</span><br><span class="line">Data columns (total 23 columns):</span><br><span class="line"> #   Column   Non-Null Count  Dtype </span><br><span class="line">---  ------   --------------  ----- </span><br><span class="line"> 0   Name     307 non-null    object</span><br><span class="line"> 1   Type     307 non-null    object</span><br><span class="line"> 2   Phy      307 non-null    object</span><br><span class="line"> 3   Mag      37 non-null     object</span><br><span class="line"> 4   Fir      21 non-null     object</span><br><span class="line"> 5   Lit      4 non-null      object</span><br><span class="line"> 6   Hol      33 non-null     object</span><br><span class="line"> 7   Cri      307 non-null    int64 </span><br><span class="line"> 8   Sta      307 non-null    int64 </span><br><span class="line"> 9   Str      307 non-null    int64 </span><br><span class="line"> 10  Dex      307 non-null    int64 </span><br><span class="line"> 11  Int      307 non-null    int64 </span><br><span class="line"> 12  Fai      307 non-null    int64 </span><br><span class="line"> 13  Arc      307 non-null    int64 </span><br><span class="line"> 14  PhyD     282 non-null    object</span><br><span class="line"> 15  MagD     282 non-null    object</span><br><span class="line"> 16  FirD     282 non-null    object</span><br><span class="line"> 17  LitD     282 non-null    object</span><br><span class="line"> 18  HolD     282 non-null    object</span><br><span class="line"> 19  Bst      282 non-null    object</span><br><span class="line">...</span><br><span class="line"> 22  Upgrade  307 non-null    object</span><br><span class="line">dtypes: int64(7), object(16)</span><br><span class="line">memory usage: 55.3+ KB</span><br><span class="line">None</span><br><span class="line">Output is truncated. View as a scrollable element or open in a text editor. Adjust cell output settings...</span><br></pre></td></tr></table></figure><h2 id="计算均值、中位数、标准差"><a href="#计算均值、中位数、标准差" class="headerlink" title="计算均值、中位数、标准差"></a>计算均值、中位数、标准差</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取csv文件</span></span><br><span class="line">data = pd.read_csv(<span class="string">&#x27;ElderRingData.csv&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将评级列转换为数值，按照S到E的顺序进行编号</span></span><br><span class="line">rating_dict = &#123;<span class="string">&#x27;S&#x27;</span>: <span class="number">6</span>, <span class="string">&#x27;A&#x27;</span>: <span class="number">5</span>, <span class="string">&#x27;B&#x27;</span>: <span class="number">4</span>, <span class="string">&#x27;C&#x27;</span>: <span class="number">3</span>, <span class="string">&#x27;D&#x27;</span>: <span class="number">2</span>, <span class="string">&#x27;E&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;-&#x27;</span>: <span class="number">0</span>&#125;</span><br><span class="line">data[<span class="string">&#x27;Str&#x27;</span>] = data[<span class="string">&#x27;Str&#x27;</span>].apply(<span class="keyword">lambda</span> x: rating_dict[x])</span><br><span class="line">data[<span class="string">&#x27;Dex&#x27;</span>] = data[<span class="string">&#x27;Dex&#x27;</span>].apply(<span class="keyword">lambda</span> x: rating_dict[x])</span><br><span class="line">data[<span class="string">&#x27;Int&#x27;</span>] = data[<span class="string">&#x27;Int&#x27;</span>].apply(<span class="keyword">lambda</span> x: rating_dict[x])</span><br><span class="line">data[<span class="string">&#x27;Fai&#x27;</span>] = data[<span class="string">&#x27;Fai&#x27;</span>].apply(<span class="keyword">lambda</span> x: rating_dict[x])</span><br><span class="line">data[<span class="string">&#x27;Arc&#x27;</span>] = data[<span class="string">&#x27;Arc&#x27;</span>].apply(<span class="keyword">lambda</span> x: rating_dict[x])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将MagFirLitHol PhyDMagDFirDLitDHolDBstRst的值为-时都用NaN替换</span></span><br><span class="line">data[<span class="string">&#x27;Mag&#x27;</span>] = data[<span class="string">&#x27;Mag&#x27;</span>].replace(<span class="string">&#x27;-&#x27;</span>, np.nan)</span><br><span class="line">data[<span class="string">&#x27;Fir&#x27;</span>] = data[<span class="string">&#x27;Fir&#x27;</span>].replace(<span class="string">&#x27;-&#x27;</span>, np.nan)</span><br><span class="line">data[<span class="string">&#x27;Lit&#x27;</span>] = data[<span class="string">&#x27;Lit&#x27;</span>].replace(<span class="string">&#x27;-&#x27;</span>, np.nan)</span><br><span class="line">data[<span class="string">&#x27;Hol&#x27;</span>] = data[<span class="string">&#x27;Hol&#x27;</span>].replace(<span class="string">&#x27;-&#x27;</span>, np.nan)</span><br><span class="line">data[<span class="string">&#x27;PhyD&#x27;</span>] = data[<span class="string">&#x27;PhyD&#x27;</span>].replace(<span class="string">&#x27;-&#x27;</span>, np.nan)</span><br><span class="line">data[<span class="string">&#x27;MagD&#x27;</span>] = data[<span class="string">&#x27;MagD&#x27;</span>].replace(<span class="string">&#x27;-&#x27;</span>, np.nan)</span><br><span class="line">data[<span class="string">&#x27;FirD&#x27;</span>] = data[<span class="string">&#x27;FirD&#x27;</span>].replace(<span class="string">&#x27;-&#x27;</span>, np.nan)</span><br><span class="line">data[<span class="string">&#x27;LitD&#x27;</span>] = data[<span class="string">&#x27;LitD&#x27;</span>].replace(<span class="string">&#x27;-&#x27;</span>, np.nan)</span><br><span class="line">data[<span class="string">&#x27;HolD&#x27;</span>] = data[<span class="string">&#x27;HolD&#x27;</span>].replace(<span class="string">&#x27;-&#x27;</span>, np.nan)</span><br><span class="line">data[<span class="string">&#x27;Bst&#x27;</span>] = data[<span class="string">&#x27;Bst&#x27;</span>].replace(<span class="string">&#x27;-&#x27;</span>, np.nan)</span><br><span class="line">data[<span class="string">&#x27;Rst&#x27;</span>] = data[<span class="string">&#x27;Rst&#x27;</span>].replace(<span class="string">&#x27;-&#x27;</span>, np.nan)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 计算每个属性的均值、中位数和标准差</span></span><br><span class="line">mean = data.mean()</span><br><span class="line">median = data.median()</span><br><span class="line">std = data.std()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出结果</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;均值：&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(mean)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;中位数：&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(median)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;标准差：&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(std)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>输出:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">均值：</span><br><span class="line">Cri    101.169381</span><br><span class="line">Sta    105.335505</span><br><span class="line">Str      2.491857</span><br><span class="line">Dex      2.237785</span><br><span class="line">Int      0.615635</span><br><span class="line">Fai      0.657980</span><br><span class="line">Arc      0.179153</span><br><span class="line">dtype: float64</span><br><span class="line">中位数：</span><br><span class="line">Mag     166.0</span><br><span class="line">Fir     176.0</span><br><span class="line">Lit     149.0</span><br><span class="line">Hol     191.0</span><br><span class="line">Cri     100.0</span><br><span class="line">Sta     100.0</span><br><span class="line">Str       2.0</span><br><span class="line">Dex       2.0</span><br><span class="line">Int       0.0</span><br><span class="line">Fai       0.0</span><br><span class="line">Arc       0.0</span><br><span class="line">PhyD     47.0</span><br><span class="line">MagD     33.0</span><br><span class="line">FirD     31.0</span><br><span class="line">LitD     31.0</span><br><span class="line">...</span><br><span class="line">Int     1.530352</span><br><span class="line">Fai     1.458677</span><br><span class="line">Arc     0.865358</span><br><span class="line">dtype: float64</span><br></pre></td></tr></table></figure><h2 id="统计每种武器类型的数量和平均物理伤害"><a href="#统计每种武器类型的数量和平均物理伤害" class="headerlink" title="统计每种武器类型的数量和平均物理伤害"></a><font color =#99ff00>统计每种武器类型的数量和平均物理伤害</font></h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取csv文件</span></span><br><span class="line">data = pd.read_csv(<span class="string">&#x27;ElderRingData.csv&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将评级列转换为数值，按照S到E的顺序进行编号</span></span><br><span class="line">rating_dict = &#123;<span class="string">&#x27;S&#x27;</span>: <span class="number">6</span>, <span class="string">&#x27;A&#x27;</span>: <span class="number">5</span>, <span class="string">&#x27;B&#x27;</span>: <span class="number">4</span>, <span class="string">&#x27;C&#x27;</span>: <span class="number">3</span>, <span class="string">&#x27;D&#x27;</span>: <span class="number">2</span>, <span class="string">&#x27;E&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;-&#x27;</span>: <span class="number">0</span>&#125;</span><br><span class="line">data[<span class="string">&#x27;Str&#x27;</span>] = data[<span class="string">&#x27;Str&#x27;</span>].apply(<span class="keyword">lambda</span> x: rating_dict[x])</span><br><span class="line">data[<span class="string">&#x27;Dex&#x27;</span>] = data[<span class="string">&#x27;Dex&#x27;</span>].apply(<span class="keyword">lambda</span> x: rating_dict[x])</span><br><span class="line">data[<span class="string">&#x27;Int&#x27;</span>] = data[<span class="string">&#x27;Int&#x27;</span>].apply(<span class="keyword">lambda</span> x: rating_dict[x])</span><br><span class="line">data[<span class="string">&#x27;Fai&#x27;</span>] = data[<span class="string">&#x27;Fai&#x27;</span>].apply(<span class="keyword">lambda</span> x: rating_dict[x])</span><br><span class="line">data[<span class="string">&#x27;Arc&#x27;</span>] = data[<span class="string">&#x27;Arc&#x27;</span>].apply(<span class="keyword">lambda</span> x: rating_dict[x])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将Mag Fir Lit Hol PhyD MagD FirD LitD HolD Bst Rst的值为-时都用NaN替换</span></span><br><span class="line">cols_to_replace = [<span class="string">&#x27;Mag&#x27;</span>, <span class="string">&#x27;Fir&#x27;</span>, <span class="string">&#x27;Lit&#x27;</span>, <span class="string">&#x27;Hol&#x27;</span>, <span class="string">&#x27;PhyD&#x27;</span>, <span class="string">&#x27;MagD&#x27;</span>, <span class="string">&#x27;FirD&#x27;</span>, <span class="string">&#x27;LitD&#x27;</span>, <span class="string">&#x27;HolD&#x27;</span>, <span class="string">&#x27;Bst&#x27;</span>, <span class="string">&#x27;Rst&#x27;</span>]</span><br><span class="line">data[cols_to_replace] = data[cols_to_replace].replace(<span class="string">&#x27;-&#x27;</span>, np.nan)</span><br><span class="line"></span><br><span class="line"><span class="comment">#object列数值类型换成float</span></span><br><span class="line">data[<span class="string">&#x27;PhyD&#x27;</span>] = data[<span class="string">&#x27;PhyD&#x27;</span>].astype(<span class="built_in">float</span>)</span><br><span class="line">data[<span class="string">&#x27;MagD&#x27;</span>] = data[<span class="string">&#x27;MagD&#x27;</span>].astype(<span class="built_in">float</span>)</span><br><span class="line">data[<span class="string">&#x27;FirD&#x27;</span>] = data[<span class="string">&#x27;FirD&#x27;</span>].astype(<span class="built_in">float</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 统计每种武器类型的数量和平均物理伤害</span></span><br><span class="line">weapon_count = data.groupby([<span class="string">&#x27;Type&#x27;</span>])[<span class="string">&#x27;Name&#x27;</span>].count()</span><br><span class="line">weapon_phy_mean = data.groupby([<span class="string">&#x27;Type&#x27;</span>])[<span class="string">&#x27;PhyD&#x27;</span>].mean()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出结果</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;每种武器类型的数量：&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(weapon_count)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;每种武器类型的平均物理伤害：&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(weapon_phy_mean)</span><br></pre></td></tr></table></figure><p>输出结果:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br></pre></td><td class="code"><pre><span class="line">&lt;class &#x27;pandas.core.frame.DataFrame&#x27;&gt;</span><br><span class="line">RangeIndex: 307 entries, 0 to 306</span><br><span class="line">Data columns (total 23 columns):</span><br><span class="line"> #   Column   Non-Null Count  Dtype </span><br><span class="line">---  ------   --------------  ----- </span><br><span class="line"> 0   Name     307 non-null    object</span><br><span class="line"> 1   Type     307 non-null    object</span><br><span class="line"> 2   Phy      307 non-null    object</span><br><span class="line"> 3   Mag      37 non-null     object</span><br><span class="line"> 4   Fir      21 non-null     object</span><br><span class="line"> 5   Lit      4 non-null      object</span><br><span class="line"> 6   Hol      33 non-null     object</span><br><span class="line"> 7   Cri      307 non-null    int64 </span><br><span class="line"> 8   Sta      307 non-null    int64 </span><br><span class="line"> 9   Str      307 non-null    int64 </span><br><span class="line"> 10  Dex      307 non-null    int64 </span><br><span class="line"> 11  Int      307 non-null    int64 </span><br><span class="line"> 12  Fai      307 non-null    int64 </span><br><span class="line"> 13  Arc      307 non-null    int64 </span><br><span class="line"> 14  PhyD     282 non-null    object</span><br><span class="line"> 15  MagD     282 non-null    object</span><br><span class="line"> 16  FirD     282 non-null    object</span><br><span class="line"> 17  LitD     282 non-null    object</span><br><span class="line"> 18  HolD     282 non-null    object</span><br><span class="line"> 19  Bst      282 non-null    object</span><br><span class="line">...</span><br><span class="line"> 22  Upgrade  307 non-null    object</span><br><span class="line">dtypes: int64(7), object(16)</span><br><span class="line">memory usage: 55.3+ KB</span><br><span class="line">None</span><br><span class="line">Output is truncated. View as a scrollable element or open in a text editor. Adjust cell output settings...</span><br><span class="line">均值：</span><br><span class="line">Cri    101.169381</span><br><span class="line">Sta    105.335505</span><br><span class="line">Str      2.491857</span><br><span class="line">Dex      2.237785</span><br><span class="line">Int      0.615635</span><br><span class="line">Fai      0.657980</span><br><span class="line">Arc      0.179153</span><br><span class="line">dtype: float64</span><br><span class="line">中位数：</span><br><span class="line">Mag     166.0</span><br><span class="line">Fir     176.0</span><br><span class="line">Lit     149.0</span><br><span class="line">Hol     191.0</span><br><span class="line">Cri     100.0</span><br><span class="line">Sta     100.0</span><br><span class="line">Str       2.0</span><br><span class="line">Dex       2.0</span><br><span class="line">Int       0.0</span><br><span class="line">Fai       0.0</span><br><span class="line">Arc       0.0</span><br><span class="line">PhyD     47.0</span><br><span class="line">MagD     33.0</span><br><span class="line">FirD     31.0</span><br><span class="line">LitD     31.0</span><br><span class="line">...</span><br><span class="line">Int     1.530352</span><br><span class="line">Fai     1.458677</span><br><span class="line">Arc     0.865358</span><br><span class="line">dtype: float64</span><br><span class="line">Output is truncated. View as a scrollable element or open in a text editor. Adjust cell output settings...</span><br><span class="line">Mag     166.0</span><br><span class="line">Fir     176.0</span><br><span class="line">Lit     149.0</span><br><span class="line">Hol     191.0</span><br><span class="line">Cri     100.0</span><br><span class="line">Sta     100.0</span><br><span class="line">Str       2.0</span><br><span class="line">Dex       2.0</span><br><span class="line">Int       0.0</span><br><span class="line">Fai       0.0</span><br><span class="line">Arc       0.0</span><br><span class="line">PhyD     47.0</span><br><span class="line">MagD     33.0</span><br><span class="line">FirD     31.0</span><br><span class="line">LitD     31.0</span><br><span class="line">HolD     31.0</span><br><span class="line">Bst      36.3</span><br><span class="line">Rst      15.0</span><br><span class="line">dtype: float64</span><br><span class="line">Cri      4.421129</span><br><span class="line">Sta     41.609782</span><br><span class="line">Str      1.106619</span><br><span class="line">Dex      1.251981</span><br><span class="line">Int      1.530352</span><br><span class="line">Fai      1.458677</span><br><span class="line">Arc      0.865358</span><br><span class="line">PhyD    16.214128</span><br><span class="line">MagD    10.262827</span><br><span class="line">FirD     9.266148</span><br><span class="line">dtype: float64</span><br><span class="line">每种武器类型的数量：</span><br><span class="line">Type</span><br><span class="line">Axe                      12</span><br><span class="line">Ballista                  2</span><br><span class="line">Bow                       7</span><br><span class="line">Claw                      4</span><br><span class="line">Colossal Sword           11</span><br><span class="line">Colossal Weapon          15</span><br><span class="line">Crossbow                  7</span><br><span class="line">Curved Greatsword         9</span><br><span class="line">Curved Sword             14</span><br><span class="line">Dagger                   16</span><br><span class="line">Fist                      9</span><br><span class="line">Flail                     5</span><br><span class="line">Glintstone Staff         17</span><br><span class="line">Great Spear               6</span><br><span class="line">Greataxe                 12</span><br><span class="line">Greatbow                  4</span><br><span class="line">Greatsword               20</span><br><span class="line">Halberd                  16</span><br><span class="line">Hammer                   15</span><br><span class="line">Heavy Thrusting Sword     4</span><br><span class="line">Katana                    8</span><br><span class="line">Light Bow                 5</span><br><span class="line">Reaper                    4</span><br><span class="line">...</span><br><span class="line">Twinblade                42.000000</span><br><span class="line">Warhammer                66.142857</span><br><span class="line">Whip                     25.166667</span><br><span class="line">Name: PhyD, dtype: float64</span><br><span class="line">Output is truncated. View as a scrollable element or open in a text editor. Adjust cell output settings...</span><br></pre></td></tr></table></figure><h3 id="查看排列"><a href="#查看排列" class="headerlink" title="查看排列"></a>查看排列</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取csv文件</span></span><br><span class="line">data = pd.read_csv(<span class="string">&#x27;ElderRingData.csv&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将评级列转换为数值，按照S到E的顺序进行编号</span></span><br><span class="line">rating_dict = &#123;<span class="string">&#x27;S&#x27;</span>: <span class="number">6</span>, <span class="string">&#x27;A&#x27;</span>: <span class="number">5</span>, <span class="string">&#x27;B&#x27;</span>: <span class="number">4</span>, <span class="string">&#x27;C&#x27;</span>: <span class="number">3</span>, <span class="string">&#x27;D&#x27;</span>: <span class="number">2</span>, <span class="string">&#x27;E&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;-&#x27;</span>: <span class="number">0</span>&#125;</span><br><span class="line">data[<span class="string">&#x27;Str&#x27;</span>] = data[<span class="string">&#x27;Str&#x27;</span>].apply(<span class="keyword">lambda</span> x: rating_dict[x])</span><br><span class="line">data[<span class="string">&#x27;Dex&#x27;</span>] = data[<span class="string">&#x27;Dex&#x27;</span>].apply(<span class="keyword">lambda</span> x: rating_dict[x])</span><br><span class="line">data[<span class="string">&#x27;Int&#x27;</span>] = data[<span class="string">&#x27;Int&#x27;</span>].apply(<span class="keyword">lambda</span> x: rating_dict[x])</span><br><span class="line">data[<span class="string">&#x27;Fai&#x27;</span>] = data[<span class="string">&#x27;Fai&#x27;</span>].apply(<span class="keyword">lambda</span> x: rating_dict[x])</span><br><span class="line">data[<span class="string">&#x27;Arc&#x27;</span>] = data[<span class="string">&#x27;Arc&#x27;</span>].apply(<span class="keyword">lambda</span> x: rating_dict[x])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将Mag Fir Lit Hol PhyD MagD FirD LitD HolD Bst Rst的值为-时都用NaN替换</span></span><br><span class="line">cols_to_replace = [<span class="string">&#x27;Mag&#x27;</span>, <span class="string">&#x27;Fir&#x27;</span>, <span class="string">&#x27;Lit&#x27;</span>, <span class="string">&#x27;Hol&#x27;</span>, <span class="string">&#x27;PhyD&#x27;</span>, <span class="string">&#x27;MagD&#x27;</span>, <span class="string">&#x27;FirD&#x27;</span>, <span class="string">&#x27;LitD&#x27;</span>, <span class="string">&#x27;HolD&#x27;</span>, <span class="string">&#x27;Bst&#x27;</span>, <span class="string">&#x27;Rst&#x27;</span>]</span><br><span class="line">data[cols_to_replace] = data[cols_to_replace].replace(<span class="string">&#x27;-&#x27;</span>, np.nan)</span><br><span class="line"></span><br><span class="line"><span class="comment">#object列数值类型换成float</span></span><br><span class="line">data[<span class="string">&#x27;PhyD&#x27;</span>] = data[<span class="string">&#x27;PhyD&#x27;</span>].astype(<span class="built_in">float</span>)</span><br><span class="line">data[<span class="string">&#x27;MagD&#x27;</span>] = data[<span class="string">&#x27;MagD&#x27;</span>].astype(<span class="built_in">float</span>)</span><br><span class="line">data[<span class="string">&#x27;FirD&#x27;</span>] = data[<span class="string">&#x27;FirD&#x27;</span>].astype(<span class="built_in">float</span>)</span><br><span class="line"></span><br><span class="line">data</span><br></pre></td></tr></table></figure><p>输出结果如下:</p><div class="table-container"><table><thead><tr><th style="text-align:right">Name</th><th style="text-align:right">Type</th><th style="text-align:right">Phy</th><th style="text-align:right">Mag</th><th style="text-align:right">Fir</th><th style="text-align:right">Lit</th><th style="text-align:right">Hol</th><th style="text-align:right">Cri</th><th style="text-align:right">Sta</th><th style="text-align:right">Str</th><th style="text-align:right">…</th><th style="text-align:right">Arc</th><th style="text-align:right">PhyD</th><th style="text-align:right">MagD</th><th style="text-align:right">FirD</th><th style="text-align:right">LitD</th><th style="text-align:right">HolD</th><th style="text-align:right">Bst</th><th style="text-align:right">Rst</th><th style="text-align:right">Wgt</th><th style="text-align:right">Upgrade</th><th></th></tr></thead><tbody><tr><td style="text-align:right">0</td><td style="text-align:right">Academy Glintstone Staff</td><td style="text-align:right">Glintstone Staff</td><td style="text-align:right">43</td><td style="text-align:right">NaN</td><td style="text-align:right">NaN</td><td style="text-align:right">NaN</td><td style="text-align:right">NaN</td><td style="text-align:right">100</td><td style="text-align:right">40</td><td style="text-align:right">2</td><td style="text-align:right">…</td><td style="text-align:right">0</td><td style="text-align:right">25.0</td><td style="text-align:right">15.0</td><td style="text-align:right">15.0</td><td style="text-align:right">15</td><td style="text-align:right">15</td><td style="text-align:right">15</td><td style="text-align:right">10</td><td style="text-align:right">3</td><td>Smithing Stones</td></tr><tr><td style="text-align:right">1</td><td style="text-align:right">Alabaster Lord’s Sword</td><td style="text-align:right">Greatsword</td><td style="text-align:right">313</td><td style="text-align:right">93</td><td style="text-align:right">NaN</td><td style="text-align:right">NaN</td><td style="text-align:right">NaN</td><td style="text-align:right">100</td><td style="text-align:right">126</td><td style="text-align:right">4</td><td style="text-align:right">…</td><td style="text-align:right">0</td><td style="text-align:right">56.0</td><td style="text-align:right">33.0</td><td style="text-align:right">27.0</td><td style="text-align:right">27</td><td style="text-align:right">27</td><td style="text-align:right">42.9</td><td style="text-align:right">19</td><td style="text-align:right">8</td><td>Somber Smithing Stones</td></tr><tr><td style="text-align:right">2</td><td style="text-align:right">Albinauric Bow</td><td style="text-align:right">Bow</td><td style="text-align:right">200</td><td style="text-align:right">NaN</td><td style="text-align:right">NaN</td><td style="text-align:right">NaN</td><td style="text-align:right">NaN</td><td style="text-align:right">100</td><td style="text-align:right">60</td><td style="text-align:right">1</td><td style="text-align:right">…</td><td style="text-align:right">0</td><td style="text-align:right">NaN</td><td style="text-align:right">NaN</td><td style="text-align:right">NaN</td><td style="text-align:right">NaN</td><td style="text-align:right">NaN</td><td style="text-align:right">NaN</td><td style="text-align:right">NaN</td><td style="text-align:right">4.5</td><td>Smithing Stones</td></tr><tr><td style="text-align:right">3</td><td style="text-align:right">Albinauric Staff</td><td style="text-align:right">Glintstone Staff</td><td style="text-align:right">29</td><td style="text-align:right">NaN</td><td style="text-align:right">NaN</td><td style="text-align:right">NaN</td><td style="text-align:right">NaN</td><td style="text-align:right">100</td><td style="text-align:right">38</td><td style="text-align:right">2</td><td style="text-align:right">…</td><td style="text-align:right">6</td><td style="text-align:right">23.0</td><td style="text-align:right">14.0</td><td style="text-align:right">14.0</td><td style="text-align:right">14</td><td style="text-align:right">14</td><td style="text-align:right">14</td><td style="text-align:right">9</td><td style="text-align:right">2.5</td><td>Smithing Stones</td></tr><tr><td style="text-align:right">4</td><td style="text-align:right">Antspur Rapier</td><td style="text-align:right">Thrusting Sword</td><td style="text-align:right">240</td><td style="text-align:right">NaN</td><td style="text-align:right">NaN</td><td style="text-align:right">NaN</td><td style="text-align:right">NaN</td><td style="text-align:right">100</td><td style="text-align:right">62</td><td style="text-align:right">2</td><td style="text-align:right">…</td><td style="text-align:right">0</td><td style="text-align:right">47.0</td><td style="text-align:right">31.0</td><td style="text-align:right">31.0</td><td style="text-align:right">31</td><td style="text-align:right">31</td><td style="text-align:right">25.2</td><td style="text-align:right">10</td><td style="text-align:right">3</td><td>Smithing Stones</td></tr><tr><td style="text-align:right">…</td><td style="text-align:right">…</td><td style="text-align:right">…</td><td style="text-align:right">…</td><td style="text-align:right">…</td><td style="text-align:right">…</td><td style="text-align:right">…</td><td style="text-align:right">…</td><td style="text-align:right">…</td><td style="text-align:right">…</td><td style="text-align:right">…</td><td style="text-align:right">…</td><td style="text-align:right">…</td><td style="text-align:right">…</td><td style="text-align:right">…</td><td style="text-align:right">…</td><td style="text-align:right">…</td><td style="text-align:right">…</td><td style="text-align:right">…</td><td style="text-align:right">…</td><td style="text-align:right">…</td><td>…</td></tr><tr><td style="text-align:right">302</td><td style="text-align:right">Wing of Astel</td><td style="text-align:right">Curved Sword</td><td style="text-align:right">159</td><td style="text-align:right">191</td><td style="text-align:right">NaN</td><td style="text-align:right">NaN</td><td style="text-align:right">NaN</td><td style="text-align:right">100</td><td style="text-align:right">84</td><td style="text-align:right">1</td><td style="text-align:right">…</td><td style="text-align:right">0</td><td style="text-align:right">28.0</td><td style="text-align:right">52.0</td><td style="text-align:right">23.0</td><td style="text-align:right">23</td><td style="text-align:right">23</td><td style="text-align:right">25.3</td><td style="text-align:right">9</td><td style="text-align:right">2.5</td><td>Somber Smithing Stones</td></tr><tr><td style="text-align:right">303</td><td style="text-align:right">Winged Greathorn</td><td style="text-align:right">Greataxe</td><td style="text-align:right">318</td><td style="text-align:right">NaN</td><td style="text-align:right">NaN</td><td style="text-align:right">NaN</td><td style="text-align:right">NaN</td><td style="text-align:right">100</td><td style="text-align:right">150</td><td style="text-align:right">4</td><td style="text-align:right">…</td><td style="text-align:right">0</td><td style="text-align:right">65.0</td><td style="text-align:right">35.0</td><td style="text-align:right">35.0</td><td style="text-align:right">35</td><td style="text-align:right">35</td><td style="text-align:right">46.2</td><td style="text-align:right">20</td><td style="text-align:right">11</td><td>Somber Smithing Stones</td></tr><tr><td style="text-align:right">304</td><td style="text-align:right">Winged Scythe</td><td style="text-align:right">Reaper</td><td style="text-align:right">213</td><td style="text-align:right">NaN</td><td style="text-align:right">NaN</td><td style="text-align:right">NaN</td><td style="text-align:right">254</td><td style="text-align:right">100</td><td style="text-align:right">110</td><td style="text-align:right">2</td><td style="text-align:right">…</td><td style="text-align:right">0</td><td style="text-align:right">30.0</td><td style="text-align:right">25.0</td><td style="text-align:right">25.0</td><td style="text-align:right">25</td><td style="text-align:right">55</td><td style="text-align:right">33</td><td style="text-align:right">15</td><td style="text-align:right">7.5</td><td>Somber Smithing Stones</td></tr><tr><td style="text-align:right">305</td><td style="text-align:right">Zamor Curved Sword</td><td style="text-align:right">Curved Greatsword</td><td style="text-align:right">306</td><td style="text-align:right">NaN</td><td style="text-align:right">NaN</td><td style="text-align:right">NaN</td><td style="text-align:right">NaN</td><td style="text-align:right">100</td><td style="text-align:right">128</td><td style="text-align:right">3</td><td style="text-align:right">…</td><td style="text-align:right">0</td><td style="text-align:right">61.0</td><td style="text-align:right">33.0</td><td style="text-align:right">33.0</td><td style="text-align:right">33</td><td style="text-align:right">33</td><td style="text-align:right">42.9</td><td style="text-align:right">19</td><td style="text-align:right">9</td><td>Somber Smithing Stones</td></tr><tr><td style="text-align:right">306</td><td style="text-align:right">Zweihander</td><td style="text-align:right">Colossal Sword</td><td style="text-align:right">345</td><td style="text-align:right">NaN</td><td style="text-align:right">NaN</td><td style="text-align:right">NaN</td><td style="text-align:right">NaN</td><td style="text-align:right">100</td><td style="text-align:right">126</td><td style="text-align:right">2</td><td style="text-align:right">…</td><td style="text-align:right">0</td><td style="text-align:right">67.0</td><td style="text-align:right">40.0</td><td style="text-align:right">40.0</td><td style="text-align:right">40</td><td style="text-align:right">40</td><td style="text-align:right">54</td><td style="text-align:right">22</td><td style="text-align:right">15.5</td><td>Smithing Stones</td></tr></tbody></table></div><p>307 rows × 23 columns</p><h2 id="评级平均值和标准差"><a href="#评级平均值和标准差" class="headerlink" title="评级平均值和标准差"></a>评级平均值和标准差</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取csv文件</span></span><br><span class="line">data = pd.read_csv(<span class="string">&#x27;ElderRingData.csv&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将评级列转换为数值，按照S到E的顺序进行编号</span></span><br><span class="line">rating_dict = &#123;<span class="string">&#x27;S&#x27;</span>: <span class="number">6</span>, <span class="string">&#x27;A&#x27;</span>: <span class="number">5</span>, <span class="string">&#x27;B&#x27;</span>: <span class="number">4</span>, <span class="string">&#x27;C&#x27;</span>: <span class="number">3</span>, <span class="string">&#x27;D&#x27;</span>: <span class="number">2</span>, <span class="string">&#x27;E&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;-&#x27;</span>: <span class="number">0</span>&#125;</span><br><span class="line">data[<span class="string">&#x27;Str&#x27;</span>] = data[<span class="string">&#x27;Str&#x27;</span>].apply(<span class="keyword">lambda</span> x: rating_dict[x])</span><br><span class="line">data[<span class="string">&#x27;Dex&#x27;</span>] = data[<span class="string">&#x27;Dex&#x27;</span>].apply(<span class="keyword">lambda</span> x: rating_dict[x])</span><br><span class="line">data[<span class="string">&#x27;Int&#x27;</span>] = data[<span class="string">&#x27;Int&#x27;</span>].apply(<span class="keyword">lambda</span> x: rating_dict[x])</span><br><span class="line">data[<span class="string">&#x27;Fai&#x27;</span>] = data[<span class="string">&#x27;Fai&#x27;</span>].apply(<span class="keyword">lambda</span> x: rating_dict[x])</span><br><span class="line">data[<span class="string">&#x27;Arc&#x27;</span>] = data[<span class="string">&#x27;Arc&#x27;</span>].apply(<span class="keyword">lambda</span> x: rating_dict[x])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将Mag Fir Lit Hol PhyD MagD FirD LitD HolD Bst Rst的值为-时都用NaN替换</span></span><br><span class="line">cols_to_replace = [<span class="string">&#x27;Mag&#x27;</span>, <span class="string">&#x27;Fir&#x27;</span>, <span class="string">&#x27;Lit&#x27;</span>, <span class="string">&#x27;Hol&#x27;</span>, <span class="string">&#x27;PhyD&#x27;</span>, <span class="string">&#x27;MagD&#x27;</span>, <span class="string">&#x27;FirD&#x27;</span>, <span class="string">&#x27;LitD&#x27;</span>, <span class="string">&#x27;HolD&#x27;</span>, <span class="string">&#x27;Bst&#x27;</span>, <span class="string">&#x27;Rst&#x27;</span>]</span><br><span class="line">data[cols_to_replace] = data[cols_to_replace].replace(<span class="string">&#x27;-&#x27;</span>, np.nan)</span><br><span class="line"></span><br><span class="line"><span class="comment">#object列数值类型换成float</span></span><br><span class="line">data[<span class="string">&#x27;PhyD&#x27;</span>] = data[<span class="string">&#x27;PhyD&#x27;</span>].astype(<span class="built_in">float</span>)</span><br><span class="line">data[<span class="string">&#x27;MagD&#x27;</span>] = data[<span class="string">&#x27;MagD&#x27;</span>].astype(<span class="built_in">float</span>)</span><br><span class="line">data[<span class="string">&#x27;FirD&#x27;</span>] = data[<span class="string">&#x27;FirD&#x27;</span>].astype(<span class="built_in">float</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 统计每个属性的评级频数和占比</span></span><br><span class="line">attrs = [<span class="string">&#x27;Str&#x27;</span>, <span class="string">&#x27;Dex&#x27;</span>, <span class="string">&#x27;Int&#x27;</span>, <span class="string">&#x27;Fai&#x27;</span>, <span class="string">&#x27;Arc&#x27;</span>]</span><br><span class="line"><span class="keyword">for</span> attr <span class="keyword">in</span> attrs:</span><br><span class="line">    counts = data[attr].value_counts()</span><br><span class="line">    freqs = counts / counts.<span class="built_in">sum</span>()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;属性<span class="subst">&#123;attr&#125;</span>评级频数：\n<span class="subst">&#123;counts&#125;</span>\n&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;属性<span class="subst">&#123;attr&#125;</span>评级占比：\n<span class="subst">&#123;freqs&#125;</span>\n&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 统计每个属性的评级平均值和标准差</span></span><br><span class="line">attr_cols = [<span class="string">&#x27;Str&#x27;</span>, <span class="string">&#x27;Dex&#x27;</span>, <span class="string">&#x27;Int&#x27;</span>, <span class="string">&#x27;Fai&#x27;</span>, <span class="string">&#x27;Arc&#x27;</span>]</span><br><span class="line">attr_means = data[attr_cols].mean()</span><br><span class="line">attr_stds = data[attr_cols].std()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;属性评级平均值：&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(attr_means)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;\n属性评级标准差：&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(attr_stds)</span><br></pre></td></tr></table></figure><p>输出结果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">属性Str评级频数：</span><br><span class="line">2    109</span><br><span class="line">3     94</span><br><span class="line">4     52</span><br><span class="line">1     31</span><br><span class="line">0     16</span><br><span class="line">5      4</span><br><span class="line">6      1</span><br><span class="line">Name: Str, dtype: int64</span><br><span class="line"></span><br><span class="line">属性Str评级占比：</span><br><span class="line">2    0.355049</span><br><span class="line">3    0.306189</span><br><span class="line">4    0.169381</span><br><span class="line">1    0.100977</span><br><span class="line">0    0.052117</span><br><span class="line">5    0.013029</span><br><span class="line">6    0.003257</span><br><span class="line">Name: Str, dtype: float64</span><br><span class="line"></span><br><span class="line">属性Dex评级频数：</span><br><span class="line">2    106</span><br><span class="line">3     79</span><br><span class="line">4     52</span><br><span class="line">0     44</span><br><span class="line">...</span><br><span class="line">Int    1.530352</span><br><span class="line">Fai    1.458677</span><br><span class="line">Arc    0.865358</span><br><span class="line">dtype: float64</span><br></pre></td></tr></table></figure><h2 id="随机森林模型"><a href="#随机森林模型" class="headerlink" title="随机森林模型"></a>随机森林模型</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> train_test_split</span><br><span class="line"><span class="keyword">from</span> sklearn.ensemble <span class="keyword">import</span> RandomForestClassifier</span><br><span class="line"><span class="keyword">from</span> sklearn.preprocessing <span class="keyword">import</span> LabelEncoder</span><br><span class="line"><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> accuracy_score</span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取数据集</span></span><br><span class="line">data = pd.read_csv(<span class="string">&quot;ElderRingData.csv&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除不需要的列</span></span><br><span class="line">data = data.drop([<span class="string">&quot;Name&quot;</span>, <span class="string">&quot;Mag&quot;</span>, <span class="string">&quot;Fir&quot;</span>, <span class="string">&quot;Lit&quot;</span>, <span class="string">&quot;Hol&quot;</span>, <span class="string">&quot;PhyD&quot;</span>, <span class="string">&quot;MagD&quot;</span>, <span class="string">&quot;FirD&quot;</span>, <span class="string">&quot;LitD&quot;</span>, <span class="string">&quot;HolD&quot;</span>, <span class="string">&quot;Upgrade&quot;</span>], axis=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 处理缺失值</span></span><br><span class="line">data = data.dropna()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将文本数据转换成数值数据</span></span><br><span class="line">le = LabelEncoder()</span><br><span class="line"><span class="keyword">for</span> col <span class="keyword">in</span> data.columns:</span><br><span class="line">    <span class="keyword">if</span> data[col].dtype == <span class="string">&quot;object&quot;</span>:</span><br><span class="line">        data[col] = le.fit_transform(data[col])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将数据分为训练集和测试集</span></span><br><span class="line">X = data.drop([<span class="string">&quot;Type&quot;</span>], axis=<span class="number">1</span>)</span><br><span class="line">y = data[<span class="string">&quot;Type&quot;</span>]</span><br><span class="line">X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=<span class="number">0.2</span>, random_state=<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 构建随机森林模型并进行训练</span></span><br><span class="line">rf = RandomForestClassifier(n_estimators=<span class="number">100</span>, random_state=<span class="number">0</span>)</span><br><span class="line">rf.fit(X_train, y_train)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进行预测并计算准确率</span></span><br><span class="line">y_pred = rf.predict(X_test)</span><br><span class="line">accuracy = accuracy_score(y_test, y_pred)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Accuracy:&quot;</span>, accuracy)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>预测准确度:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Accuracy: 0.7903225806451613</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LeetCode 4则</title>
      <link href="/2022/12/15/Leetcode4%E5%88%99/"/>
      <url>/2022/12/15/Leetcode4%E5%88%99/</url>
      
        <content type="html"><![CDATA[<h1 id="LeetCode-4则"><a href="#LeetCode-4则" class="headerlink" title="LeetCode 4则"></a>LeetCode 4则</h1><h3 id="58-最后一个单词的长度-length-of-last-word"><a href="#58-最后一个单词的长度-length-of-last-word" class="headerlink" title="58.最后一个单词的长度 length of last word"></a>58.最后一个单词的长度 length of last word</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> BlazBlade</span></span><br><span class="line"><span class="comment"> * 58.最后一个单词的长度 length of last word</span></span><br><span class="line"><span class="comment"> * 给你一个字符串 s，由若干单词组成，单词前后用一些空格字符隔开。返回字符串中 最后一个 单词的长度。</span></span><br><span class="line"><span class="comment"> * 单词 是指仅由字母组成、不包含任何空格字符的最大子字符串。</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 示例:</span></span><br><span class="line"><span class="comment"> * 输入：s = &quot;Hello World&quot;</span></span><br><span class="line"><span class="comment"> * 输出：5</span></span><br><span class="line"><span class="comment"> * 解释：最后一个单词是“World”，长度为5。</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 来源：力扣（LeetCode）</span></span><br><span class="line"><span class="comment"> * 链接：https://leetcode.cn/problems/length-of-last-word</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LeetCode58</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">lengthOfLastWord</span><span class="params">(String s)</span>&#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">end</span> <span class="operator">=</span> s.length() - <span class="number">1</span>; <span class="comment">//字符串的长度-1</span></span><br><span class="line">        <span class="comment">//从后往前遍历直至遇到空格</span></span><br><span class="line">        <span class="keyword">while</span>(end &gt;= <span class="number">0</span> &amp;&amp; s.charAt(end) == <span class="string">&#x27; &#x27;</span> )&#123;</span><br><span class="line">            end --;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (end &lt; <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="variable">start</span> <span class="operator">=</span> end;</span><br><span class="line">        <span class="comment">//过滤空格再进行操作</span></span><br><span class="line">        <span class="keyword">while</span>( start &gt;= <span class="number">0</span> &amp;&amp; s.charAt(start) != <span class="string">&#x27; &#x27;</span>)&#123;</span><br><span class="line">            start --;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> end - start; <span class="comment">//返回尾部减去头部即获得单词的长度</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="83-删除排序链表中的重复元素-remove-duplicates-from-sorted-list"><a href="#83-删除排序链表中的重复元素-remove-duplicates-from-sorted-list" class="headerlink" title="83.删除排序链表中的重复元素 remove duplicates from sorted list"></a>83.删除排序链表中的重复元素 remove duplicates from sorted list</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> BlazBlade</span></span><br><span class="line"><span class="comment"> * 83.删除排序链表中的重复元素 remove duplicates from sorted list</span></span><br><span class="line"><span class="comment"> * 给定一个已排序的链表的头 head ， 删除所有重复的元素，使每个元素只出现一次 。返回 已排序的链表 。</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 示例:</span></span><br><span class="line"><span class="comment"> * 输入：head = [1,1,2]</span></span><br><span class="line"><span class="comment"> * 输出：[1,2]</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 来源：力扣（LeetCode）</span></span><br><span class="line"><span class="comment"> * 链接：https://leetcode.cn/problems/lremove-duplicates-from-sorted-list</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LeetCode83</span> &#123;</span><br><span class="line">    <span class="comment">//引入链表</span></span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">ListNode</span> &#123;</span><br><span class="line">        <span class="type">int</span> val; <span class="comment">//节点保存的内容</span></span><br><span class="line">        ListNode next; <span class="comment">//节点的引用, 指向下一个节点</span></span><br><span class="line">        ListNode(<span class="type">int</span> x) &#123; val = x; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ListNode <span class="title function_">deleteDuplicates</span><span class="params">(ListNode head)</span>&#123;</span><br><span class="line">        <span class="type">ListNode</span> <span class="variable">cur</span> <span class="operator">=</span> head; <span class="comment">//头节点</span></span><br><span class="line">        <span class="keyword">while</span> (cur != <span class="literal">null</span> &amp;&amp; cur.next != <span class="literal">null</span>)&#123; <span class="comment">//当头部或下一位为null时则不需要继续重复</span></span><br><span class="line">            <span class="keyword">if</span> (cur.val == cur.next.val)&#123; <span class="comment">//所指和下一个节点值相同时则去重,指针跳转至下下个节点</span></span><br><span class="line">                cur.next = cur.next.next;</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123; <span class="comment">//不相等则移动下一位置继续循环</span></span><br><span class="line">                cur = cur.next;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> head;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="102-二叉树的层序遍历-binary-tree-level-order-traversal"><a href="#102-二叉树的层序遍历-binary-tree-level-order-traversal" class="headerlink" title="102. 二叉树的层序遍历 binary tree level order traversal"></a>102. 二叉树的层序遍历 binary tree level order traversal</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayDeque;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Queue;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> BlazBlade</span></span><br><span class="line"><span class="comment"> * 102. 二叉树的层序遍历 binary tree level order traversal</span></span><br><span class="line"><span class="comment"> * 给你二叉树的根节点 root ，返回其节点值的 层序遍历 。 （即逐层地，从左到右访问所有节点）。</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 示例:</span></span><br><span class="line"><span class="comment"> * 输入：root = [3,9,20,null,null,15,7]</span></span><br><span class="line"><span class="comment"> * 输出：[[3],[9,20],[15,7]]</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 来源：力扣（LeetCode）</span></span><br><span class="line"><span class="comment"> * 链接：https://leetcode.cn/problems/binary-tree-level-order-traversal</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LeetCode102</span> &#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">TreeNode</span> &#123;</span><br><span class="line">        <span class="type">int</span> val;</span><br><span class="line">        TreeNode left;</span><br><span class="line">        TreeNode right;</span><br><span class="line">        TreeNode() &#123;&#125;</span><br><span class="line">        TreeNode(<span class="type">int</span> val) &#123; <span class="built_in">this</span>.val = val; &#125;</span><br><span class="line">        TreeNode(<span class="type">int</span> val, TreeNode left, TreeNode right) &#123;</span><br><span class="line">            <span class="built_in">this</span>.val = val;</span><br><span class="line">            <span class="built_in">this</span>.left = left;</span><br><span class="line">            <span class="built_in">this</span>.right = right;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> List&lt;List&lt;Integer&gt;&gt; <span class="title function_">breadthfirst</span><span class="params">(TreeNode root)</span>&#123;</span><br><span class="line">        List&lt;List&lt;Integer&gt;&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();<span class="comment">//创建动态数组</span></span><br><span class="line"></span><br><span class="line">        Queue&lt;TreeNode&gt; queue = <span class="keyword">new</span> <span class="title class_">ArrayDeque</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">if</span> (root != <span class="literal">null</span>)&#123;</span><br><span class="line">            queue.add(root);<span class="comment">//不为空时插入新的根结点</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> (!queue.isEmpty())&#123;<span class="comment">//分配好内存后值为空，即值 = 空</span></span><br><span class="line">            <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> queue.size(); <span class="comment">//记录二叉树该层的结点数</span></span><br><span class="line">            List&lt;Integer&gt; level = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">                <span class="type">TreeNode</span> <span class="variable">node</span> <span class="operator">=</span> queue.poll();<span class="comment">//返回队首元素并删除队首元素，队列为空返回null</span></span><br><span class="line">                level.add(node.val);</span><br><span class="line">                <span class="keyword">if</span>(node.left != <span class="literal">null</span>)&#123;</span><br><span class="line">                    queue.add(node.left);<span class="comment">//添加左结点</span></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (node.right != <span class="literal">null</span>)&#123;</span><br><span class="line">                    queue.add(node.right);<span class="comment">//添加右结点</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            list.add(level);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="226-翻转二叉树invert-binary-tree"><a href="#226-翻转二叉树invert-binary-tree" class="headerlink" title="226. 翻转二叉树invert-binary-tree"></a>226. 翻转二叉树invert-binary-tree</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> BlazBlade</span></span><br><span class="line"><span class="comment"> * 226. 翻转二叉树invert-binary-tree</span></span><br><span class="line"><span class="comment"> * 给你一棵二叉树的根节点 root ，翻转这棵二叉树，并返回其根节点。</span></span><br><span class="line"><span class="comment"> * 示例:</span></span><br><span class="line"><span class="comment"> * 输入：root = [4,2,7,1,3,6,9]</span></span><br><span class="line"><span class="comment"> * 输出：[4,7,2,9,6,3,1]</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 来源：力扣（LeetCode）</span></span><br><span class="line"><span class="comment"> * 链接：https://leetcode.cn/problems/invert-binary-tree</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LeetCode226</span> &#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">TreeNode</span>&#123;</span><br><span class="line">        <span class="type">int</span> val;</span><br><span class="line">        TreeNode left;</span><br><span class="line">        TreeNode right;</span><br><span class="line">        TreeNode()&#123;&#125;;</span><br><span class="line">        TreeNode(<span class="type">int</span> val)&#123;<span class="built_in">this</span>.val = val;&#125;</span><br><span class="line">        TreeNode(<span class="type">int</span> val, TreeNode left, TreeNode right)&#123;</span><br><span class="line">            <span class="built_in">this</span>.val = val;</span><br><span class="line">            <span class="built_in">this</span>.left = left;</span><br><span class="line">            <span class="built_in">this</span>.right = right;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> TreeNode <span class="title function_">invertTree</span><span class="params">(TreeNode root)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (root == <span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">TreeNode</span> <span class="variable">left</span> <span class="operator">=</span> invertTree(root.left);</span><br><span class="line">        <span class="type">TreeNode</span> <span class="variable">right</span> <span class="operator">=</span> invertTree(root.right);</span><br><span class="line">        root.left = right;</span><br><span class="line">        root.right = left;</span><br><span class="line"><span class="comment">//        TreeNode temp = root.left;</span></span><br><span class="line"><span class="comment">//        root.left = root.right;</span></span><br><span class="line"><span class="comment">//        root.right = temp;</span></span><br><span class="line"><span class="comment">//        TreeNode left = invertTree(root.left);</span></span><br><span class="line"><span class="comment">//        TreeNode right = invertTree(root.right);</span></span><br><span class="line">        <span class="keyword">return</span> root;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LeetCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>几道题目随笔捏</title>
      <link href="/2022/11/29/%E5%87%A0%E7%AF%87%E9%A2%98%E7%9B%AE%E9%9A%8F%E7%AC%94%E6%8D%8F/"/>
      <url>/2022/11/29/%E5%87%A0%E7%AF%87%E9%A2%98%E7%9B%AE%E9%9A%8F%E7%AC%94%E6%8D%8F/</url>
      
        <content type="html"><![CDATA[<h3 id="最小公倍数"><a href="#最小公倍数" class="headerlink" title="[最小公倍数]"></a>[最小公倍数]</h3><p>给定两个正整数，计算这两个数的最小公倍数。</p><div class="table-container"><table><thead><tr><th>样例输入</th><th>样例输出</th></tr></thead><tbody><tr><td>10 14</td><td>70</td></tr></tbody></table></div><p><strong>Java实现</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> CloudH2O LV</span></span><br><span class="line"><span class="comment"> * 键盘输入两个数, 并获得他们的最小公倍数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">leastcommonmultiple</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">f</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span>&#123;</span><br><span class="line">        <span class="comment">//创建两个数组</span></span><br><span class="line">        ArrayList&lt;Integer&gt; arrayList1 = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;Integer&gt;();</span><br><span class="line">        ArrayList&lt;Integer&gt; arrayList2 = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;Integer&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//分解质因数</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">2</span>; a &gt; <span class="number">1</span>; i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(;(a % i) == <span class="number">0</span>; a /= i)&#123;</span><br><span class="line">                arrayList1.add(i);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">2</span>; b &gt; <span class="number">1</span>; j++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(;(b % j) == <span class="number">0</span>; b /= j)&#123;</span><br><span class="line">                arrayList2.add(j);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">size</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">max</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">temp</span> <span class="operator">=</span> <span class="number">0</span>;<span class="comment">//临时变量</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">/*查找相同的因数*/</span></span><br><span class="line">        <span class="keyword">while</span>(size &lt; arrayList1.size())&#123;</span><br><span class="line">            <span class="keyword">if</span> (arrayList2.contains(arrayList1.get(size)))&#123;<span class="comment">//相同元素</span></span><br><span class="line">               max = arrayList1.get(size) * max;</span><br><span class="line">               arrayList2.remove(arrayList2.indexOf(arrayList1.get(size)));<span class="comment">//找到一个相同元素后remove</span></span><br><span class="line">               arrayList1.remove(size);</span><br><span class="line">               size = temp;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                temp = size += <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> max;<span class="comment">//返回最大公因数</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        System.out.println(<span class="string">&quot;输入第一个数: &quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> scanner.nextInt();</span><br><span class="line">        System.out.println(<span class="string">&quot;输入第二个数: &quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> scanner.nextInt();</span><br><span class="line">        <span class="type">leastcommonmultiple</span> <span class="variable">method</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">leastcommonmultiple</span>();</span><br><span class="line">        <span class="type">int</span> <span class="variable">multiple</span> <span class="operator">=</span> a * b / (method.f(a,b));</span><br><span class="line">        System.out.println(<span class="string">&quot;最小公倍数是&quot;</span>+ multiple);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="素数判定"><a href="#素数判定" class="headerlink" title="[素数判定]"></a>[素数判定]</h3><p>对于表达式n^2+n+41，当n在（x,y）范围内取整数值时（包括x,y）(-39&lt;=x&lt;y&lt;=50)，判定该表达式的值是否都为素数。</p><p><strong>输入</strong></p><p>输入数据有多组，每组占一行，由两个整数x，y组成，当x=0,y=0时，表示输入结束，该行不做处理。</p><p><strong>输出</strong></p><p>对于每个给定范围内的取值，如果表达式的值都为素数，则输出”OK”,否则请输出“Sorry”,每组输出占一行。</p><div class="table-container"><table><thead><tr><th>样例输入</th><th>样例输出</th></tr></thead><tbody><tr><td>0 1</td><td>OK</td></tr><tr><td>0 0</td></tr></tbody></table></div><p><strong>C 实现</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span> </span></span><br><span class="line"><span class="type">int</span> <span class="title function_">sushu</span><span class="params">(<span class="type">int</span> n)</span>&#123; </span><br><span class="line">    <span class="type">int</span> i; </span><br><span class="line">    <span class="keyword">if</span>(n &lt; <span class="number">2</span>) </span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">2</span>;i* i &lt;= n;i ++)&#123; </span><br><span class="line">        <span class="keyword">if</span>(n % i == <span class="number">0</span>) </span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">        <span class="keyword">else</span> ; </span><br><span class="line">    &#125; </span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123; </span><br><span class="line">    <span class="type">int</span> x, y, i, s; </span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;x, &amp;y))&#123; </span><br><span class="line">        <span class="keyword">if</span>(x == <span class="number">0</span> &amp;&amp; y == <span class="number">0</span>) </span><br><span class="line">            <span class="keyword">break</span>; </span><br><span class="line">        <span class="keyword">for</span>(i = x;i &lt;= y;i ++)&#123; </span><br><span class="line">            s = i * i + i + <span class="number">41</span>; </span><br><span class="line">            <span class="keyword">if</span>(! sushu(s))&#123; </span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;Sorry\n&quot;</span>); </span><br><span class="line">                <span class="keyword">break</span>; </span><br><span class="line">            &#125; </span><br><span class="line"></span><br><span class="line">        &#125; </span><br><span class="line">        <span class="keyword">if</span>(i == y + <span class="number">1</span>) </span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;OK\n&quot;</span>); </span><br><span class="line">        &#125;   </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第二篇文章</title>
      <link href="/2022/11/20/2022-11-20/"/>
      <url>/2022/11/20/2022-11-20/</url>
      
        <content type="html"><![CDATA[<h2 id="树"><a href="#树" class="headerlink" title="树"></a>树</h2><p>树中的结点个数等于树中所有结点的度数之和再加1!</p><p>度为m的树中第i层上之多有m^i-1个结点(i &gt;= 1)</p><p>先根(序)遍历：</p><p>根—根结点—先根遍历子树</p><p>后根(序)遍历：</p><p>遍历子树—根结点</p><p>层次遍历：</p><p>根结点开始：</p><p>上到下—左到右—访问每一个结点</p><p>先：ABEKOPFCGDHLIJMN</p><p>后：OPKEFBGCLHIMNJDA</p><p>层：ABCDEFGHIJKLMNOP</p><p>完全二叉树(n是高度)</p><p>至少2^(n - 1)</p><p>至多2^n - 1</p><p>二叉树五种基本形态</p><p><img src="https://img-blog.csdnimg.cn/20200906210246140.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0phY2t5X0Zlbmc=,size_16,color_FFFFFF,t_70" alt="img"></p>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python</title>
      <link href="/2022/11/20/Python%E5%88%86%E7%B1%BB/"/>
      <url>/2022/11/20/Python%E5%88%86%E7%B1%BB/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C / C++</title>
      <link href="/2022/11/20/cpp%E5%88%86%E7%B1%BB/"/>
      <url>/2022/11/20/cpp%E5%88%86%E7%B1%BB/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> C / C++ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C / C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Data Structures</title>
      <link href="/2022/11/20/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%88%86%E7%B1%BB/"/>
      <url>/2022/11/20/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%88%86%E7%B1%BB/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> Data Structures </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Data Structures </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>杂谈</title>
      <link href="/2022/11/20/%E6%9D%82%E8%B0%88%E5%88%86%E7%B1%BB/"/>
      <url>/2022/11/20/%E6%9D%82%E8%B0%88%E5%88%86%E7%B1%BB/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 杂谈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 杂谈 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网站搭建</title>
      <link href="/2022/11/20/%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/"/>
      <url>/2022/11/20/%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 网站搭建の过程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网站搭建の过程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java分类</title>
      <link href="/2022/11/20/Java%E5%88%86%E7%B1%BB/"/>
      <url>/2022/11/20/Java%E5%88%86%E7%B1%BB/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第一篇文章</title>
      <link href="/2022/11/19/2022-11-19/"/>
      <url>/2022/11/19/2022-11-19/</url>
      
        <content type="html"><![CDATA[<!-- ---title: 第一篇文章date: 2022-11-19 02:00:00updated: 2022-11-19 02:00:00categories: CS计算机科学tags: swiper_index: 1cover: https://bu.dusays.com/2022/11/23/637e2ae0da86a.webpdescription: 是第一篇文章捏--- --><h2 id="第一篇文章捏"><a href="#第一篇文章捏" class="headerlink" title="第一篇文章捏"></a>第一篇文章捏</h2><p>Hello World!<br>测试文章</p>]]></content>
      
      
      <categories>
          
          <category> CS计算机科学 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/11/19/hello-world/"/>
      <url>/2022/11/19/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>about</title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/custom.css"/>
      <url>/css/custom.css</url>
      
        <content type="html"><![CDATA[/* 页脚与头图透明 */#footer {    background: transparent !important;  }  #page-header {    background: transparent !important;  }    /* 白天模式遮罩透明 */  #footer::before {    background: transparent !important;  }  #page-header::before {    background: transparent !important;  }    /* 夜间模式遮罩透明 */  [data-theme="dark"] #footer::before {    background: transparent !important;  }  [data-theme="dark"] #page-header::before {    background: transparent !important;  }/* 翻页按钮居中 */#pagination {  width: 100%;  margin: auto;}/* 一级菜单居中 */#nav .menus_items {  position: absolute !important;  width: fit-content !important;  left: 50% !important;  transform: translateX(-50%) !important;}/* 子菜单横向展示 */#nav .menus_items .menus_item:hover .menus_item_child {  display: flex !important;}/* 这里的2是代表导航栏的第2个元素，即有子菜单的元素，可以按自己需求修改 */.menus_items .menus_item:nth-child(4) .menus_item_child {  left: -40px;}/* 夜间模式菜单栏发光字 */[data-theme="dark"] #nav .site-page,[data-theme="dark"] #nav .menus_items .menus_item .menus_item_child li a {  text-shadow: 0 0 2px rgb(179,71,241) !important;}/* 手机端适配 */[data-theme="dark"] #sidebar #sidebar-menus .menus_items .site-page {  text-shadow: 0 0 2px rgb(179,71,241) !important;}/* 侧边栏个人信息卡片动态渐变色 *//*#aside-content > .card-widget.card-info {  background: linear-gradient(    -45deg,    #e8d8b9,    #eccec5,    #a3e9eb,    #bdbdf0,    #eec1ea  );  box-shadow: 0 0 5px rgb(66, 68, 68);  position: relative;  background-size: 400% 400%;  -webkit-animation: Gradient 10s ease infinite;  -moz-animation: Gradient 10s ease infinite;  animation: Gradient 10s ease infinite !important;}@-webkit-keyframes Gradient {  0% {    background-position: 0% 50%;  }  50% {    background-position: 100% 50%;  }  100% {    background-position: 0% 50%;  }}@-moz-keyframes Gradient {  0% {    background-position: 0% 50%;  }  50% {    background-position: 100% 50%;  }  100% {    background-position: 0% 50%;  }}@keyframes Gradient {  0% {    background-position: 0% 50%;  }  50% {    background-position: 100% 50%;  }  100% {    background-position: 0% 50%;  }} *//* 黑夜模式适配 */[data-theme="dark"] #aside-content > .card-widget.card-info {  background: #191919ee;}/* 个人信息Follow me按钮 */#aside-content > .card-widget.card-info > #card-info-btn {  background-color: #3eb8be;  border-radius: 8px;}/* 字体选择 */@font-face {  /* 为载入的字体取名字(随意) */  font-family: 'YSHST';  /* 字体文件地址(相对或者绝对路径都可以) */  src: url(/font/霞鹜文楷.woff2);  /* 定义加粗样式(加粗多少) */  font-weight: normal;  /* 定义字体样式(斜体/非斜体) */  font-style: normal;  /* 定义显示样式 */  font-display: block;}/* 文章页H1-H6图标样式效果 *//* 控制风车转动速度 4s那里可以自己调节快慢 */h1::before,h2::before,h3::before,h4::before,h5::before,h6::before {  -webkit-animation: ccc 4s linear infinite;  animation: ccc 4s linear infinite;}/* 控制风车转动方向 -1turn 为逆时针转动，1turn 为顺时针转动，相同数字部分记得统一修改 */@-webkit-keyframes ccc {  0% {    -webkit-transform: rotate(0deg);    transform: rotate(0deg);  }  to {    -webkit-transform: rotate(-1turn);    transform: rotate(-1turn);  }}@keyframes ccc {  0% {    -webkit-transform: rotate(0deg);    transform: rotate(0deg);  }  to {    -webkit-transform: rotate(-1turn);    transform: rotate(-1turn);  }}/* 设置风车颜色 */#content-inner.layout h1::before {  color: #ef50a8;  margin-left: -1.55rem;  font-size: 1.3rem;  margin-top: -0.23rem;}#content-inner.layout h2::before {  color: #fb7061;  margin-left: -1.35rem;  font-size: 1.1rem;  margin-top: -0.12rem;}#content-inner.layout h3::before {  color: #ffbf00;  margin-left: -1.22rem;  font-size: 0.95rem;  margin-top: -0.09rem;}#content-inner.layout h4::before {  color: #a9e000;  margin-left: -1.05rem;  font-size: 0.8rem;  margin-top: -0.09rem;}#content-inner.layout h5::before {  color: #57c850;  margin-left: -0.9rem;  font-size: 0.7rem;  margin-top: 0rem;}#content-inner.layout h6::before {  color: #5ec1e0;  margin-left: -0.9rem;  font-size: 0.66rem;  margin-top: 0rem;}/* s设置风车hover动效 6s那里可以自己调节快慢*/#content-inner.layout h1:hover,#content-inner.layout h2:hover,#content-inner.layout h3:hover,#content-inner.layout h4:hover,#content-inner.layout h5:hover,#content-inner.layout h6:hover {  color: var(--theme-color);}#content-inner.layout h1:hover::before,#content-inner.layout h2:hover::before,#content-inner.layout h3:hover::before,#content-inner.layout h4:hover::before,#content-inner.layout h5:hover::before,#content-inner.layout h6:hover::before {  color: var(--theme-color);  -webkit-animation: ccc 6s linear infinite;  animation: ccc 6s linear infinite;}/* 引入icon图标@import "//at.alicdn.com/t/font_2264842_b004iy0kk2b.css"; */.iconfont {  font-family: "iconfont" !important;  font-size: 3em;  /* 可以定义图标大小 */  font-style: normal;  -webkit-font-smoothing: antialiased;  -moz-osx-font-smoothing: grayscale;}/*鼠标指针*/body {  cursor: url(https://bu.dusays.com/2022/11/25/6380b0a7518f7.png), auto;}.hide-block>.hide-button.open,.hide-inline>.hide-button.open {  display: block}a,button,img {  cursor: url(https://bu.dusays.com/2022/11/29/6385b550109bc.png), auto}/*评论输入提醒*//* 设置文字内容 :nth-child(1)的作用是选择第几个 */.el-input.el-input--small.el-input-group.el-input-group--prepend:nth-child(1):before {  content: '输入QQ号会自动获取昵称和头像🐧';}.el-input.el-input--small.el-input-group.el-input-group--prepend:nth-child(2):before {  content: '收到回复将会发送到您的邮箱📧';}.el-input.el-input--small.el-input-group.el-input-group--prepend:nth-child(3):before {  content: '可以通过昵称访问您的网站🔗';}/* 当用户点击输入框时显示 */.el-input.el-input--small.el-input-group.el-input-group--prepend:focus-within::before,.el-input.el-input--small.el-input-group.el-input-group--prepend:focus-within::after {  display: block;}/* 主内容区 */.el-input.el-input--small.el-input-group.el-input-group--prepend::before {  /* 先隐藏起来 */  display: none;  /* 绝对定位 */  position: absolute;  /* 向上移动60像素 */  top: -60px;  /* 文字强制不换行，防止left:50%导致的文字换行 */  white-space: nowrap;  /* 圆角 */  border-radius: 10px;  /* 距离左边50% */  left: 50%;  /* 然后再向左边挪动自身的一半，即可实现居中 */  transform: translate(-50%);  /* 填充 */  padding: 14px 18px;  background: #444;  color: #fff;}/* 小角标 */.el-input.el-input--small.el-input-group.el-input-group--prepend::after {  display: none;  content: '';  position: absolute;  /* 内容大小（宽高）为0且边框大小不为0的情况下，每一条边（4个边）都是一个三角形，组成一个正方形。  我们先将所有边框透明，再给其中的一条边添加颜色就可以实现小三角图标 */  border: 12px solid transparent;  border-top-color: #444;  left: 50%;  transform: translate(-50%, -48px);}/* 头像呼吸灯 */[data-theme="light"] .avatar-img {  animation: huxi_light 4s ease-in-out infinite;}[data-theme="dark"] .avatar-img {  animation: huxi_dark 4s ease-in-out infinite;}@keyframes huxi_light {  0% {    box-shadow: 0px 0px 1px 1px #d5e5f5;  }  50% {    box-shadow: 0px 0px 5px 5px #d5e5f5;  }  100% {    box-shadow: 0px 0px 1px 1px #d5e5f5;  }}@keyframes huxi_dark {  0% {    box-shadow: 0px 0px 1px 1px #39c5bb;  }  50% {    box-shadow: 0px 0px 5px 5px #39c5bb;  }  100% {    box-shadow: 0px 0px 1px 1px #39c5bb;  }}/*头像状态*/.card-info-avatar .author-status-box {  position: absolute;  bottom: 0;  left: calc(100% - 28px);  width: 28px;  height: 28px;  border: 1px solid #d0d7de;  border-radius: 2em;  background-color: #f8f8f8f8;  transition: 0.4s;  overflow: hidden;}[data-theme="dark"] .card-info-avatar .author-status-box {  background-color: #222222f2;  border: 1px solid #5c6060;}.card-info-avatar .author-status-box .author-status {  display: flex;  align-items: center;  justify-content: center;  height: 28px;  padding: 0 5px;}.card-info-avatar .author-status-box:hover {  width: 105px;}.card-info-avatar .author-status-box:hover .author-status span {  width: 105px;  margin-left: 4px;}.card-info-avatar .author-status-box .author-status span {  width: 0;  font-size: 12px;  height: 100%;  overflow: hidden;  text-overflow: ellipsis;  white-space: nowrap;  transition: 0.4s;}.card-widget .card-info-avatar {  display: inline-block;  position: relative;}/* 个人信息卡片背景图 */[data-theme="light"] #aside-content > .card-widget.card-info {  background-image: url(https://bu.dusays.com/2023/01/07/63b90080c93ac.webp);  background-repeat: no-repeat;  background-attachment: inherit;  background-size: 100%;}[data-theme="dark"] #aside-content > .card-widget.card-info {  background-image: url(https://bu.dusays.com/2023/01/04/63b570cf7efe9.webp);  background-repeat: no-repeat;  background-attachment: inherit;  background-size: 100%;}/* 引入font-class *//* @import "//at.alicdn.com/t/c/font_3798581_1f99ur1khyo.css"; *//* 整体图标大小 */svg.icon {  width: 1.48em;  height: 1.48em;  vertical-align: -0.15em;  fill: currentColor;  overflow: hidden;}/* social界面图标大小 */svg.social_icon {  width: 1.20em;  height: 1.20em;  vertical-align: -0.15em;  fill: currentColor;  overflow: hidden;}/* 标题增强 */#site-name::before {  opacity: 0;  background-color: var(--theme-color) !important;  border-radius: 8px;  -webkit-border-radius: 8px;  -moz-border-radius: 8px;  -ms-border-radius: 8px;  -o-border-radius: 8px;  transition: 0.3s;  -webkit-transition: 0.3s;  -moz-transition: 0.3s;  -ms-transition: 0.3s;  -o-transition: 0.3s;  position: absolute;  top: 0 !important;  right: 0 !important;  width: 100%;  height: 100%;  content: "\f015";  box-shadow: 0 0 5px var(--theme-color);  font-family: "Font Awesome 6 Free";  text-align: center;  color: white; /*调主题色*/  line-height: 34px; /*如果有溢出或者垂直不居中的现象微调一下这个参数*/  font-size: 18px; /*根据个人喜好*/}#site-name:hover::before {  opacity: 1;  scale: 1.03;}#site-name {  position: relative;  font-size: 24px; /*一定要把字体调大点，否则效果惨不忍睹！*/}/* 顶栏常驻代码 */.nav-fixed #nav{  transform: translateY(58px)!important;  -webkit-transform: translateY(58px)!important;  -moz-transform: translateY(58px)!important;  -ms-transform: translateY(58px)!important;  -o-transform: translateY(58px)!important;}#nav{  transition: none!important;  -webkit-transition: none!important;  -moz-transition: none!important;  -ms-transition: none!important;  -o-transition: none!important;}/* 导航栏显示标题配置 */#page-name::before {  font-size: 18px;  position: absolute;  width: 100%;  height: 100%;  border-radius: 8px;  color: white !important;  top: 0;  left: 0;  content: "回到顶部";  background-color: var(--theme-color);  transition: all 0.3s;  -webkit-transition: all 0.3s;  -moz-transition: all 0.3s;  -ms-transition: all 0.3s;  -o-transition: all 0.3s;  opacity: 0;  box-shadow: 0 0 3px var(--theme-color);  line-height: 45px; /*如果垂直位置不居中可以微调此值，也可以删了*/}#page-name:hover:before {  opacity: 1;}#name-container {  transition: all 0.3s;  -webkit-transition: all 0.3s;  -moz-transition: all 0.3s;  -ms-transition: all 0.3s;  -o-transition: all 0.3s;}#name-container:hover {  scale: 1.03;}#page-name {  position: relative;  padding: 10px 30px; /*如果文字间隔不合理可以微调修改，第二个是水平方向的padding，第一个是垂直的*/}#nav{    padding: 0 20px;}/* 修复滚动显示标题居中 */center#name-container {  position: absolute !important;  width: fit-content !important;  left: 42% !important;}@media screen and (max-width: 768px) {  center#name-container {    display: none;  }}/* 全局宽度 */.layout {  max-width: 1400px;}/* 侧边卡片栏宽度 */.aside-content {  max-width: 318px;  min-width: 300px;}/* 平板尺寸自适应(不启用侧边栏宽度限制) */@media screen and (max-width: 900px) {  .aside-content {    max-width: none !important;    padding: 0 5px 0 5px;  }}/* 除了首页以外其他页面隐藏卡片，并采用宽屏显示 */#archive,#page,#category,#tag {  width: 100%;}.page:not(.page.home) .aside-content {  display: none;}/* 滚动条样式 */::-webkit-scrollbar {  width: 8px;  height: 8px;}::-webkit-scrollbar-track {  background-color: rgba(73, 177, 245, 0.2);  border-radius: 2em;}::-webkit-scrollbar-thumb {  background-color: var(rgb(#d5e5f5));/* --theme-color */  background-image: -webkit-linear-gradient(    45deg,    rgba(255, 255, 255, 0.4) 25%,    transparent 25%,    transparent 50%,    rgba(255, 255, 255, 0.4) 50%,    rgba(255, 255, 255, 0.4) 75%,    transparent 75%,    transparent  );  border-radius: 2em;}::-webkit-scrollbar-corner {  background-color: transparent;}::-moz-selection {  color: #fff;  background-color: var(rgb(#d5e5f5));}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/progress_bar.css"/>
      <url>/css/progress_bar.css</url>
      
        <content type="html"><![CDATA[.pace {  -webkit-pointer-events: none;  pointer-events: none;  -webkit-user-select: none;  -moz-user-select: none;  user-select: none;  z-index: 2000;  position: fixed;  margin: auto;  top: 10px;  left: 0;  right: 0;  height: 8px;  border-radius: 8px;  width: 4rem;  background: #eaecf2;  border: 1px #e3e8f7;  overflow: hidden;}.pace-inactive .pace-progress {  opacity: 0;  transition: 0.3s ease-in;}.pace .pace-progress {  -webkit-box-sizing: border-box;  -moz-box-sizing: border-box;  -ms-box-sizing: border-box;  -o-box-sizing: border-box;  box-sizing: border-box;  -webkit-transform: translate3d(0, 0, 0);  -moz-transform: translate3d(0, 0, 0);  -ms-transform: translate3d(0, 0, 0);  -o-transform: translate3d(0, 0, 0);  transform: translate3d(0, 0, 0);  max-width: 200px;  position: absolute;  z-index: 2000;  display: block;  top: 0;  right: 100%;  height: 100%;  width: 100%;  background: linear-gradient(-45deg, #ee7752, #e73c7e, #23a6d5, #23d5ab);  animation: gradient 1.5s ease infinite;  background-size: 200%;}.pace.pace-inactive {  opacity: 0;  transition: 0.3s;  top: -8px;}@keyframes gradient {  0% {    background-position: 0% 50%;  }  50% {    background-position: 100% 50%;  }  100% {    background-position: 0% 50%;  }}.loading-img {  background: url(https://bu.dusays.com/2022/11/23/637e2a79a3aa0.webp) no-repeat center center;  background-size: cover;}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>categories</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/rightMenu.css"/>
      <url>/css/rightMenu.css</url>
      
        <content type="html"><![CDATA[#rightMenu {    display: none;    position: fixed;    padding: 0 .25rem;    width: 9rem;    height: fit-content;    top: 10%;    left: 10%;    background-color: rgba(238, 255, 255, .85);    -webkit-backdrop-filter: blur(20px);    backdrop-filter: blur(20px);    color: #363636;    border-radius: 12px;    z-index: 99994;    border: #e3e8f7;    user-select: none;    box-shadow: rgba(0, 0, 0, .05);}#rightMenu a {    color: #363636;}#rightMenu .rightMenu-group {    padding: .35rem .3rem;    transition: .3s}#rightMenu .rightMenu-line {    border-top: 1px dashed #4259ef23}#rightMenu .rightMenu-group.rightMenu-small {    display: flex;    justify-content: space-between}#rightMenu .rightMenu-group .rightMenu-item {    border-radius: 8px;    transition: .3s;    cursor: pointer}#rightMenu .rightMenu-line .rightMenu-item {    margin: .25rem 0;    padding: .25rem 0}#rightMenu .rightMenu-group.rightMenu-line .rightMenu-item {    display: flex}#rightMenu .rightMenu-group .rightMenu-item:hover {    background-color: #6f42c1;    color: #fff;}#rightMenu .rightMenu-group .rightMenu-item:active {    transform: scale(.97)}#rightMenu .rightMenu-group .rightMenu-item i {    display: inline-block;    text-align: center;    line-height: 1.5rem;    width: 1.5rem;    padding: 0 .25rem}#rightMenu .rightMenu-line .rightMenu-item i {    margin: 0 .25rem}#rightMenu .rightMenu-group .rightMenu-item span {    line-height: 1.5rem}.rightMenu-small .rightMenu-item {    width: 30px;    height: 30px;    line-height: 30px}#rightmenu-mask {    position: fixed;    width: 100vw;    height: 100vh;    background: 0 0;    top: 0;    left: 0;    display: none;    z-index: 101;    margin: 0 !important;    z-index: 99993}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/readPercent.css"/>
      <url>/css/readPercent.css</url>
      
        <content type="html"><![CDATA[/* 返回顶部 */button#go-up #percent {    display: none;    font-weight: bold;    font-size: 15px !important;}button#go-up span {    font-size: 12px!important;    margin-right: -1px;}/* 鼠标滑动到按钮上时显示返回顶部图标 */button#go-up:hover i {    display: block !important;}button#go-up:hover #percent {    display: none !important;}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/runtime.min.css"/>
      <url>/css/runtime.min.css</url>
      
        <content type="html"><![CDATA[div#runtime{width:180px;margin:auto;color:#fff;padding-inline:5px;border-radius:10px;background-color:rgba(0,0,0,.7)}#workboard{font-size:12px}[data-theme=dark] div#runtime{color:#28b4c8;box-shadow:0 0 5px rgba(28,69,218,.71);animation:flashlight 1s linear infinite alternate}@-moz-keyframes flashlight{from{box-shadow:0 0 5px #1478d2}to{box-shadow:0 0 2px #1478d2}}@-webkit-keyframes flashlight{from{box-shadow:0 0 5px #1478d2}to{box-shadow:0 0 2px #1478d2}}@-o-keyframes flashlight{from{box-shadow:0 0 5px #1478d2}to{box-shadow:0 0 2px #1478d2}}@keyframes flashlight{from{box-shadow:0 0 5px #1478d2}to{box-shadow:0 0 2px #1478d2}}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>link</title>
      <link href="/link/index.html"/>
      <url>/link/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/universe.css"/>
      <url>/css/universe.css</url>
      
        <content type="html"><![CDATA[/* 背景宇宙星光  */#universe{    display: block;    position: fixed;    margin: 0;    padding: 0;    border: 0;    outline: 0;    left: 0;    top: 0;    width: 100%;    height: 100%;    pointer-events: none;    /* 这个是调置顶的优先级的，-1在文章页下面，背景上面，个人推荐这种 */    z-index: -1;  }]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/console.js"/>
      <url>/js/console.js</url>
      
        <content type="html"><![CDATA[var now1 = new Date();function createtime1() {    var grt = new Date("11/19/2022 00:00:00"); //建站时间    now1.setTime(now1.getTime() + 250);    var days = (now1 - grt) / 1000 / 60 / 60 / 24;    var dnum = Math.floor(days);    var ascll = [        `欢迎来到云水 OwO🍔の小家!`,        `Future is now 🍭🍭🍭`,        `        ▄▄▄▄▄▄▄▄▄▄▄  ▄            ▄▄▄▄▄▄▄▄▄▄▄  ▄         ▄  ▄▄▄▄▄▄▄▄▄▄   ▄         ▄  ▄▄▄▄▄▄▄▄▄▄▄  ▄▄▄▄▄▄▄▄▄▄▄         ▐░░░░░░░░░░░▌▐░▌          ▐░░░░░░░░░░░▌▐░▌       ▐░▌▐░░░░░░░░░░▌ ▐░▌       ▐░▌▐░░░░░░░░░░░▌▐░░░░░░░░░░░▌        ▐░█▀▀▀▀▀▀▀▀▀ ▐░▌          ▐░█▀▀▀▀▀▀▀█░▌▐░▌       ▐░▌▐░█▀▀▀▀▀▀▀█░▌▐░▌       ▐░▌ ▀▀▀▀▀▀▀▀▀█░▌▐░█▀▀▀▀▀▀▀█░▌        ▐░▌          ▐░▌          ▐░▌       ▐░▌▐░▌       ▐░▌▐░▌       ▐░▌▐░▌       ▐░▌          ▐░▌▐░▌       ▐░▌        ▐░▌          ▐░▌          ▐░▌       ▐░▌▐░▌       ▐░▌▐░▌       ▐░▌▐░█▄▄▄▄▄▄▄█░▌          ▐░▌▐░▌       ▐░▌        ▐░▌          ▐░▌          ▐░▌       ▐░▌▐░▌       ▐░▌▐░▌       ▐░▌▐░░░░░░░░░░░▌ ▄▄▄▄▄▄▄▄▄█░▌▐░▌       ▐░▌        ▐░▌          ▐░▌          ▐░▌       ▐░▌▐░▌       ▐░▌▐░▌       ▐░▌▐░█▀▀▀▀▀▀▀█░▌▐░░░░░░░░░░░▌▐░▌       ▐░▌        ▐░▌          ▐░▌          ▐░▌       ▐░▌▐░▌       ▐░▌▐░▌       ▐░▌▐░▌       ▐░▌▐░█▀▀▀▀▀▀▀▀▀ ▐░▌       ▐░▌        ▐░█▄▄▄▄▄▄▄▄▄ ▐░█▄▄▄▄▄▄▄▄▄ ▐░█▄▄▄▄▄▄▄█░▌▐░█▄▄▄▄▄▄▄█░▌▐░█▄▄▄▄▄▄▄█░▌▐░▌       ▐░▌▐░█▄▄▄▄▄▄▄▄▄ ▐░█▄▄▄▄▄▄▄█░▌        ▐░░░░░░░░░░░▌▐░░░░░░░░░░░▌▐░░░░░░░░░░░▌▐░░░░░░░░░░░▌▐░░░░░░░░░░▌ ▐░▌       ▐░▌▐░░░░░░░░░░░▌▐░░░░░░░░░░░▌         ▀▀▀▀▀▀▀▀▀▀▀  ▀▀▀▀▀▀▀▀▀▀▀  ▀▀▀▀▀▀▀▀▀▀▀  ▀▀▀▀▀▀▀▀▀▀▀  ▀▀▀▀▀▀▀▀▀▀   ▀         ▀  ▀▀▀▀▀▀▀▀▀▀▀  ▀▀▀▀▀▀▀▀▀▀▀                                                                                                                                                      `,        "小站已经苟活",        dnum,        "天啦!",        "©2022 By Cloudh2o",    ];    setTimeout(        console.log.bind(            console,            `\n%c${ascll[0]} %c ${ascll[1]} %c ${ascll[2]} %c${ascll[3]}%c ${ascll[4]}%c ${ascll[5]}\n\n%c ${ascll[6]}\n`,            "color:#39c5bb",            "",            "color:#39c5bb",            "color:#39c5bb",            "",            "color:#39c5bb",            ""        )    );}createtime1();function createtime2() {    var ascll2 = [`NCC2-036`, `调用前置摄像头拍照成功，识别为「小天才」`, `Photo captured: `, ` 🤪 `];    setTimeout(        console.log.bind(            console,            `%c ${ascll2[0]} %c ${ascll2[1]} %c \n${ascll2[2]} %c\n${ascll2[3]}`,            "color:white; background-color:#10bcc0",            "",            "",            'background:url("https://unpkg.zhimg.com/anzhiyu-assets@latest/image/common/tinggge.gif") no-repeat;font-size:450%'        )    );    setTimeout(console.log.bind(console, "%c WELCOME %c 欢迎光临，小天才捏", "color:white; background-color:#23c682", ""));    setTimeout(        console.warn.bind(            console,            "%c ⚡ Powered by 云水 OwO🍔 %c 你正在访问云水 OwO🍔の小家",            "color:white; background-color:#f0ad4e",            ""        )    );    setTimeout(console.log.bind(console, "%c W23-12 %c 系统监测到你已打开控制台", "color:white; background-color:#4f90d9", ""));    setTimeout(        console.warn.bind(console, "%c S013-782 %c 你现在正处于监控中", "color:white; background-color:#d9534f", "")    );}createtime2();// 重写console方法console.log = function () { };console.error = function () { };console.warn = function () { };]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>movie</title>
      <link href="/movies/index.html"/>
      <url>/movies/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/light.js"/>
      <url>/js/light.js</url>
      
        <content type="html"><![CDATA[// 霓虹灯效果// 颜色数组var arr = ["#39c5bb", "#f14747", "#f1a247", "#f1ee47", "#b347f1", "#1edbff", "#ed709b", "#5636ed"];// 颜色索引var idx = 0;// 切换颜色function changeColor() {    // 仅夜间模式才启用    if (document.getElementsByTagName('html')[0].getAttribute('data-theme') == 'dark') {        if (document.getElementById("site-name"))            document.getElementById("site-name").style.textShadow = arr[idx] + " 0 0 15px";        if (document.getElementById("site-title"))            document.getElementById("site-title").style.textShadow = arr[idx] + " 0 0 15px";        if (document.getElementById("site-subtitle"))            document.getElementById("site-subtitle").style.textShadow = arr[idx] + " 0 0 10px";        if (document.getElementById("post-info"))            document.getElementById("post-info").style.textShadow = arr[idx] + " 0 0 5px";        try {            document.getElementsByClassName("author-info__name")[0].style.textShadow = arr[idx] + " 0 0 12px";            document.getElementsByClassName("author-info__description")[0].style.textShadow = arr[idx] + " 0 0 12px";        } catch {                    }        idx++;        if (idx == 8) {            idx = 0;        }    } else {        // 白天模式恢复默认        if (document.getElementById("site-name"))            document.getElementById("site-name").style.textShadow = "#1e1e1ee0 1px 1px 1px";        if (document.getElementById("site-title"))            document.getElementById("site-title").style.textShadow = "#1e1e1ee0 1px 1px 1px";        if (document.getElementById("site-subtitle"))            document.getElementById("site-subtitle").style.textShadow = "#1e1e1ee0 1px 1px 1px";        if (document.getElementById("post-info"))            document.getElementById("post-info").style.textShadow = "#1e1e1ee0 1px 1px 1px";        try {            document.getElementsByClassName("author-info__name")[0].style.textShadow = "";            document.getElementsByClassName("author-info__description")[0].style.textShadow = "";        } catch {                    }    }}// 开启计时器window.onload = setInterval(changeColor, 1200);]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/rightMenu.js"/>
      <url>/js/rightMenu.js</url>
      
        <content type="html"><![CDATA[var rm = {};rm.showRightMenu = function (isTrue, x = 0, y = 0) {    let $rightMenu = $('#rightMenu');    $rightMenu.css('top', x + 'px').css('left', y + 'px');    if (isTrue) {        stopMaskScroll()        $rightMenu.show();    } else {        $rightMenu.hide();    }};let rmWidth = $('#rightMenu').width();let rmHeight = $('#rightMenu').height();rm.reloadrmSize = function () {    rmWidth = $("#rightMenu").width();    rmHeight = $("#rightMenu").height()};window.oncontextmenu = function (event) {    if (document.body.clientWidth > 768) {        let pageX = event.clientX + 10;        let pageY = event.clientY;        let $rightMenuNormal = $(".rightMenuNormal");        let $rightMenuOther = $(".rightMenuOther");        let $rightMenuReadmode = $("#menu-readmode");        $rightMenuNormal.show();        $rightMenuOther.show();        rm.reloadrmSize();        if (pageX + rmWidth > window.innerWidth) {            pageX -= rmWidth;        }        if (pageY + rmHeight > window.innerHeight) {            pageY -= rmHeight;        }        rm.showRightMenu(true, pageY, pageX);        $('#rightmenu-mask').attr('style', 'display: flex');        return false;    }};function removeRightMenu() {    rm.showRightMenu(false);    $('#rightmenu-mask').attr('style', 'display: none');}function stopMaskScroll() {    if (document.getElementById("rightmenu-mask")) {        let xscroll = document.getElementById("rightmenu-mask");        xscroll.addEventListener("mousewheel", function (e) {            removeRightMenu();        }, false);    };    if (document.getElementById("rightMenu")) {        let xscroll = document.getElementById("rightMenu");        xscroll.addEventListener("mousewheel", function (e) {            removeRightMenu();        }, false);    }}/** * @name:  切換模式 */function switchDarkMode() {    removeRightMenu();    const nowMode = document.documentElement.getAttribute('data-theme') === 'dark' ? 'dark' : 'light'    if (nowMode === 'light') {        activateDarkMode();        saveToLocal.set('theme', 'dark', 2);        GLOBAL_CONFIG.Snackbar !== undefined && btf.snackbarShow(GLOBAL_CONFIG.Snackbar.day_to_night);    } else {        activateLightMode();        saveToLocal.set('theme', 'light', 2);        GLOBAL_CONFIG.Snackbar !== undefined && btf.snackbarShow(GLOBAL_CONFIG.Snackbar.night_to_day);    }    typeof utterancesTheme === 'function' && utterancesTheme();    typeof FB === 'object' && window.loadFBComment();    window.DISQUS && document.getElementById('disqus_thread').children.length && setTimeout(() => window.disqusReset(), 200);};/* eslint-disable no-undef */document.addEventListener('DOMContentLoaded', function () {    translateInitialization();    document.addEventListener('pjax:complete', translateInitialization);});const translate = GLOBAL_CONFIG.translate;const snackbarData = GLOBAL_CONFIG.Snackbar;const defaultEncoding = translate.defaultEncoding; /* 網站默認語言，1: 繁體中文, 2: 簡體中文 */const translateDelay = translate.translateDelay; /* 延遲時間,若不在前, 要設定延遲翻譯時間, 如100表示100ms,默認為0 */const msgToTraditionalChinese = translate.msgToTraditionalChinese; /* 此處可以更改為你想要顯示的文字 */const msgToSimplifiedChinese = translate.msgToSimplifiedChinese; /* 同上，但兩處均不建議更改 */let currentEncoding = defaultEncoding;const targetEncodingCookie = 'translate-chn-cht';let targetEncoding =    saveToLocal.get(targetEncodingCookie) === undefined        ? defaultEncoding        : Number(saveToLocal.get('translate-chn-cht'));let translateButtonObjectconst isSnackbar = GLOBAL_CONFIG.Snackbar !== undefined;function translateText(txt) {    if (txt === '' || txt == null) return '';    if (currentEncoding === 1 && targetEncoding === 2) return Simplized(txt);    else if (currentEncoding === 2 && targetEncoding === 1) { return Traditionalized(txt) } else return txt;}function translateBody(fobj) {    let objs;    if (typeof fobj === 'object') objs = fobj.childNodes;    else objs = document.body.childNodes;    for (let i = 0; i < objs.length; i++) {        const obj = objs.item(i);        if (            '||BR|HR|'.indexOf('|' + obj.tagName + '|') > 0 ||            obj === translateButtonObject        ) { continue }        if (obj.title !== '' && obj.title != null) { obj.title = translateText(obj.title) };        if (obj.alt !== '' && obj.alt != null) obj.alt = translateText(obj.alt);        if (obj.placeholder !== '' && obj.placeholder != null) obj.placeholder = translateText(obj.placeholder);        if (            obj.tagName === 'INPUT' &&            obj.value !== '' &&            obj.type !== 'text' &&            obj.type !== 'hidden'        ) { obj.value = translateText(obj.value) }        if (obj.nodeType === 3) obj.data = translateText(obj.data);        else translateBody(obj);    }}function translatePage() {    if (targetEncoding === 1) {        currentEncoding = 1;        targetEncoding = 2;        saveToLocal.set(targetEncodingCookie, targetEncoding, 2);        translateBody();        if (isSnackbar) btf.snackbarShow(snackbarData.cht_to_chs);    } else if (targetEncoding === 2) {        currentEncoding = 2;        targetEncoding = 1;        saveToLocal.set(targetEncodingCookie, targetEncoding, 2);        translateBody();        if (isSnackbar) btf.snackbarShow(snackbarData.chs_to_cht);    }}function JTPYStr() {    return '万与丑专业丛东丝丢两严丧个丬丰临为丽举么义乌乐乔习乡书买乱争于亏云亘亚产亩亲亵亸亿仅从仑仓仪们价众优伙会伛伞伟传伤伥伦伧伪伫体余佣佥侠侣侥侦侧侨侩侪侬俣俦俨俩俪俭债倾偬偻偾偿傥傧储傩儿兑兖党兰关兴兹养兽冁内冈册写军农冢冯冲决况冻净凄凉凌减凑凛几凤凫凭凯击凼凿刍划刘则刚创删别刬刭刽刿剀剂剐剑剥剧劝办务劢动励劲劳势勋勐勚匀匦匮区医华协单卖卢卤卧卫却卺厂厅历厉压厌厍厕厢厣厦厨厩厮县参叆叇双发变叙叠叶号叹叽吁后吓吕吗吣吨听启吴呒呓呕呖呗员呙呛呜咏咔咙咛咝咤咴咸哌响哑哒哓哔哕哗哙哜哝哟唛唝唠唡唢唣唤唿啧啬啭啮啰啴啸喷喽喾嗫呵嗳嘘嘤嘱噜噼嚣嚯团园囱围囵国图圆圣圹场坂坏块坚坛坜坝坞坟坠垄垅垆垒垦垧垩垫垭垯垱垲垴埘埙埚埝埯堑堕塆墙壮声壳壶壸处备复够头夸夹夺奁奂奋奖奥妆妇妈妩妪妫姗姜娄娅娆娇娈娱娲娴婳婴婵婶媪嫒嫔嫱嬷孙学孪宁宝实宠审宪宫宽宾寝对寻导寿将尔尘尧尴尸尽层屃屉届属屡屦屿岁岂岖岗岘岙岚岛岭岳岽岿峃峄峡峣峤峥峦崂崃崄崭嵘嵚嵛嵝嵴巅巩巯币帅师帏帐帘帜带帧帮帱帻帼幂幞干并广庄庆庐庑库应庙庞废庼廪开异弃张弥弪弯弹强归当录彟彦彻径徕御忆忏忧忾怀态怂怃怄怅怆怜总怼怿恋恳恶恸恹恺恻恼恽悦悫悬悭悯惊惧惨惩惫惬惭惮惯愍愠愤愦愿慑慭憷懑懒懔戆戋戏戗战戬户扎扑扦执扩扪扫扬扰抚抛抟抠抡抢护报担拟拢拣拥拦拧拨择挂挚挛挜挝挞挟挠挡挢挣挤挥挦捞损捡换捣据捻掳掴掷掸掺掼揸揽揿搀搁搂搅携摄摅摆摇摈摊撄撑撵撷撸撺擞攒敌敛数斋斓斗斩断无旧时旷旸昙昼昽显晋晒晓晔晕晖暂暧札术朴机杀杂权条来杨杩杰极构枞枢枣枥枧枨枪枫枭柜柠柽栀栅标栈栉栊栋栌栎栏树栖样栾桊桠桡桢档桤桥桦桧桨桩梦梼梾检棂椁椟椠椤椭楼榄榇榈榉槚槛槟槠横樯樱橥橱橹橼檐檩欢欤欧歼殁殇残殒殓殚殡殴毁毂毕毙毡毵氇气氢氩氲汇汉污汤汹沓沟没沣沤沥沦沧沨沩沪沵泞泪泶泷泸泺泻泼泽泾洁洒洼浃浅浆浇浈浉浊测浍济浏浐浑浒浓浔浕涂涌涛涝涞涟涠涡涢涣涤润涧涨涩淀渊渌渍渎渐渑渔渖渗温游湾湿溃溅溆溇滗滚滞滟滠满滢滤滥滦滨滩滪漤潆潇潋潍潜潴澜濑濒灏灭灯灵灾灿炀炉炖炜炝点炼炽烁烂烃烛烟烦烧烨烩烫烬热焕焖焘煅煳熘爱爷牍牦牵牺犊犟状犷犸犹狈狍狝狞独狭狮狯狰狱狲猃猎猕猡猪猫猬献獭玑玙玚玛玮环现玱玺珉珏珐珑珰珲琎琏琐琼瑶瑷璇璎瓒瓮瓯电画畅畲畴疖疗疟疠疡疬疮疯疱疴痈痉痒痖痨痪痫痴瘅瘆瘗瘘瘪瘫瘾瘿癞癣癫癯皑皱皲盏盐监盖盗盘眍眦眬着睁睐睑瞒瞩矫矶矾矿砀码砖砗砚砜砺砻砾础硁硅硕硖硗硙硚确硷碍碛碜碱碹磙礼祎祢祯祷祸禀禄禅离秃秆种积称秽秾稆税稣稳穑穷窃窍窑窜窝窥窦窭竖竞笃笋笔笕笺笼笾筑筚筛筜筝筹签简箓箦箧箨箩箪箫篑篓篮篱簖籁籴类籼粜粝粤粪粮糁糇紧絷纟纠纡红纣纤纥约级纨纩纪纫纬纭纮纯纰纱纲纳纴纵纶纷纸纹纺纻纼纽纾线绀绁绂练组绅细织终绉绊绋绌绍绎经绐绑绒结绔绕绖绗绘给绚绛络绝绞统绠绡绢绣绤绥绦继绨绩绪绫绬续绮绯绰绱绲绳维绵绶绷绸绹绺绻综绽绾绿缀缁缂缃缄缅缆缇缈缉缊缋缌缍缎缏缐缑缒缓缔缕编缗缘缙缚缛缜缝缞缟缠缡缢缣缤缥缦缧缨缩缪缫缬缭缮缯缰缱缲缳缴缵罂网罗罚罢罴羁羟羡翘翙翚耢耧耸耻聂聋职聍联聩聪肃肠肤肷肾肿胀胁胆胜胧胨胪胫胶脉脍脏脐脑脓脔脚脱脶脸腊腌腘腭腻腼腽腾膑臜舆舣舰舱舻艰艳艹艺节芈芗芜芦苁苇苈苋苌苍苎苏苘苹茎茏茑茔茕茧荆荐荙荚荛荜荞荟荠荡荣荤荥荦荧荨荩荪荫荬荭荮药莅莜莱莲莳莴莶获莸莹莺莼萚萝萤营萦萧萨葱蒇蒉蒋蒌蓝蓟蓠蓣蓥蓦蔷蔹蔺蔼蕲蕴薮藁藓虏虑虚虫虬虮虽虾虿蚀蚁蚂蚕蚝蚬蛊蛎蛏蛮蛰蛱蛲蛳蛴蜕蜗蜡蝇蝈蝉蝎蝼蝾螀螨蟏衅衔补衬衮袄袅袆袜袭袯装裆裈裢裣裤裥褛褴襁襕见观觃规觅视觇览觉觊觋觌觍觎觏觐觑觞触觯詟誉誊讠计订讣认讥讦讧讨让讪讫训议讯记讱讲讳讴讵讶讷许讹论讻讼讽设访诀证诂诃评诅识诇诈诉诊诋诌词诎诏诐译诒诓诔试诖诗诘诙诚诛诜话诞诟诠诡询诣诤该详诧诨诩诪诫诬语诮误诰诱诲诳说诵诶请诸诹诺读诼诽课诿谀谁谂调谄谅谆谇谈谊谋谌谍谎谏谐谑谒谓谔谕谖谗谘谙谚谛谜谝谞谟谠谡谢谣谤谥谦谧谨谩谪谫谬谭谮谯谰谱谲谳谴谵谶谷豮贝贞负贠贡财责贤败账货质贩贪贫贬购贮贯贰贱贲贳贴贵贶贷贸费贺贻贼贽贾贿赀赁赂赃资赅赆赇赈赉赊赋赌赍赎赏赐赑赒赓赔赕赖赗赘赙赚赛赜赝赞赟赠赡赢赣赪赵赶趋趱趸跃跄跖跞践跶跷跸跹跻踊踌踪踬踯蹑蹒蹰蹿躏躜躯车轧轨轩轪轫转轭轮软轰轱轲轳轴轵轶轷轸轹轺轻轼载轾轿辀辁辂较辄辅辆辇辈辉辊辋辌辍辎辏辐辑辒输辔辕辖辗辘辙辚辞辩辫边辽达迁过迈运还这进远违连迟迩迳迹适选逊递逦逻遗遥邓邝邬邮邹邺邻郁郄郏郐郑郓郦郧郸酝酦酱酽酾酿释里鉅鉴銮錾钆钇针钉钊钋钌钍钎钏钐钑钒钓钔钕钖钗钘钙钚钛钝钞钟钠钡钢钣钤钥钦钧钨钩钪钫钬钭钮钯钰钱钲钳钴钵钶钷钸钹钺钻钼钽钾钿铀铁铂铃铄铅铆铈铉铊铋铍铎铏铐铑铒铕铗铘铙铚铛铜铝铞铟铠铡铢铣铤铥铦铧铨铪铫铬铭铮铯铰铱铲铳铴铵银铷铸铹铺铻铼铽链铿销锁锂锃锄锅锆锇锈锉锊锋锌锍锎锏锐锑锒锓锔锕锖锗错锚锜锞锟锠锡锢锣锤锥锦锨锩锫锬锭键锯锰锱锲锳锴锵锶锷锸锹锺锻锼锽锾锿镀镁镂镃镆镇镈镉镊镌镍镎镏镐镑镒镕镖镗镙镚镛镜镝镞镟镠镡镢镣镤镥镦镧镨镩镪镫镬镭镮镯镰镱镲镳镴镶长门闩闪闫闬闭问闯闰闱闲闳间闵闶闷闸闹闺闻闼闽闾闿阀阁阂阃阄阅阆阇阈阉阊阋阌阍阎阏阐阑阒阓阔阕阖阗阘阙阚阛队阳阴阵阶际陆陇陈陉陕陧陨险随隐隶隽难雏雠雳雾霁霉霭靓静靥鞑鞒鞯鞴韦韧韨韩韪韫韬韵页顶顷顸项顺须顼顽顾顿颀颁颂颃预颅领颇颈颉颊颋颌颍颎颏颐频颒颓颔颕颖颗题颙颚颛颜额颞颟颠颡颢颣颤颥颦颧风飏飐飑飒飓飔飕飖飗飘飙飚飞飨餍饤饥饦饧饨饩饪饫饬饭饮饯饰饱饲饳饴饵饶饷饸饹饺饻饼饽饾饿馀馁馂馃馄馅馆馇馈馉馊馋馌馍馎馏馐馑馒馓馔馕马驭驮驯驰驱驲驳驴驵驶驷驸驹驺驻驼驽驾驿骀骁骂骃骄骅骆骇骈骉骊骋验骍骎骏骐骑骒骓骔骕骖骗骘骙骚骛骜骝骞骟骠骡骢骣骤骥骦骧髅髋髌鬓魇魉鱼鱽鱾鱿鲀鲁鲂鲄鲅鲆鲇鲈鲉鲊鲋鲌鲍鲎鲏鲐鲑鲒鲓鲔鲕鲖鲗鲘鲙鲚鲛鲜鲝鲞鲟鲠鲡鲢鲣鲤鲥鲦鲧鲨鲩鲪鲫鲬鲭鲮鲯鲰鲱鲲鲳鲴鲵鲶鲷鲸鲹鲺鲻鲼鲽鲾鲿鳀鳁鳂鳃鳄鳅鳆鳇鳈鳉鳊鳋鳌鳍鳎鳏鳐鳑鳒鳓鳔鳕鳖鳗鳘鳙鳛鳜鳝鳞鳟鳠鳡鳢鳣鸟鸠鸡鸢鸣鸤鸥鸦鸧鸨鸩鸪鸫鸬鸭鸮鸯鸰鸱鸲鸳鸴鸵鸶鸷鸸鸹鸺鸻鸼鸽鸾鸿鹀鹁鹂鹃鹄鹅鹆鹇鹈鹉鹊鹋鹌鹍鹎鹏鹐鹑鹒鹓鹔鹕鹖鹗鹘鹚鹛鹜鹝鹞鹟鹠鹡鹢鹣鹤鹥鹦鹧鹨鹩鹪鹫鹬鹭鹯鹰鹱鹲鹳鹴鹾麦麸黄黉黡黩黪黾'}function FTPYStr() {    return '萬與醜專業叢東絲丟兩嚴喪個爿豐臨為麗舉麼義烏樂喬習鄉書買亂爭於虧雲亙亞產畝親褻嚲億僅從侖倉儀們價眾優夥會傴傘偉傳傷倀倫傖偽佇體餘傭僉俠侶僥偵側僑儈儕儂俁儔儼倆儷儉債傾傯僂僨償儻儐儲儺兒兌兗黨蘭關興茲養獸囅內岡冊寫軍農塚馮衝決況凍淨淒涼淩減湊凜幾鳳鳧憑凱擊氹鑿芻劃劉則剛創刪別剗剄劊劌剴劑剮劍剝劇勸辦務勱動勵勁勞勢勳猛勩勻匭匱區醫華協單賣盧鹵臥衛卻巹廠廳曆厲壓厭厙廁廂厴廈廚廄廝縣參靉靆雙發變敘疊葉號歎嘰籲後嚇呂嗎唚噸聽啟吳嘸囈嘔嚦唄員咼嗆嗚詠哢嚨嚀噝吒噅鹹呱響啞噠嘵嗶噦嘩噲嚌噥喲嘜嗊嘮啢嗩唕喚呼嘖嗇囀齧囉嘽嘯噴嘍嚳囁嗬噯噓嚶囑嚕劈囂謔團園囪圍圇國圖圓聖壙場阪壞塊堅壇壢壩塢墳墜壟壟壚壘墾坰堊墊埡墶壋塏堖塒塤堝墊垵塹墮壪牆壯聲殼壺壼處備複夠頭誇夾奪奩奐奮獎奧妝婦媽嫵嫗媯姍薑婁婭嬈嬌孌娛媧嫻嫿嬰嬋嬸媼嬡嬪嬙嬤孫學孿寧寶實寵審憲宮寬賓寢對尋導壽將爾塵堯尷屍盡層屭屜屆屬屢屨嶼歲豈嶇崗峴嶴嵐島嶺嶽崠巋嶨嶧峽嶢嶠崢巒嶗崍嶮嶄嶸嶔崳嶁脊巔鞏巰幣帥師幃帳簾幟帶幀幫幬幘幗冪襆幹並廣莊慶廬廡庫應廟龐廢廎廩開異棄張彌弳彎彈強歸當錄彠彥徹徑徠禦憶懺憂愾懷態慫憮慪悵愴憐總懟懌戀懇惡慟懨愷惻惱惲悅愨懸慳憫驚懼慘懲憊愜慚憚慣湣慍憤憒願懾憖怵懣懶懍戇戔戲戧戰戩戶紮撲扡執擴捫掃揚擾撫拋摶摳掄搶護報擔擬攏揀擁攔擰撥擇掛摯攣掗撾撻挾撓擋撟掙擠揮撏撈損撿換搗據撚擄摑擲撣摻摜摣攬撳攙擱摟攪攜攝攄擺搖擯攤攖撐攆擷擼攛擻攢敵斂數齋斕鬥斬斷無舊時曠暘曇晝曨顯晉曬曉曄暈暉暫曖劄術樸機殺雜權條來楊榪傑極構樅樞棗櫪梘棖槍楓梟櫃檸檉梔柵標棧櫛櫳棟櫨櫟欄樹棲樣欒棬椏橈楨檔榿橋樺檜槳樁夢檮棶檢欞槨櫝槧欏橢樓欖櫬櫚櫸檟檻檳櫧橫檣櫻櫫櫥櫓櫞簷檁歡歟歐殲歿殤殘殞殮殫殯毆毀轂畢斃氈毿氌氣氫氬氳彙漢汙湯洶遝溝沒灃漚瀝淪滄渢溈滬濔濘淚澩瀧瀘濼瀉潑澤涇潔灑窪浹淺漿澆湞溮濁測澮濟瀏滻渾滸濃潯濜塗湧濤澇淶漣潿渦溳渙滌潤澗漲澀澱淵淥漬瀆漸澠漁瀋滲溫遊灣濕潰濺漵漊潷滾滯灩灄滿瀅濾濫灤濱灘澦濫瀠瀟瀲濰潛瀦瀾瀨瀕灝滅燈靈災燦煬爐燉煒熗點煉熾爍爛烴燭煙煩燒燁燴燙燼熱煥燜燾煆糊溜愛爺牘犛牽犧犢強狀獷獁猶狽麅獮獰獨狹獅獪猙獄猻獫獵獼玀豬貓蝟獻獺璣璵瑒瑪瑋環現瑲璽瑉玨琺瓏璫琿璡璉瑣瓊瑤璦璿瓔瓚甕甌電畫暢佘疇癤療瘧癘瘍鬁瘡瘋皰屙癰痙癢瘂癆瘓癇癡癉瘮瘞瘺癟癱癮癭癩癬癲臒皚皺皸盞鹽監蓋盜盤瞘眥矓著睜睞瞼瞞矚矯磯礬礦碭碼磚硨硯碸礪礱礫礎硜矽碩硤磽磑礄確鹼礙磧磣堿镟滾禮禕禰禎禱禍稟祿禪離禿稈種積稱穢穠穭稅穌穩穡窮竊竅窯竄窩窺竇窶豎競篤筍筆筧箋籠籩築篳篩簹箏籌簽簡籙簀篋籜籮簞簫簣簍籃籬籪籟糴類秈糶糲粵糞糧糝餱緊縶糸糾紆紅紂纖紇約級紈纊紀紉緯紜紘純紕紗綱納紝縱綸紛紙紋紡紵紖紐紓線紺絏紱練組紳細織終縐絆紼絀紹繹經紿綁絨結絝繞絰絎繪給絢絳絡絕絞統綆綃絹繡綌綏絛繼綈績緒綾緓續綺緋綽緔緄繩維綿綬繃綢綯綹綣綜綻綰綠綴緇緙緗緘緬纜緹緲緝縕繢緦綞緞緶線緱縋緩締縷編緡緣縉縛縟縝縫縗縞纏縭縊縑繽縹縵縲纓縮繆繅纈繚繕繒韁繾繰繯繳纘罌網羅罰罷羆羈羥羨翹翽翬耮耬聳恥聶聾職聹聯聵聰肅腸膚膁腎腫脹脅膽勝朧腖臚脛膠脈膾髒臍腦膿臠腳脫腡臉臘醃膕齶膩靦膃騰臏臢輿艤艦艙艫艱豔艸藝節羋薌蕪蘆蓯葦藶莧萇蒼苧蘇檾蘋莖蘢蔦塋煢繭荊薦薘莢蕘蓽蕎薈薺蕩榮葷滎犖熒蕁藎蓀蔭蕒葒葤藥蒞蓧萊蓮蒔萵薟獲蕕瑩鶯蓴蘀蘿螢營縈蕭薩蔥蕆蕢蔣蔞藍薊蘺蕷鎣驀薔蘞藺藹蘄蘊藪槁蘚虜慮虛蟲虯蟣雖蝦蠆蝕蟻螞蠶蠔蜆蠱蠣蟶蠻蟄蛺蟯螄蠐蛻蝸蠟蠅蟈蟬蠍螻蠑螿蟎蠨釁銜補襯袞襖嫋褘襪襲襏裝襠褌褳襝褲襇褸襤繈襴見觀覎規覓視覘覽覺覬覡覿覥覦覯覲覷觴觸觶讋譽謄訁計訂訃認譏訐訌討讓訕訖訓議訊記訒講諱謳詎訝訥許訛論訩訟諷設訪訣證詁訶評詛識詗詐訴診詆謅詞詘詔詖譯詒誆誄試詿詩詰詼誠誅詵話誕詬詮詭詢詣諍該詳詫諢詡譸誡誣語誚誤誥誘誨誑說誦誒請諸諏諾讀諑誹課諉諛誰諗調諂諒諄誶談誼謀諶諜謊諫諧謔謁謂諤諭諼讒諮諳諺諦謎諞諝謨讜謖謝謠謗諡謙謐謹謾謫譾謬譚譖譙讕譜譎讞譴譫讖穀豶貝貞負貟貢財責賢敗賬貨質販貪貧貶購貯貫貳賤賁貰貼貴貺貸貿費賀貽賊贄賈賄貲賃賂贓資賅贐賕賑賚賒賦賭齎贖賞賜贔賙賡賠賧賴賵贅賻賺賽賾贗讚贇贈贍贏贛赬趙趕趨趲躉躍蹌蹠躒踐躂蹺蹕躚躋踴躊蹤躓躑躡蹣躕躥躪躦軀車軋軌軒軑軔轉軛輪軟轟軲軻轤軸軹軼軤軫轢軺輕軾載輊轎輈輇輅較輒輔輛輦輩輝輥輞輬輟輜輳輻輯轀輸轡轅轄輾轆轍轔辭辯辮邊遼達遷過邁運還這進遠違連遲邇逕跡適選遜遞邐邏遺遙鄧鄺鄔郵鄒鄴鄰鬱郤郟鄶鄭鄆酈鄖鄲醞醱醬釅釃釀釋裏钜鑒鑾鏨釓釔針釘釗釙釕釷釺釧釤鈒釩釣鍆釹鍚釵鈃鈣鈈鈦鈍鈔鍾鈉鋇鋼鈑鈐鑰欽鈞鎢鉤鈧鈁鈥鈄鈕鈀鈺錢鉦鉗鈷缽鈳鉕鈽鈸鉞鑽鉬鉭鉀鈿鈾鐵鉑鈴鑠鉛鉚鈰鉉鉈鉍鈹鐸鉶銬銠鉺銪鋏鋣鐃銍鐺銅鋁銱銦鎧鍘銖銑鋌銩銛鏵銓鉿銚鉻銘錚銫鉸銥鏟銃鐋銨銀銣鑄鐒鋪鋙錸鋱鏈鏗銷鎖鋰鋥鋤鍋鋯鋨鏽銼鋝鋒鋅鋶鐦鐧銳銻鋃鋟鋦錒錆鍺錯錨錡錁錕錩錫錮鑼錘錐錦鍁錈錇錟錠鍵鋸錳錙鍥鍈鍇鏘鍶鍔鍤鍬鍾鍛鎪鍠鍰鎄鍍鎂鏤鎡鏌鎮鎛鎘鑷鐫鎳鎿鎦鎬鎊鎰鎔鏢鏜鏍鏰鏞鏡鏑鏃鏇鏐鐔钁鐐鏷鑥鐓鑭鐠鑹鏹鐙鑊鐳鐶鐲鐮鐿鑔鑣鑞鑲長門閂閃閆閈閉問闖閏闈閑閎間閔閌悶閘鬧閨聞闥閩閭闓閥閣閡閫鬮閱閬闍閾閹閶鬩閿閽閻閼闡闌闃闠闊闋闔闐闒闕闞闤隊陽陰陣階際陸隴陳陘陝隉隕險隨隱隸雋難雛讎靂霧霽黴靄靚靜靨韃鞽韉韝韋韌韍韓韙韞韜韻頁頂頃頇項順須頊頑顧頓頎頒頌頏預顱領頗頸頡頰頲頜潁熲頦頤頻頮頹頷頴穎顆題顒顎顓顏額顳顢顛顙顥纇顫顬顰顴風颺颭颮颯颶颸颼颻飀飄飆飆飛饗饜飣饑飥餳飩餼飪飫飭飯飲餞飾飽飼飿飴餌饒餉餄餎餃餏餅餑餖餓餘餒餕餜餛餡館餷饋餶餿饞饁饃餺餾饈饉饅饊饌饢馬馭馱馴馳驅馹駁驢駔駛駟駙駒騶駐駝駑駕驛駘驍罵駰驕驊駱駭駢驫驪騁驗騂駸駿騏騎騍騅騌驌驂騙騭騤騷騖驁騮騫騸驃騾驄驏驟驥驦驤髏髖髕鬢魘魎魚魛魢魷魨魯魴魺鮁鮃鯰鱸鮋鮓鮒鮊鮑鱟鮍鮐鮭鮚鮳鮪鮞鮦鰂鮜鱠鱭鮫鮮鮺鯗鱘鯁鱺鰱鰹鯉鰣鰷鯀鯊鯇鮶鯽鯒鯖鯪鯕鯫鯡鯤鯧鯝鯢鯰鯛鯨鯵鯴鯔鱝鰈鰏鱨鯷鰮鰃鰓鱷鰍鰒鰉鰁鱂鯿鰠鼇鰭鰨鰥鰩鰟鰜鰳鰾鱈鱉鰻鰵鱅鰼鱖鱔鱗鱒鱯鱤鱧鱣鳥鳩雞鳶鳴鳲鷗鴉鶬鴇鴆鴣鶇鸕鴨鴞鴦鴒鴟鴝鴛鴬鴕鷥鷙鴯鴰鵂鴴鵃鴿鸞鴻鵐鵓鸝鵑鵠鵝鵒鷳鵜鵡鵲鶓鵪鶤鵯鵬鵮鶉鶊鵷鷫鶘鶡鶚鶻鶿鶥鶩鷊鷂鶲鶹鶺鷁鶼鶴鷖鸚鷓鷚鷯鷦鷲鷸鷺鸇鷹鸌鸏鸛鸘鹺麥麩黃黌黶黷黲黽'}function Traditionalized(cc) {    let str = '';    const ss = JTPYStr();    const tt = FTPYStr();    for (let i = 0; i < cc.length; i++) {        if (cc.charCodeAt(i) > 10000 && ss.indexOf(cc.charAt(i)) !== -1) { str += tt.charAt(ss.indexOf(cc.charAt(i))) } else str += cc.charAt(i)    };    return str;}function Simplized(cc) {    let str = '';    const ss = JTPYStr();    const tt = FTPYStr();    for (let i = 0; i < cc.length; i++) {        if (cc.charCodeAt(i) > 10000 && tt.indexOf(cc.charAt(i)) !== -1) { str += ss.charAt(tt.indexOf(cc.charAt(i))) } else str += cc.charAt(i)    }    return str;}function translateInitialization() {    translateButtonObject = document.getElementById('menu-translate');    if (translateButtonObject) {        if (currentEncoding !== targetEncoding) {            setTimeout(translateBody, translateDelay);        }        translateButtonObject.addEventListener('click', translatePage, false);    }}$('#menu-backward').on('click', function () { window.history.back(); });$('#menu-forward').on('click', function () { window.history.forward(); });$('#menu-refresh').on('click', function () { window.location.reload(); });$('#menu-darkmode').on('click', function () { switchDarkMode() });$('#menu-home').on('click', function () { window.location.href = window.location.origin; });/* 简体繁体切换 */$('#menu-translate').on('click', function () {    removeRightMenu();    translateInitialization();});$(".menu-link").on("click", function () {    removeRightMenu()});$("#rightmenu-mask").on("click", function () { removeRightMenu() });$("#rightmenu-mask").contextmenu(function () {    removeRightMenu();    return false;});]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/custom.js"/>
      <url>/js/custom.js</url>
      
        <content type="html"><![CDATA[document.onkeydown = function (e) {    if (123 == e.keyCode || (e.ctrlKey && e.shiftKey && (74 === e.keyCode || 73 === e.keyCode || 67 === e.keyCode)) || (e.ctrlKey && 85 === e.keyCode)) return btf.snackbarShow("你真坏，还想扒拉源代码QAQ!"), event.keyCode = 0, event.returnValue = !1, !1};]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/nav.js"/>
      <url>/js/nav.js</url>
      
        <content type="html"><![CDATA[document.addEventListener('pjax:complete', tonav);document.addEventListener('DOMContentLoaded', tonav);//响应pjaxfunction tonav() {    document.getElementById("name-container").setAttribute("style", "display:none");    var position = $(window).scrollTop();    $(window).scroll(function () {        var scroll = $(window).scrollTop();        if (scroll > position) {            document.getElementById("name-container").setAttribute("style", "");            document.getElementsByClassName("menus_items")[1].setAttribute("style", "display:none!important");        } else {            document.getElementsByClassName("menus_items")[1].setAttribute("style", "");            document.getElementById("name-container").setAttribute("style", "display:none");        }        position = scroll;    });    //修复没有弄右键菜单的童鞋无法回顶部的问题    document.getElementById("page-name").innerText = document.title.split(" | Fomalhaut🥝")[0];}function scrollToTop() {    document.getElementsByClassName("menus_items")[1].setAttribute("style", "");    document.getElementById("name-container").setAttribute("style", "display:none");    btf.scrollToDest(0, 500);}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/runtime.js"/>
      <url>/js/runtime.js</url>
      
        <content type="html"><![CDATA[var now=new Date;function createtime(){now.setTime(now.getTime()+1e3);var e=new Date("11/19/2022 00:00:00"),t=Math.trunc(234e8+(now-e)/1e3*17),a=(t/1496e5).toFixed(6),n=new Date("11/19/2022 00:00:00"),s=(now-n)/1e3/60/60/24,o=Math.floor(s),r=(now-n)/1e3/60/60-24*o,i=Math.floor(r);1==String(i).length&&(i="0"+i);var l=(now-n)/1e3/60-1440*o-60*i,b=Math.floor(l);1==String(b).length&&(b="0"+b);var d=(now-n)/1e3-86400*o-3600*i-60*b,c=Math.round(d);1==String(c).length&&(c="0"+c);let g="";g=i<18&&i>=9?`<img class='boardsign' src='https://img.shields.io/badge/CloudH2O-%E4%B8%8A%E7%8F%AD%E6%91%B8%E9%B1%BC%E4%B8%AD-6adea8?style=social&logo=cakephp' title='距离月入25k也就还差一个大佬带我~'><span class='textTip'> <br> <b>本站居然运行了 ${o} 天</span><span id='runtime'> ${i} 小时 ${b} 分 ${c} 秒 </b></span> <i id="heartbeat" class='fas fa-heartbeat' style='color:red'></i> <br> <b>旅行者 1 号当前距离地球 ${t} 千米，约为 ${a} 个天文单位 🚀</b> <br> <b><font size=2px>再看看那个光点，它就在这里，这是家园，这是我们 —— 你所爱的每一个人，你认识的一个人，你听说过的每一个人，曾经有过的每一个人，都在它上面度过他们的一生✨</font></b> `:`<img class='boardsign' src='https://img.shields.io/badge/CloudH2O-打烊休息啦-6adea8?style=social&logo=coffeescript' title='下班了就该开开心心的玩耍，嘿嘿~'><span class='textTip'><br><b>本站居然运行了 ${o} 天</span><span id='runtime'> ${i} 小时 ${b} 分 ${c} 秒 </b></span><i id="heartbeat" class='fas fa-heartbeat' style='color:red'></i><br> <b>旅行者 1 号当前距离地球 ${t} 千米，约为 ${a} 个天文单位 🚀</b> <br> <b><font size=2px>再看看那个光点，它就在这里，这是家园，这是我们 —— 你所爱的每一个人，你认识的一个人，你听说过的每一个人，曾经有过的每一个人，都在它上面度过他们的一生✨</font></b> `,document.getElementById("workboard")&&(document.getElementById("workboard").innerHTML=g)}setInterval((()=>{createtime()}),1e3);]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/readPercent.js"/>
      <url>/js/readPercent.js</url>
      
        <content type="html"><![CDATA[window.onscroll = percent;// 执行函数// 页面百分比function percent() {    let a = document.documentElement.scrollTop || window.pageYOffset, // 卷去高度        b = Math.max(document.body.scrollHeight, document.documentElement.scrollHeight, document.body.offsetHeight, document.documentElement.offsetHeight, document.body.clientHeight, document.documentElement.clientHeight) - document.documentElement.clientHeight, // 整个网页高度        result = Math.round(a / b * 100), // 计算百分比        up = document.querySelector("#go-up") // 获取按钮    if (result <= 95) {        up.childNodes[0].style.display = 'none'        up.childNodes[1].style.display = 'block'        up.childNodes[1].innerHTML = result;    } else {        up.childNodes[1].style.display = 'none'        up.childNodes[0].style.display = 'block'    }}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/title.js"/>
      <url>/js/title.js</url>
      
        <content type="html"><![CDATA[//动态标题var OriginTitile = document.title;var titleTime;document.addEventListener('visibilitychange', function () {  if (document.hidden) {    //离开当前页面时标签显示内容    document.title = '快回来捏OwO';    clearTimeout(titleTime);  } else {    //返回当前页面时标签显示内容    document.title = '哎鸭回来了';    //两秒后变回正常标题    titleTime = setTimeout(function () {      document.title = OriginTitile;    }, 2000);  }});]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/universe.js"/>
      <url>/js/universe.js</url>
      
        <content type="html"><![CDATA[function dark() {window.requestAnimationFrame=window.requestAnimationFrame||window.mozRequestAnimationFrame||window.webkitRequestAnimationFrame||window.msRequestAnimationFrame;var n,e,i,h,t=.05,s=document.getElementById("universe"),o=!0,a="180,184,240",r="226,225,142",d="226,225,224",c=[];function f(){n=window.innerWidth,e=window.innerHeight,i=.216*n,s.setAttribute("width",n),s.setAttribute("height",e)}function u(){h.clearRect(0,0,n,e);for(var t=c.length,i=0;i<t;i++){var s=c[i];s.move(),s.fadeIn(),s.fadeOut(),s.draw()}}function y(){this.reset=function(){this.giant=m(3),this.comet=!this.giant&&!o&&m(10),this.x=l(0,n-10),this.y=l(0,e),this.r=l(1.1,2.6),this.dx=l(t,6*t)+(this.comet+1-1)*t*l(50,120)+2*t,this.dy=-l(t,6*t)-(this.comet+1-1)*t*l(50,120),this.fadingOut=null,this.fadingIn=!0,this.opacity=0,this.opacityTresh=l(.2,1-.4*(this.comet+1-1)),this.do=l(5e-4,.002)+.001*(this.comet+1-1)},this.fadeIn=function(){this.fadingIn&&(this.fadingIn=!(this.opacity>this.opacityTresh),this.opacity+=this.do)},this.fadeOut=function(){this.fadingOut&&(this.fadingOut=!(this.opacity<0),this.opacity-=this.do/2,(this.x>n||this.y<0)&&(this.fadingOut=!1,this.reset()))},this.draw=function(){if(h.beginPath(),this.giant)h.fillStyle="rgba("+a+","+this.opacity+")",h.arc(this.x,this.y,2,0,2*Math.PI,!1);else if(this.comet){h.fillStyle="rgba("+d+","+this.opacity+")",h.arc(this.x,this.y,1.5,0,2*Math.PI,!1);for(var t=0;t<30;t++)h.fillStyle="rgba("+d+","+(this.opacity-this.opacity/20*t)+")",h.rect(this.x-this.dx/4*t,this.y-this.dy/4*t-2,2,2),h.fill()}else h.fillStyle="rgba("+r+","+this.opacity+")",h.rect(this.x,this.y,this.r,this.r);h.closePath(),h.fill()},this.move=function(){this.x+=this.dx,this.y+=this.dy,!1===this.fadingOut&&this.reset(),(this.x>n-n/4||this.y<0)&&(this.fadingOut=!0)},setTimeout(function(){o=!1},50)}function m(t){return Math.floor(1e3*Math.random())+1<10*t}function l(t,i){return Math.random()*(i-t)+t}f(),window.addEventListener("resize",f,!1),function(){h=s.getContext("2d");for(var t=0;t<i;t++)c[t]=new y,c[t].reset();u()}(),function t(){document.getElementsByTagName('html')[0].getAttribute('data-theme')=='dark'&&u(),window.requestAnimationFrame(t)}()};dark()]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>music</title>
      <link href="/music/index.html"/>
      <url>/music/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>tags</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
  
</search>
